<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OpcLabs.EasyOpcUA</name>
    </assembly>
    <members>
        <member name="T:OpcLabs.BaseLib.AssemblyNames">
            <exclude/>  
        </member>
        <member name="T:OpcLabs.BaseLib.PublicKeyTokens">
            <exclude/>  
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.AssemblyNames">
            <exclude/>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.Diagnostics.Resource1">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.Diagnostics.Resource1.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.Diagnostics.Resource1.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.Diagnostics.Resource1.EasyUAClientEventSource_LicensingCheckInvalid">
            <summary>
              Looks up a localized string similar to License validity check for EasyUAClient component has failed. {0}.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.Diagnostics.Resource1.EasyUAClientEventSource_LicensingCheckValid">
            <summary>
              Looks up a localized string similar to License validity check for EasyUAClient component has been successful..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.Diagnostics.Resource1.EasyUAClientEventSource_LicensingStarted">
            <summary>
              Looks up a localized string similar to Licensing for EasyUAClient component started, license serial number {0}, issuer name &quot;{1}&quot;, subject name &quot;{2}&quot;..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.Diagnostics.Resource1.EasyUAClientEventSource_RaiseEventError">
             <summary>
               Looks up a localized string similar to RAISE EVENT ERROR. An exception of type &apos;{1}&apos; from source &apos;{2}&apos; has occurred in an event handler with event arguments type &apos;{0}&apos;. The exception descend follows.
            {3}.
             </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.Diagnostics.EasyUAClientEventIds">
            <exclude/>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.EasyUAEngineException">
            <summary>
            An exception specific to <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> component.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAEngineException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with information about the 
            class instance.</summary>
            <param name="info"><inheritdoc/>  </param>
            <param name="context"><inheritdoc/>  </param>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.NamespaceDoc">
            <summary>
            This namespace contains classes that facilitate easy work with OPC Unified Architecture (OPC-UA).
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.Diagnostics.EasyUAClientEventSource">
            <exclude/>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.EasyUAClient">
            <summary>
            The EasyUAClient object is the main object that allows simple access to OPC Unified Architecture servers.
            </summary>
            <example>
            <code 
                source="..\..\Examples\CSharp\VS2008\Console\UADocExamples\_EasyUAClient.ReadValue.Overload1.cs" 
                lang="CSharp" 
                region="Example"/>
            <code 
                source="..\..\Examples\VBNET\VS2008\Console\UADocExamples\_EasyUAClient.ReadValue.Overload1.vb" 
                lang="VBNET" 
                region="Example"/>
            </example>
            <example>
            <code 
                source="..\..\Examples\CSharp\VS2008\Console\UADocExamples\_EasyUAClient.SubscribeMonitoredItem.Overload1.cs" 
                lang="CSharp" 
                region="Example"/>
            <code 
                source="..\..\Examples\VBNET\VS2008\Console\UADocExamples\_EasyUAClient.SubscribeMonitoredItem.Overload1.vb" 
                lang="VBNET" 
                region="Example"/>
            </example>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.EasyUAClient.DefaultIsolated">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.UA.EasyUAClient.Isolated"/> property. Equals to <c>false</c>.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.ResetIsolatedDiscoveryParameters">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.UA.EasyUAClient.IsolatedDiscoveryParameters"/> to a default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.ShouldSerializeIsolatedDiscoveryParameters">
            <summary>
            Determines whether the <see cref="P:OpcLabs.EasyOpc.UA.EasyUAClient.IsolatedDiscoveryParameters"/> is not empty.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.ResetIsolatedHostParameters">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.UA.EasyUAClient.IsolatedHostParameters"/> to a default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.ShouldSerializeIsolatedHostParameters">
            <summary>
            Determines whether the <see cref="P:OpcLabs.EasyOpc.UA.EasyUAClient.IsolatedHostParameters"/> is not empty.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.ResetIsolatedMonitoredItemParameters">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.UA.EasyUAClient.IsolatedMonitoredItemParameters"/> to a default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.ShouldSerializeIsolatedMonitoredItemParameters">
            <summary>
            Determines whether the <see cref="P:OpcLabs.EasyOpc.UA.EasyUAClient.IsolatedMonitoredItemParameters"/> is not empty.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.ResetIsolatedSessionParameters">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.UA.EasyUAClient.IsolatedSessionParameters"/> to a default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.ShouldSerializeIsolatedSessionParameters">
            <summary>
            Determines whether the <see cref="P:OpcLabs.EasyOpc.UA.EasyUAClient.IsolatedSessionParameters"/> is not empty.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.ResetIsolatedSubscriptionParameters">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.UA.EasyUAClient.IsolatedSubscriptionParameters"/> to a default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.ShouldSerializeIsolatedSubscriptionParameters">
            <summary>
            Determines whether the <see cref="P:OpcLabs.EasyOpc.UA.EasyUAClient.IsolatedSubscriptionParameters"/> is not empty.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.#ctor">
            <summary>Initializes a new instance of the class.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Required for Windows.Forms Class Composition Designer support
            </summary>
            <param name="container">The component container to which the new instance will be added.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.op_Equality(OpcLabs.EasyOpc.UA.EasyUAClient,OpcLabs.EasyOpc.UA.EasyUAClient)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.op_Inequality(OpcLabs.EasyOpc.UA.EasyUAClient,OpcLabs.EasyOpc.UA.EasyUAClient)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.ClearValidatedCertificates">
            <summary>
            Clears the list of validated certificates kept by the component.
            </summary>
            <remarks>
            You may need to call this method e.g. if you change the global certificate acceptance policy.
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.CloseAll">
            <summary>
            Closes all unused sessions that are open to OPC-UA servers.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.Install">
            <summary>
            Creates an application instance certificate if it does not exist.
            </summary>
            <remarks>You can explicitly call this method as part of installation procedure, with administrative rights
            so that the necessary operations can be performed.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.RetryAll">
            <summary>
            Forces a retrial on all objects that are in a failure state.
            </summary>
            <remarks>
            <para>
            Individual monitored items, subscriptions, sessions, and the overall controlling engine can be put into a failure 
            when an error occurs while connecting to them, or a serious error renders them unusable later. In such case,
            the component will automaticaly retry to connect these objects again, after a configurable delay. </para>
            <para>
            This method terminates the waiting delay, and causes all such objects to be retried on next opportunity.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.Uninstall">
            <summary>
            Reverts the changes made by <see cref="M:OpcLabs.EasyOpc.UA.EasyUAClient.Install"/> method.
            </summary>
            <remarks>The current implemenatation does nothing.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.IsOptionAllowed(System.String)">
            <exclude/>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.Reset">
            <summary>
            Sets the object properties back to their defaults.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.BrowseDataNodes(OpcLabs.EasyOpc.UA.UAEndpointDescriptor)">
             <overloads>
             <summary>
             Browses the data nodes in OPC server's address space. Starts from the specified node (or Objects folder), and 
             returns information about child nodes found.
             </summary>
             </overloads>
            
             <summary>
             Browses the data nodes, specifying an endpoint descriptor, and starting from the Objects folder.
             </summary>
             <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
             <returns>The method returns a node element collection, which is keyed by the node browse name, and contains
             <see cref="T:OpcLabs.EasyOpc.UA.UANodeElement"/> values. Each element contains information about a particular node found.</returns>
             <example>
             <code source="..\..\Examples\CSharp\VS2008\Console\UADocExamples\_EasyUAClient.BrowseDataNodes.Overload1.cs" lang="CSharp" region="Example"/>
             <code source="..\..\Examples\VBNET\VS2008\Console\UADocExamples\_EasyUAClient.BrowseDataNodes.Overload1.vb" lang="VBNET" region="Example"/>
             </example>
             <remarks>
             <para>
             This overload starts the browsing from the Objects folder.</para>
             <para>
             Data nodes are Objects and Variables (Variables are Data Variables and Properties).</para>
             </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.BrowseDataNodes(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor)">
            <summary>
            Browses the data nodes, specifying an endpoint descriptor, and a starting Node Id.
            </summary>
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeDescriptor">Node Id.</param>
            <returns>The method returns a node element collection, which is keyed by the node browse name, and contains
            <see cref="T:OpcLabs.EasyOpc.UA.UANodeElement"/> values. Each element contains information about a particular node found.</returns>
            <remarks>
            <para>
            Data nodes are Objects and Variables (Variables are Data Variables and Properties).</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.BrowseDataVariables(OpcLabs.EasyOpc.UA.UAEndpointDescriptor)">
             <overloads>
             <summary>
             Browses the Data Variables in OPC server's address space. Starts from the specified node (or Objects folder), and 
             returns information about child nodes found.
             </summary>
             </overloads>
            
             <summary>
             Browses the Data Variables, specifying an endpoint descriptor, and starting from the Objects folder.
             </summary>
             <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
             <returns>The method returns a node element collection, which is keyed by the node browse name, and contains
             <see cref="T:OpcLabs.EasyOpc.UA.UANodeElement"/> values. Each element contains information about a particular node found.</returns>
             <remarks>
             <para>
             This overload starts the browsing from the Objects folder.</para>
             </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.BrowseDataVariables(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor)">
            <summary>
            Browses the Data Variables, specifying an endpoint descriptor, and a starting Node Id.
            </summary>
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeDescriptor">Node descriptor. Identifies the node in OPC server's address space.</param>
            <returns>The method returns a node element collection, which is keyed by the node browse name, and contains
            <see cref="T:OpcLabs.EasyOpc.UA.UANodeElement"/> values. Each element contains information about a particular node found.</returns>
            <example>
            <code source="..\..\Examples\CSharp\VS2008\Console\UADocExamples\_EasyUAClient.BrowseDataVariables.Overload2.cs" lang="CSharp" region="Example"/>
            <code source="..\..\Examples\VBNET\VS2008\Console\UADocExamples\_EasyUAClient.BrowseDataVariables.Overload2.vb" lang="VBNET" region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.BrowseMethods(OpcLabs.EasyOpc.UA.UAEndpointDescriptor)">
             <overloads>
             <summary>
             Browses the Methods in OPC server's address space. Starts from the specified node (or Objects folder), and 
             returns information about child nodes found.
             </summary>
             </overloads>
            
             <summary>
             Browses the Methods, specifying an endpoint descriptor, and starting from the Objects folder.
             </summary>
             <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
             <returns>The method returns a node element collection, which is keyed by the node browse name, and contains
             <see cref="T:OpcLabs.EasyOpc.UA.UANodeElement"/> values. Each element contains information about a particular node found.</returns>
             <remarks>
             <para>
             This overload starts the browsing from the Objects folder.</para>
             </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.BrowseMethods(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor)">
            <summary>
            Browses the Methods, specifying an endpoint descriptor, and a starting Node Id.
            </summary>
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeDescriptor">Node descriptor. Identifies the node in OPC server's address space.</param>
            <returns>The method returns a node element collection, which is keyed by the node browse name, and contains
            <see cref="T:OpcLabs.EasyOpc.UA.UANodeElement"/> values. Each element contains information about a particular node found.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.BrowseNodes(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor,OpcLabs.EasyOpc.UA.UABrowseParameters)">
            <summary>
            Browses the nodes in OPC server's address space. Starts from the specified node, and 
            returns information about child nodes found.
            </summary>
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeDescriptor">Node descriptor. Identifies the node in OPC server's address space.</param>
            <param name="browseParameters">Specifies which nodes will be returned.</param>
            <returns>The method returns a node element collection, which is keyed by the node browse name, and contains
            <see cref="T:OpcLabs.EasyOpc.UA.UANodeElement"/> values. Each element contains information about a particular node found.</returns>
            <example>
            <code source="..\..\Examples\CSharp\VS2008\Console\UADocExamples\_EasyUAClient.BrowseNodes.Main.cs" lang="CSharp" region="Example"/>
            <code source="..\..\Examples\VBNET\VS2008\Console\UADocExamples\_EasyUAClient.BrowseNodes.Main.vb" lang="VBNET" region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.BrowseObjects(OpcLabs.EasyOpc.UA.UAEndpointDescriptor)">
             <overloads>
             <summary>
             Browses the Objects in OPC server's address space. Starts from the specified node (or Objects folder), and 
             returns information about child nodes found.
             </summary>
             </overloads>
            
             <summary>
             Browses the Objects, specifying an endpoint descriptor, and starting from the Objects folder.
             </summary>
             <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
             <returns>The method returns a node element collection, which is keyed by the node browse name, and contains
             <see cref="T:OpcLabs.EasyOpc.UA.UANodeElement"/> values. Each element contains information about a particular node found.</returns>
             <remarks>
             <para>
             This overload starts the browsing from the Objects folder.</para>
             </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.BrowseObjects(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor)">
            <summary>
            Browses the Objects, specifying an endpoint descriptor, and a starting Node Id.
            </summary>
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeDescriptor">Node descriptor. Identifies the node in OPC server's address space.</param>
            <returns>The method returns a node element collection, which is keyed by the node browse name, and contains
            <see cref="T:OpcLabs.EasyOpc.UA.UANodeElement"/> values. Each element contains information about a particular node found.</returns>
            <example>
            <code source="..\..\Examples\CSharp\VS2008\Console\UADocExamples\_EasyUAClient.BrowseObjects.Overload2.cs" lang="CSharp" region="Example"/>
            <code source="..\..\Examples\VBNET\VS2008\Console\UADocExamples\_EasyUAClient.BrowseObjects.Overload2.vb" lang="VBNET" region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.BrowseProperties(OpcLabs.EasyOpc.UA.UAEndpointDescriptor)">
             <overloads>
             <summary>
             Browses the Properties in OPC server's address space. Starts from the specified node (or Objects folder), and 
             returns information about child nodes found.
             </summary>
             </overloads>
            
             <summary>
             Browses the Properties, specifying an endpoint descriptor, and starting from the Objects folder.
             </summary>
             <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
             <returns>The method returns a node element collection, which is keyed by the node browse name, and contains
             <see cref="T:OpcLabs.EasyOpc.UA.UANodeElement"/> values. Each element contains information about a particular node found.</returns>
             <remarks>
             <para>
             This overload starts the browsing from the Objects folder.</para>
             </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.BrowseProperties(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor)">
            <summary>
            Browses the Properties, specifying an endpoint descriptor, and a starting Node Id.
            </summary>
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeDescriptor">Node descriptor. Identifies the node in OPC server's address space.</param>
            <returns>The method returns a node element collection, which is keyed by the node browse name, and contains
            <see cref="T:OpcLabs.EasyOpc.UA.UANodeElement"/> values. Each element contains information about a particular node found.</returns>
            <example>
            <code source="..\..\Examples\CSharp\VS2008\Console\UADocExamples\_EasyUAClient.BrowseProperties.Overload2.cs" lang="CSharp" region="Example"/>
            <code source="..\..\Examples\VBNET\VS2008\Console\UADocExamples\_EasyUAClient.BrowseProperties.Overload2.vb" lang="VBNET" region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.BrowseVariables(OpcLabs.EasyOpc.UA.UAEndpointDescriptor)">
             <overloads>
             <summary>
             Browses the Variables in OPC server's address space. Starts from the specified node (or Objects folder), and 
             returns information about child nodes found.
             </summary>
             </overloads>
            
             <summary>
             Browses the Variables, specifying an endpoint descriptor, and starting from the Objects folder.
             </summary>
             <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
             <returns>The method returns a node element collection, which is keyed by the node browse name, and contains
             <see cref="T:OpcLabs.EasyOpc.UA.UANodeElement"/> values. Each element contains information about a particular node found.</returns>
             <remarks>
             <para>
             Variables are Data Variables and Properties.</para>
             <para>
             This overload starts the browsing from the Objects folder.</para>
             </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.BrowseVariables(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor)">
            <summary>
            Browses the Variables, specifying an endpoint descriptor, and a starting Node Id.
            </summary>
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeDescriptor">Node descriptor. Identifies the node in OPC server's address space.</param>
            <returns>The method returns a node element collection, which is keyed by the node browse name, and contains
            <see cref="T:OpcLabs.EasyOpc.UA.UANodeElement"/> values. Each element contains information about a particular node found.</returns>
            <remarks>
            <para>
            Variables are Data Variables and Properties.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.CallMethod(OpcLabs.EasyOpc.UA.UACallArguments)">
             <overloads>
             <summary>
             Calls (invokes) a method (or methods) in an OPC server. Input and output arguments can be passed to/from methods.
             </summary>
             </overloads>
            
             <summary>
             Calls a specified method, using an object that holds all necessary arguments. 
             </summary>
             <param name="callArguments">Specifies which method to call in an OPC-UA server, and its input arguments.</param>
             <returns>Array of output arguments from the method call. The number of arguments and their types are given by the 
             method.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.CallMethod(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor)">
            <summary>
            Calls a method with no input arguments, using an endpoint descriptor and an object node Id.
            </summary>
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="objectNodeDescriptor">Node descriptor. Identifies the node in OPC server's address space.</param>
            <param name="methodNodeDescriptor">Method Node Id. Identifies the method node in OPC server's address space.</param>
            <returns>Array of output arguments from the method call. The number of arguments and their types are given by the 
            method.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.CallMethod(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor,System.Object[])">
            <summary>
            Calls a method with specified input arguments, using an endpoint descriptor and an object node Id.
            </summary>
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="objectNodeDescriptor">Node descriptor. Identifies the node in OPC server's address space.</param>
            <param name="methodNodeDescriptor">Method Node Id. Identifies the method node in OPC server's address space.</param>
            <param name="inputArgumentArray">Array of input arguments to the method call. The number of arguments and their 
            types must conform to the method's requirements.</param>
            <returns>Array of output arguments from the method call. The number of arguments and their types are given by the 
            method.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.CallMultipleMethods(OpcLabs.EasyOpc.UA.UACallArguments[])">
            <summary>
            Calls multiple methods, using array of argument objects as an input. 
            </summary>
            <param name="callArgumentsArray">Specifies which methods to call in an OPC-UA server, and their input arguments.
            </param>
            <returns>Array of output arguments from the method call. The number of arguments and their types are given by the 
            method.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.ChangeMonitoredItemSubscription(System.Int32,System.Int32)">
            <overloads>
            Changes parameters of a subscription to a particular monitored item.
            <remarks>
            <para>It is more efficient to change multiple subscriptions using 
            <c>MultipleMonitoredItemSubscriptions</c> method.</para>
            </remarks>
            </overloads>
            
            <summary>
            Changes parameters of a subscription. Specify the handle, and a new sampling interval.
            </summary>
            <param name="handle">Monitored item subscription handle as returned by the subscription method.</param>
            <param name="samplingInterval">The sampling interval (in milliseconds) indicates the fastest rate at which the 
            Server should sample its underlying source for data changes.</param>
            <example>
            <code 
                source="..\..\Examples\CSharp\VS2008\Console\UADocExamples\_EasyUAClient.ChangeMonitoredItemSubscription.Overload1.cs" 
                lang="CSharp" 
                region="Example"/>
            <code 
                source="..\..\Examples\VBNET\VS2008\Console\UADocExamples\_EasyUAClient.ChangeMonitoredItemSubscription.Overload1.vb" 
                lang="VBNET" 
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.ChangeMonitoredItemSubscription(System.Int32,System.Int32,System.Double)">
            <summary>
            Changes parameters of a subscription. Specify the handle, a new sampling interval and absolute deadband value.
            </summary>
            <param name="handle">Monitored item subscription handle as returned by the subscription method.</param>
            <param name="samplingInterval">The sampling interval (in milliseconds) indicates the fastest rate at which the 
            Server should sample its underlying source for data changes.</param>
            <param name="absoluteDeadbandValue">The value of absolute deadband.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.ChangeMonitoredItemSubscription(System.Int32,OpcLabs.EasyOpc.UA.UAMonitoringParameters)">
            <summary>
            Changes parameters of a subscription. Specify the handle, and a new monitoring parameters object.
            </summary>
            <param name="handle">Monitored item subscription handle as returned by the subscription method.</param>
            <param name="monitoringParameters">Contains monitoring parameters (such as the sampling interval, and optional 
            data change filter).</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.ChangeMonitoredItemSubscription(OpcLabs.EasyOpc.UA.EasyUASubscriptionChangeArguments)">
            <summary>
            Changes parameters of a subscription, specifying an object containing all necessary arguments.
            </summary>
            <param name="subscriptionChangeArguments">Arguments specifying which subscription to change and how.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.ChangeMultipleMonitoredItemSubscriptions(OpcLabs.EasyOpc.UA.EasyUASubscriptionChangeArguments[])">
            <overloads>
            <summary>
            Changes parameters of subscriptions to multiple monitored items.
            </summary>
            </overloads>
            
            <summary>
            Changes parameters of multiple subscriptions, specifying objects containing all necessary 
            arguments.
            </summary>
            <param name="subscriptionChangeArgumentsArray">Array of arguments, one element per each monitored item involved in 
            the operation.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.ChangeMultipleMonitoredItemSubscriptions(System.Int32[],System.Int32)">
            <summary>
            Changes parameters of multiple subscriptions. Specify the handles, and a new sampling interval.
            </summary>
            <param name="handleArray">Array of subscription handles</param>
            <param name="samplingInterval">The sampling interval (in milliseconds) indicates the fastest rate at which the 
            Server should sample its underlying source for data changes.</param>
            <example>
            <code 
                source="..\..\Examples\CSharp\VS2008\Console\UADocExamples\_EasyUAClient.ChangeMultipleMonitoredItemSubscriptions.Overload2.cs" 
                lang="CSharp" 
                region="Example"/>
            <code 
                source="..\..\Examples\VBNET\VS2008\Console\UADocExamples\_EasyUAClient.ChangeMultipleMonitoredItemSubscriptions.Overload2.vb" 
                lang="VBNET" 
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.ChangeMultipleMonitoredItemSubscriptions(System.Int32[],System.Int32,System.Double)">
            <summary>
            Changes parameters of multiple subscriptions. Specify the handles, a new sampling interval and absolute deadband 
            value.
            </summary>
            <param name="handleArray">Array of subscription handles</param>
            <param name="samplingInterval">The sampling interval (in milliseconds) indicates the fastest rate at which the 
            Server should sample its underlying source for data changes.</param>
            <param name="absoluteDeadbandValue">The value of absolute deadband.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.ChangeMultipleMonitoredItemSubscriptions(System.Int32[],OpcLabs.EasyOpc.UA.UAMonitoringParameters)">
            <summary>
            Changes parameters of multiple subscriptions. Specify the handles, and a new monitoring parameters object.
            </summary>
            <param name="handleArray">Array of subscription handles</param>
            <param name="monitoringParameters">Contains monitoring parameters (such as the sampling interval, and optional 
            data change filter).</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.DiscoverServers">
            <overloads>
            <example>
            <code source="..\..\Examples\CSharp\VS2008\Console\UADocExamples\_EasyUAClient.DiscoverServers.Main.cs" lang="CSharp" region="Example"/>
            <code source="..\..\Examples\VBNET\VS2008\Console\UADocExamples\_EasyUAClient.DiscoverServers.Main.vb" lang="VBNET" region="Example"/>
            </example>
            </overloads>
            
            <summary>
            Discovers available OPC-UA servers and returns information about them, using the default discovery host.
            </summary>
            <returns>Returns a collection of application elements (servers, <see cref="T:OpcLabs.EasyOpc.UA.UAApplicationElement"/>), keyed by their 
            discovery URLs (<see cref="P:OpcLabs.EasyOpc.UA.UAApplicationElement.DiscoveryUriString"/>).</returns>
            <remarks>
            <para>This method uses the so-called Local Discovery Server (LDS). You can influence how the discovery works
            using the properties in <see cref="P:OpcLabs.EasyOpc.UA.EasyUAClient.SharedParameters"/>. The name of the machine that runs the discovery 
            is determined by <see cref="P:OpcLabs.EasyOpc.UA.EasyUAInstanceParameters.DiscoveryHost"/> in <see cref="P:OpcLabs.EasyOpc.UA.EasyUAClient.InstanceParameters"/>, 
            and defaults to "localhost".</para>
            <para>Invokes the FindServers service.
            </para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.DiscoverServers(System.String[])">
            <summary>
            Discovers available OPC-UA servers and returns information about them, using the specified discovery URI strings.
            </summary>
            <param name="discoveryUriStringArray">An array of discovery URI strings.</param>
            <returns>Returns a collection of application elements (servers, <see cref="T:OpcLabs.EasyOpc.UA.UAApplicationElement"/>), keyed by their 
            discovery URLs (<see cref="P:OpcLabs.EasyOpc.UA.UAApplicationElement.DiscoveryUriString"/>).</returns>
            <remarks>
            <para>
            This method uses the discovery services on specified discovery endpoints.</para>para&gt;
            <para>Invokes the FindServers service.
            </para>
            <para>
            The discovery is done in parallel on the specified endpoints.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.DiscoverServers(System.String[],OpcLabs.EasyOpc.UA.UAApplicationTypes)">
            <summary>
            Discovers available OPC-UA servers and returns information about them, using the specified discovery URI strings,
            and filtering by specified application types.
            </summary>
            <param name="discoveryUriStringArray">An array of discovery URI strings.</param>
            <param name="applicationTypes">Application types to be discovered.</param>
            <returns>Returns a collection of application elements (servers, <see cref="T:OpcLabs.EasyOpc.UA.UAApplicationElement"/>), keyed by their 
            discovery URLs (<see cref="P:OpcLabs.EasyOpc.UA.UAApplicationElement.DiscoveryUriString"/>).</returns>
            <remarks>
            <para>
            This method uses the discovery services on specified discovery endpoints.</para>para&gt;
            <para>Invokes the FindServers service.
            </para>
            <para>
            The discovery is done in parallel on the specified endpoints.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.DiscoverServers(System.String[],OpcLabs.EasyOpc.UA.UAApplicationTypes,System.Boolean)">
            <summary>
            Discovers available OPC-UA servers and returns information about them, using the specified discovery URI strings,
            filtering by specified application types, and specifying whether the discovery should be performed in parallel.
            </summary>
            <param name="discoveryUriStringArray">An array of discovery URI strings.</param>
            <param name="applicationTypes">Application types to be discovered.</param>
            <param name="parallel">When set to true, the server discovery will be attempted on the specified discovery 
            endpoints simultaneously.</param>
            <returns>Returns a collection of application elements (servers, <see cref="T:OpcLabs.EasyOpc.UA.UAApplicationElement"/>), keyed by their 
            discovery URLs (<see cref="P:OpcLabs.EasyOpc.UA.UAApplicationElement.DiscoveryUriString"/>).</returns>
            <remarks>
            <para>
            This method uses the discovery services on specified discovery endpoints.</para>para&gt;
            <para>Invokes the FindServers service.
            </para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.DiscoverServers(System.String)">
            <summary>
            Discovers available OPC-UA servers and returns information about them, using the specified discovery host.
            </summary>
            <param name="discoveryHost">The name of the machine that runs the discovery server that will be used for discovery 
            task.</param>
            <returns>Returns a collection of application elements (servers, <see cref="T:OpcLabs.EasyOpc.UA.UAApplicationElement"/>), keyed by their 
            discovery URLs (<see cref="P:OpcLabs.EasyOpc.UA.UAApplicationElement.DiscoveryUriString"/>).</returns>
            <remarks>
            <para>This method uses the so-called Local Discovery Server (LDS). You can influence how the discovery works
            using the properties in <see cref="P:OpcLabs.EasyOpc.UA.EasyUAClient.SharedParameters"/>.</para>
            <para>Invokes the FindServers service.
            </para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.DiscoverServers(System.String,OpcLabs.EasyOpc.UA.UAApplicationTypes)">
            <summary>
            Discovers available OPC-UA servers and returns information about them, using the specified discovery host,
            and filtering by specified application types.
            </summary>
            <param name="discoveryHost">The name of the machine that runs the discovery server that will be used for discovery 
            task.</param>
            <param name="applicationTypes">Application types to be discovered.</param>
            <returns>Returns a collection of application elements (servers, <see cref="T:OpcLabs.EasyOpc.UA.UAApplicationElement"/>), keyed by their 
            discovery URLs (<see cref="P:OpcLabs.EasyOpc.UA.UAApplicationElement.DiscoveryUriString"/>).</returns>
            <remarks>
            <para>This method uses the so-called Local Discovery Server (LDS). You can influence how the discovery works
            using the properties in <see cref="P:OpcLabs.EasyOpc.UA.EasyUAClient.SharedParameters"/>.</para>
            <para>Invokes the FindServers service.
            </para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.GetMonitoredItemArguments(System.Int32)">
            <summary>
            Obtains parameters of certain monitored item subscription.
            </summary>
            <param name="handle">Monitored item subscription handle as returned by the subscription method.</param>
            <returns>Returns an object that holds all information pertaining to the monitored item subscription: 
            attribute information, subscription parameters, and monitoring parameters.</returns>
            <example>
            <code 
                source="..\..\Examples\CSharp\VS2008\Console\UADocExamples\_EasyUAClient.GetMonitoredItemArguments.Main.cs" 
                lang="CSharp" 
                region="Example"/>
            <code 
                source="..\..\Examples\VBNET\VS2008\Console\UADocExamples\_EasyUAClient.GetMonitoredItemArguments.Main.vb" 
                lang="VBNET" 
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.GetMonitoredItemArgumentsDictionary">
            <summary>
            Obtains informatiom about all monitored item subscriptions on this <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.
            </summary>
            <returns>Returns a dictionary of monitored item argument objects. The dictionary is keyed by the monitored item
            subscription handles, and its values contain information describing each subscription.</returns>
            <example>
            <code source="..\..\Examples\CSharp\VS2008\Console\UADocExamples\_EasyUAClient.GetMonitoredItemArgumentsDictionary.Main.cs" lang="CSharp" region="Example"/>
            <code source="..\..\Examples\VBNET\VS2008\Console\UADocExamples\_EasyUAClient.GetMonitoredItemArgumentsDictionary.Main.vb" lang="VBNET" region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.Read(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor)">
             <overloads>
             <summary>
             Reads attribute data from an OPC server. Value, status code, and timestamps are returned. 
             </summary>
             </overloads>
            
             <summary>
             Reads data of a node's Value attribute, using an endpoint descriptor and a node Id. 
             </summary>
             <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
             <param name="nodeDescriptor">Node descriptor. Identifies the node in OPC server's address space.</param>
             <returns>Returns an attribute data object that stores the value of an attribute, together with status code and 
             timestamps.</returns>
             <example>
             <code source="..\..\Examples\CSharp\VS2008\Console\UADocExamples\_EasyUAClient.Read.Overload1.cs" lang="CSharp" region="Example"/>
             <code source="..\..\Examples\VBNET\VS2008\Console\UADocExamples\_EasyUAClient.Read.Overload1.vb" lang="VBNET" region="Example"/>
             </example>
             <remarks>
             <para>
             You can obtain <paramref name="nodeDescriptor"/> e.g. from by calling one of the browsing methods on 
             <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
             </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.Read(OpcLabs.EasyOpc.UA.UANodeArguments)">
            <summary>
            Reads a Value attribute of a node, using an object that holds the node information. 
            </summary>
            <param name="nodeArguments">An object that specifies the node in the OPC server.</param>
            <returns>Returns an attribute data object that stores the value of an attribute, together with status code and 
            timestamps.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.Read(OpcLabs.EasyOpc.UA.UANodeArguments,OpcLabs.EasyOpc.UA.UAAttributeId)">
            <summary>
            Reads a specified attribute of a node, using an object that holds the node information, and an attribute Id. 
            </summary>
            <param name="nodeArguments">An object that specifies the node in the OPC server.</param>
            <param name="attributeId">Attribute Id. Identifies an attribute of a node.</param>
            <returns>Returns an attribute data object that stores the value of an attribute, together with status code and 
            timestamps.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.Read(OpcLabs.EasyOpc.UA.UAReadArguments)">
            <summary>
            Reads attribute data using an object that holds all necessary arguments. 
            </summary>
            <param name="readArguments">Arguments specifying what to read from an OPC-UA server.</param>
            <returns>Returns an attribute data object that stores the value of an attribute, together with status code and 
            timestamps.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.ReadMultiple(OpcLabs.EasyOpc.UA.UAReadArguments[])">
            <summary>
            Reads multiple attributes, using array of argument objects as an input. 
            </summary>
            <param name="readArgumentsArray">Array of argument objects specifying what to read from an OPC-UA server.</param>
            <returns>Returns an array of attribute data objects. Each object stores the value of an attribute, together with 
            status code and timestamps. The indices of elements in the output array are the same as those in the input array, 
            <paramref name="readArgumentsArray"/>.</returns>
            <remarks>
            The size of the input array will become the size of the output array. The element positions (indices) in the output 
            array are the same as in the input array. 
            </remarks>
            <example>
            <code 
                source="..\..\Examples\CSharp\VS2008\Console\UADocExamples\_EasyUAClient.ReadMultiple.Main.cs" 
                lang="CSharp" 
                region="Example"/>
            <code 
                source="..\..\Examples\VBNET\VS2008\Console\UADocExamples\_EasyUAClient.ReadMultiple.Main.vb" 
                lang="VBNET" 
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.ReadValue(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor)">
            <overloads>
            <summary>
            Reads an attribute from an OPC server. Only the attribute's value is returned (status code and timestamps are not 
            returned). 
            </summary>
            <remarks>The status code must be 'good' for this method to succeed; otherwise, an <see cref="T:OpcLabs.EasyOpc.UA.UAException"/>
            is thrown.</remarks>
            </overloads>
            
            <summary>
            Reads an attribute's value using an endpoint descriptor and a node Id. 
            </summary>
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeDescriptor">Node descriptor. Identifies the node in OPC server's address space.</param>
            <returns>If successful, the method returns the actual value of OPC attribute requested.</returns>
            <example>
            <code source="..\..\Examples\CSharp\VS2008\Console\UADocExamples\_EasyUAClient.ReadValue.Overload1.cs" lang="CSharp" region="Example"/>
            <code source="..\..\Examples\VBNET\VS2008\Console\UADocExamples\_EasyUAClient.ReadValue.Overload1.vb" lang="VBNET" region="Example"/>
            </example>
            <remarks>
            <para>
            You can obtain <paramref name="nodeDescriptor"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.ReadValue(OpcLabs.EasyOpc.UA.UANodeArguments)">
            <summary>
            Reads a value of Value attribute of a node, using an object that holds the node information. 
            </summary>
            <param name="nodeArguments">An object that specifies the node in the OPC server.</param>
            <returns>If successful, the method returns the actual value of OPC attribute requested.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.ReadValue(OpcLabs.EasyOpc.UA.UANodeArguments,OpcLabs.EasyOpc.UA.UAAttributeId)">
            <summary>
            Reads a value of a specified attribute of a node, using an object that holds the node information, and an
            attribute Id. 
            </summary>
            <param name="nodeArguments">An object that specifies the node in the OPC server.</param>
            <param name="attributeId">Attribute Id. Identifies an attribute of a node.</param>
            <returns>If successful, the method returns the actual value of OPC attribute requested.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.ReadValue(OpcLabs.EasyOpc.UA.UAReadArguments)">
            <summary>
            Reads an attribute' value using an object that holds all necessary arguments. 
            </summary>
            <param name="readArguments">Arguments specifying what to read from an OPC-UA server.</param>
            <returns>If successful, the method returns the actual value of OPC attribute requested.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.ReadMultipleValues(OpcLabs.EasyOpc.UA.UAReadArguments[])">
            <summary>
            Reads values of multiple attributes, using array of argument objects as an input. 
            </summary>
            <param name="readArgumentsArray">Array of argument objects specifying what to read from an OPC-UA server.</param>
            <returns>Returns an array of value objects. Each object contains the actual value of an attribute. The indices of 
            elements in the output array are the same as those in the input array, 
            <paramref name="readArgumentsArray"/>.</returns>
            <remarks>
            <para>The status codes of attributes should be 'good'; otherwise, a <see cref="P:OpcLabs.BaseLib.ValueResult.Value"/> of that
            attribute is not valid, and <see cref="P:OpcLabs.BaseLib.OperationResult.Exception"/> contains a non-null exception.</para>
            <para>
            The size of the input array will become the size of the output array. The element positions (indices) in the output 
            array are the same as in the input array.</para> 
            </remarks>
            <example>
            <code source="..\..\Examples\CSharp\VS2008\Console\UADocExamples\_EasyUAClient.ReadMultipleValues.Main.cs" lang="CSharp" region="Example"/>
            <code source="..\..\Examples\VBNET\VS2008\Console\UADocExamples\_EasyUAClient.ReadMultipleValues.Main.vb" lang="VBNET" region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.SubscribeMonitoredItem(OpcLabs.EasyOpc.UA.EasyUAMonitoredItemArguments)">
             <overloads>
             <summary>
             Subscribe to changes of a particular monitored item. For each significant monitored item change, either the 
             <see cref="E:OpcLabs.EasyOpc.UA.EasyUAClient.MonitoredItemChanged"/> event is generated, or a specified callback method is invoked.
             </summary>
             <remarks>
             <para>It is more efficient to subscribe to multiple monitored items using 
             <see cref="M:OpcLabs.EasyOpc.UA.EasyUAClient.SubscribeMultipleMonitoredItems(OpcLabs.EasyOpc.UA.EasyUAMonitoredItemArguments[])"/> method.</para>
             </remarks>
             </overloads>
            
             <summary>
             Subscribe to a monitored item, specifying an object that holds all necessary arguments (the object can optionally
             contain the callback method as well).
             </summary>
             <param name="monitoredItemArguments">Array of arguments, one element per each monitored item involved in the 
             operation.</param>
             <returns>The method returns an integer handle that uniquely identifies the monitored item subscription.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.SubscribeMonitoredItem(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor,System.Int32)">
            <summary>
            Subscribe to a monitored item. Specify an endpoint descriptor, node id, and sampling interval.
            </summary>
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeDescriptor">Node descriptor. Identifies the node in OPC server's address space.</param>
            <param name="samplingInterval">The sampling interval (in milliseconds) indicates the fastest rate at which the 
            Server should sample its underlying source for data changes.</param>
            <returns>The method returns an integer handle that uniquely identifies the monitored item subscription.</returns>
            <example>
            <code source="..\..\Examples\CSharp\VS2008\Console\UADocExamples\_EasyUAClient.SubscribeMonitoredItem.Overload1.cs" lang="CSharp" region="Example"/>
            <code source="..\..\Examples\VBNET\VS2008\Console\UADocExamples\_EasyUAClient.SubscribeMonitoredItem.Overload1.vb" lang="VBNET" region="Example"/>
            </example>
            <remarks>
            <para>
            You can obtain <paramref name="nodeDescriptor"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.SubscribeMonitoredItem(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor,System.Int32,System.EventHandler{OpcLabs.EasyOpc.UA.EasyUAMonitoredItemChangedEventArgs})">
            <summary>
            Subscribe to a monitored item. Specify an endpoint descriptor, node id, sampling interval, and a callback method.
            </summary>
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeDescriptor">Node descriptor. Identifies the node in OPC server's address space.</param>
            <param name="samplingInterval">The sampling interval (in milliseconds) indicates the fastest rate at which the 
            Server should sample its underlying source for data changes.</param>
            <param name="callback">A callback method to be invoked for each significant monitored item change.</param>
            <returns>The method returns an integer handle that uniquely identifies the monitored item subscription.</returns>
            <example>
            <code source="..\..\Examples\CSharp\VS2008\Console\UADocExamples\_EasyUAClient.SubscribeMonitoredItem.CallbackLambda.cs" lang="CSharp" region="Example"/>
            <code source="..\..\Examples\VBNET\VS2010\Console\UADocExamples4\_EasyUAClient.SubscribeMonitoredItem.CallbackLambda.vb" lang="VBNET" region="Example"/>
            </example>
            <remarks>
            <para>
            If <paramref name="callback"/> is a null reference, only the <see cref="E:OpcLabs.EasyOpc.UA.EasyUAClient.MonitoredItemChanged"/> event is 
            generated, and no callback method is invoked.</para>
            <para>
            You can obtain <paramref name="nodeDescriptor"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.SubscribeMonitoredItem(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor,System.Int32,System.EventHandler{OpcLabs.EasyOpc.UA.EasyUAMonitoredItemChangedEventArgs},System.Object)">
            <summary>
            Subscribe to a monitored item. Specify an endpoint descriptor, node id, sampling interval, callback method, and 
            a state object.
            </summary>
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeDescriptor">Node descriptor. Identifies the node in OPC server's address space.</param>
            <param name="samplingInterval">The sampling interval (in milliseconds) indicates the fastest rate at which the 
            Server should sample its underlying source for data changes.</param>
            <param name="callback">A callback method to be invoked for each significant monitored item change.</param>
            <param name="state">User-defined state object.</param>
            <returns>The method returns an integer handle that uniquely identifies the monitored item subscription.</returns>
            <remarks>If <paramref name="callback"/> is a null reference, only the <see cref="E:OpcLabs.EasyOpc.UA.EasyUAClient.MonitoredItemChanged"/> event is 
            generated, and no callback method is invoked.</remarks>
            <remarks>
            <para>
            You can obtain <paramref name="nodeDescriptor"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.SubscribeMonitoredItem(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor,System.Int32,System.Object)">
            <summary>
            Subscribe to a monitored item. Specify an endpoint descriptor, node id, sampling interval, and a state object.
            </summary>
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeDescriptor">Node descriptor. Identifies the node in OPC server's address space.</param>
            <param name="samplingInterval">The sampling interval (in milliseconds) indicates the fastest rate at which the 
            Server should sample its underlying source for data changes.</param>
            <param name="state">User-defined state object.</param>
            <returns>The method returns an integer handle that uniquely identifies the monitored item subscription.</returns>
            <remarks>
            <para>
            You can obtain <paramref name="nodeDescriptor"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.SubscribeMonitoredItem(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor,System.Int32,System.Double)">
            <summary>
            Subscribe to a monitored item. Specify an endpoint descriptor, node id, sampling interval, and absolute deadband
            value.
            </summary>
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeDescriptor">Node descriptor. Identifies the node in OPC server's address space.</param>
            <param name="samplingInterval">The sampling interval (in milliseconds) indicates the fastest rate at which the 
            Server should sample its underlying source for data changes.</param>
            <param name="absoluteDeadbandValue">The value of absolute deadband.</param>
            <returns>The method returns an integer handle that uniquely identifies the monitored item subscription.</returns>
            <remarks>
            <para>
            You can obtain <paramref name="nodeDescriptor"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.SubscribeMonitoredItem(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor,System.Int32,System.Double,System.EventHandler{OpcLabs.EasyOpc.UA.EasyUAMonitoredItemChangedEventArgs},System.Object)">
            <summary>
            Subscribe to a monitored item. Specify an endpoint descriptor, node id, sampling interval, absolute deadband
            value, callback method, and a state object.
            </summary>
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeDescriptor">Node descriptor. Identifies the node in OPC server's address space.</param>
            <param name="samplingInterval">The sampling interval (in milliseconds) indicates the fastest rate at which the 
            Server should sample its underlying source for data changes.</param>
            <param name="absoluteDeadbandValue">The value of absolute deadband.</param>
            <param name="callback">A callback method to be invoked for each significant monitored item change.</param>
            <param name="state">User-defined state object.</param>
            <returns>The method returns an integer handle that uniquely identifies the monitored item subscription.</returns>
            <remarks>
            <para>
            If <paramref name="callback"/> is a null reference, only the <see cref="E:OpcLabs.EasyOpc.UA.EasyUAClient.MonitoredItemChanged"/> event is 
            generated, and no callback method is invoked.</para>
            <para>
            You can obtain <paramref name="nodeDescriptor"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.SubscribeMonitoredItem(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor,System.Int32,System.Double,System.Object)">
            <summary>
            Subscribe to a monitored item. Specify an endpoint descriptor, node id, sampling interval, absolute deadband
            value, and a state object.
            </summary>
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeDescriptor">Node descriptor. Identifies the node in OPC server's address space.</param>
            <param name="samplingInterval">The sampling interval (in milliseconds) indicates the fastest rate at which the 
            Server should sample its underlying source for data changes.</param>
            <param name="absoluteDeadbandValue">The value of absolute deadband.</param>
            <param name="state">User-defined state object.</param>
            <returns>The method returns an integer handle that uniquely identifies the monitored item subscription.</returns>
            <remarks>
            <para>
            You can obtain <paramref name="nodeDescriptor"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.SubscribeMonitoredItem(OpcLabs.EasyOpc.UA.UAMonitoredItemArguments,System.EventHandler{OpcLabs.EasyOpc.UA.EasyUAMonitoredItemChangedEventArgs})">
            <summary>
            Subscribe to a monitored item, specifying an object that holds all necessary arguments, and a callback method.
            </summary>
            <param name="monitoredItemArguments">Array of arguments, one element per each monitored item involved in the 
            operation.</param>
            <param name="callback">A callback method to be invoked for each significant monitored item change.</param>
            <returns>The method returns an integer handle that uniquely identifies the monitored item subscription.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.SubscribeMultipleMonitoredItems(OpcLabs.EasyOpc.UA.EasyUAMonitoredItemArguments[])">
            <summary>
            Subscribe to changes of multiple monitored items. The <see cref="E:OpcLabs.EasyOpc.UA.EasyUAClient.MonitoredItemChanged"/> event is generated for each 
            significant monitored item change.
            </summary>
            <param name="monitoredItemArgumentsArray">Array of argument objects specifying what and how to subscribe.</param>
            <returns>The function returns an array of integer handle. Each handle uniquely identifies the monitored item 
            subscription. The indices of elements in the output array are the same as those in the input array, 
            <paramref name="monitoredItemArgumentsArray"/>.</returns>
            <example>
            <code source="..\..\Examples\CSharp\VS2008\Console\UADocExamples\_EasyUAClient.SubscribeMultipleMonitoredItems.Overload1.cs" lang="CSharp" region="Example"/>
            <code source="..\..\Examples\VBNET\VS2008\Console\UADocExamples\_EasyUAClient.SubscribeMultipleMonitoredItems.Overload1.vb" lang="VBNET" region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.ToString">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.UnsubscribeMonitoredItem(System.Int32)">
             <overloads>
             Unsubscribe from changes of a particular monitored item.  
             </overloads>
             <remarks>
             <para>It is more efficient to unsubscribe from multiple items using <see cref="M:OpcLabs.EasyOpc.UA.EasyUAClient.UnsubscribeMultipleMonitoredItems(System.Collections.Generic.IEnumerable{System.Int32})"/> 
             method.
             </para>
             <para>The monitored item subscription handle becomes invalid after this method is called.</para>
             </remarks>
            
             <summary>Unsubscribe from monitored item, specifying its handle.
             </summary>
             <param name="handle">Monitored item subscription handle as returned by the subscription method</param>
             <example>
             <code source="..\..\Examples\CSharp\VS2008\Console\UADocExamples\_EasyUAClient.UnsubscribeMonitoredItem.Main.cs" lang="CSharp" region="Example"/>
             <code source="..\..\Examples\VBNET\VS2008\Console\UADocExamples\_EasyUAClient.UnsubscribeMonitoredItem.Main.vb" lang="VBNET" region="Example"/>
             </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.UnsubscribeMultipleMonitoredItems(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>Unsubscribe from changes of multiple monitored items, specifying an enumerable of integer handles.
            </summary>
            <param name="handles">Array of subscription handles</param>
            <example>
            <code 
                source="..\..\Examples\CSharp\VS2008\Console\UADocExamples\_EasyUAClient.UnsubscribeMultipleMonitoredItems.Main.cs" 
                lang="CSharp" 
                region="Example"/>
            <code 
                source="..\..\Examples\VBNET\VS2008\Console\UADocExamples\_EasyUAClient.UnsubscribeMultipleMonitoredItems.Main.vb" 
                lang="VBNET" 
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.UnsubscribeAllMonitoredItems">
            <summary>
            Unsubscribe from changes to all monitored items.  
            </summary>
            <example>
            <code source="..\..\Examples\CSharp\VS2008\Console\UADocExamples\_EasyUAClient.UnsubscribeAllMonitoredItems.Main.cs" lang="CSharp" region="Example"/>
            <code source="..\..\Examples\VBNET\VS2008\Console\UADocExamples\_EasyUAClient.UnsubscribeAllMonitoredItems.Main.vb" lang="VBNET" region="Example"/>
            </example>
            <remarks>
            All monitored item subscriptions on this <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object are unsubscribed. Their corresponding 
            handles become invalid after this method is called.
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.Write(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor,OpcLabs.EasyOpc.UA.UAAttributeData)">
             <overloads>
             <summary>
             Writes into an attribute in an OPC server. Value, status code and timestamps are written. 
             </summary>
             </overloads>
            
             <summary>
             Writes data into a Value attribute of a node, using an endpoint descriptor and a node Id.
             </summary>
             <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
             <param name="nodeDescriptor">Node descriptor. Identifies the node in OPC server's address space.</param>
             <param name="attributeData">Value of an attribute, together with status code and timestamps, to be written.</param>
             <example>
             <code source="..\..\Examples\CSharp\VS2008\Console\UADocExamples\_EasyUAClient.Write.Overload1.cs" lang="CSharp" region="Example"/>
             <code source="..\..\Examples\VBNET\VS2008\Console\UADocExamples\_EasyUAClient.Write.Overload1.vb" lang="VBNET" region="Example"/>
             </example>
             <remarks>
             <para>
             You can obtain <paramref name="nodeDescriptor"/> e.g. from by calling one of the browsing methods on 
             <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
             </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.Write(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor,OpcLabs.EasyOpc.UA.UAAttributeData,System.Type)">
            <summary>
            Writes data into a Value attribute of a node, using an endpoint descriptor, node Id, and an attribute type.
            </summary>
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeDescriptor">Node descriptor. Identifies the node in OPC server's address space.</param>
            <param name="attributeData">Value of an attribute, together with status code and timestamps, to be written.</param>
            <param name="valueType">Specifies the type that should be used when writing the value.</param>
            <remarks>
            <para>
            The method will attempt to convert the value to the type specified by <paramref name="valueType"/> before
            writing. This may be needed because the OPC server will only accept values of proper type.</para>
            <para>
            <para>
            The component will determine the type of the Value attribute
            from the DataType and ValueRank attributes of the node first. This can have negative implication on the 
            performance, and introduces a dependency of the value written on the behavior of the OPC server itself.
            Use a method overload that allows to specify the attribute type or type code to prevent this.
            </para>
            You can obtain <paramref name="nodeDescriptor"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.Write(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor,OpcLabs.EasyOpc.UA.UAAttributeData,System.TypeCode)">
            <summary>
            Writes data into a Value attribute of a node, using an endpoint descriptor, node Id, and a type code.
            </summary>
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeDescriptor">Node descriptor. Identifies the node in OPC server's address space.</param>
            <param name="attributeData">Value of an attribute, together with status code and timestamps, to be written.</param>
            <param name="typeCode">Specifies the type code that should be used when writing the value.</param>
            <remarks>
            <para>
            The method will attempt to convert the value to the type specified by <paramref name="typeCode"/> before
            writing. This may be needed because the OPC server will only accept values of proper type.</para>
            <para>
            You can obtain <paramref name="nodeDescriptor"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.Write(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor,OpcLabs.EasyOpc.UA.UAAttributeData,OpcLabs.EasyOpc.UA.UAAttributeId)">
            <summary>
            Writes data into a Value attribute of a node, specifying an endpoint descriptor, node Id, and attribute Id.
            </summary>
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeDescriptor">Node descriptor. Identifies the node in OPC server's address space.</param>
            <param name="attributeData">Value of an attribute, together with status code and timestamps, to be written.</param>
            <param name="attributeId">Attribute Id. Identifies an attribute of a node.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.Write(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor,OpcLabs.EasyOpc.UA.UAAttributeData,OpcLabs.EasyOpc.UA.UAIndexRangeList)">
            <summary>
            Writes data into a Value attribute of a node, specifying an endpoint descriptor, node Id, and index range list.
            </summary>
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeDescriptor">Node descriptor. Identifies the node in OPC server's address space.</param>
            <param name="attributeData">Value of an attribute, together with status code and timestamps, to be written.</param>
            <param name="indexRangeList">List of index ranges for individual array dimensions.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.Write(OpcLabs.EasyOpc.UA.UAWriteArguments)">
            <summary>
            Write data into a specified attribute, using an object that holds all necessary arguments. 
            </summary>
            <param name="writeArguments">Arguments specifying what to write to an OPC-UA server.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.WriteValue(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor,System.Object)">
             <overloads>
             <summary>
             Writes a value into an attribute an OPC server. Only the item value is written (satus code and timestamps are not 
             written).
             </summary>
             </overloads>
            
             <summary>
             Writes value into a Value attribute of a node, using an endpoint descriptor and a node Id.
             </summary>
             <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
             <param name="nodeDescriptor">Node descriptor. Identifies the node in OPC server's address space.</param>
             <param name="value">The value to be written.</param>
             <example>
             <code source="..\..\Examples\CSharp\VS2008\Console\UADocExamples\_EasyUAClient.WriteValue.Overload1.cs" lang="CSharp" region="Example"/>
             <code source="..\..\Examples\VBNET\VS2008\Console\UADocExamples\_EasyUAClient.WriteValue.Overload1.vb" lang="VBNET" region="Example"/>
             </example>
             <remarks>
             <para>
             You can obtain <paramref name="nodeDescriptor"/> e.g. from by calling one of the browsing methods on 
             <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
             <para>
             The component will determine the type of the Value attribute
             from the DataType and ValueRank attributes of the node first. This can have negative implication on the 
             performance, and introduces a dependency of the value written on the behavior of the OPC server itself.
             Use a method overload that allows to specify the attribute type or type code to prevent this.
             </para>
             </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.WriteValue(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor,System.Object,System.Type)">
            <summary>
            Writes value into a Value attribute of a node, using an endpoint descriptor, node Id, and an attribute type.
            </summary>
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeDescriptor">Node descriptor. Identifies the node in OPC server's address space.</param>
            <param name="value">The value to be written.</param>
            <param name="valueType">Specifies the type that should be used when writing the value.</param>
            <remarks>
            <para>
            The method will attempt to convert the value to the type specified by <paramref name="valueType"/> before
            writing. This may be needed because the OPC server will only accept values of proper type.</para>
            <para>
            <para>
            When the <paramref name="valueType"/> is <c>null</c>, the component will determine the type of the Value attribute
            from the DataType and ValueRank attributes of the node first. This can have negative implication on the 
            performance, and introduces a dependency of the value written on the behavior of the OPC server itself.
            Use a non-null <paramref name="valueType"/> to prevent this.
            </para>
            You can obtain <paramref name="nodeDescriptor"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.WriteValue(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor,System.Object,System.TypeCode)">
            <summary>
            Writes value into a Value attribute of a node, using an endpoint descriptor, node Id, and a type code.
            </summary>
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeDescriptor">Node descriptor. Identifies the node in OPC server's address space.</param>
            <param name="value">The value to be written.</param>
            <param name="typeCode">Specifies the type code that should be used when writing the value.</param>
            <remarks>
            <para>
            The method will attempt to convert the value to the type specified by <paramref name="typeCode"/> before
            writing. This may be needed because the OPC server will only accept values of proper type.</para>
            <para>
            You can obtain <paramref name="nodeDescriptor"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.WriteValue(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor,System.Object,OpcLabs.EasyOpc.UA.UAAttributeId)">
            <summary>
            Writes value into a Value attribute of a node, specifying an endpoint descriptor, node Id, and attribute Id.
            </summary>
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeDescriptor">Node descriptor. Identifies the node in OPC server's address space.</param>
            <param name="value">The value to be written.</param>
            <param name="attributeId">Attribute Id. Identifies an attribute of a node.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.WriteValue(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor,System.Object,OpcLabs.EasyOpc.UA.UAIndexRangeList)">
            <summary>
            Writes value into a Value attribute of a node, specifying an endpoint descriptor, node Id, and index range list.
            </summary>
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeDescriptor">Node descriptor. Identifies the node in OPC server's address space.</param>
            <param name="value">The value to be written.</param>
            <param name="indexRangeList">List of index ranges for individual array dimensions.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.WriteValue(OpcLabs.EasyOpc.UA.UAWriteValueArguments)">
            <summary>
            Writes a value into a Value attribute of a node, using an endpoint descriptor and a node Id.
            </summary>
            <param name="writeValueArguments">Arguments specifying what to write to an OPC-UA server.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.WriteMultiple(OpcLabs.EasyOpc.UA.UAWriteArguments[])">
            <summary>
            Writes data into multiple attributes, using array of argument objects as an input. 
            </summary>
            <param name="writeArgumentsArray">Array of argument objects specifying what to write from an OPC-UA server.</param>
            <returns>The method returns an array of <see cref="T:OpcLabs.EasyOpc.UA.UAWriteResult"/> objects. The indices of elements
            in the output array are the same as those in the input arrays.</returns>
            <example>
            <code source="..\..\Examples\CSharp\VS2008\Console\UADocExamples\_EasyUAClient.WriteMultiple.TestSuccess.cs" lang="CSharp" region="Example"/>
            <code source="..\..\Examples\VBNET\VS2008\Console\UADocExamples\_EasyUAClient.WriteMultiple.TestSuccess.vb" lang="VBNET" region="Example"/>
            </example>
            <remarks>
            <para>The size of the input array will become the size of the output array. The element positions (indices) in the 
            output array are the same as in the input array. </para>
            <para>This method does not throw an exception in case of OPC operation failures. Instead, the eventual exception
            related to each item is returned in Exception property of each returned <see cref="T:OpcLabs.EasyOpc.UA.UAWriteResult"/> element.
            </para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.WriteMultipleValues(OpcLabs.EasyOpc.UA.UAWriteValueArguments[])">
            <summary>
            Writes values into multiple attributes, using array of argument objects as an input (status codes and timestamps
            are not written).
            </summary>
            <param name="writeValueArgumentsArray">Array of argument objects specifying what to write from an OPC-UA server.
            </param>
            <returns>The method returns an array of <see cref="T:OpcLabs.EasyOpc.UA.UAWriteResult"/> objects. The indices of elements
            in the output array are the same as those in the input arrays.</returns>
            <example>
            <code source="..\..\Examples\CSharp\VS2008\Console\UADocExamples\_EasyUAClient.WriteMultipleValues.Main.cs" lang="CSharp" region="Example"/>
            <code source="..\..\Examples\VBNET\VS2008\Console\UADocExamples\_EasyUAClient.WriteMultipleValues.Main.vb" lang="VBNET" region="Example"/>
            </example>
            <example>
            <code source="..\..\Examples\CSharp\VS2008\Console\UADocExamples\_EasyUAClient.WriteMultipleValues.TestSuccess.cs" lang="CSharp" region="Example"/>
            <code source="..\..\Examples\VBNET\VS2008\Console\UADocExamples\_EasyUAClient.WriteMultipleValues.TestSuccess.vb" lang="VBNET" region="Example"/>
            </example>
            <remarks>
            <para>The size of the input array will become the size of the output array. The element positions (indices) in the 
            output array are the same as in the input array. </para>
            <para>This method does not throw an exception in case of OPC operation failures. Instead, the eventual exception
            related to each item is returned in Exception property of each returned <see cref="T:OpcLabs.EasyOpc.UA.UAWriteResult"/> element.
            </para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with information about the 
            class instance.</summary>
            <param name="info"><inheritdoc/>  </param>
            <param name="context"><inheritdoc/>  </param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.GetSchema">
            <inheritdoc cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.ReadXml(System.Xml.XmlReader)">
            <inheritdoc cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.WriteXml(System.Xml.XmlWriter)">
            <inheritdoc cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.MembersEqual(OpcLabs.EasyOpc.UA.EasyUAClient)">
            <summary>
            Infrastructure.
            </summary>
            <param name="other">The object to compare members to.</param>
            <returns>Returns <c>true</c> iff the member values equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.ResetInstanceParameters">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.UA.EasyUAClient.InstanceParameters"/> to a default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.ShouldSerializeInstanceParameters">
            <summary>
            Determines whether the <see cref="P:OpcLabs.EasyOpc.UA.EasyUAClient.InstanceParameters"/> is not empty.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.ResetIsolatedAdaptableParameters">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.UA.EasyUAClient.IsolatedAdaptableParameters"/> to a default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.ShouldSerializeIsolatedAdaptableParameters">
            <summary>
            Determines whether the <see cref="P:OpcLabs.EasyOpc.UA.EasyUAClient.IsolatedAdaptableParameters"/> is not empty.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.EasyUAClient.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.EasyUAClient.DefaultIsolatedDiscoveryParameters">
            <summary>
            Default discovery parameters for isolated client objects.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.EasyUAClient.DefaultIsolatedHostParameters">
            <summary>
            Default host parameters for isolated client objects.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.EasyUAClient.DefaultIsolatedMonitoredItemParameters">
            <summary>
            Default monitored item parameters for isolated client objects.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.EasyUAClient.DefaultIsolatedSessionParameters">
            <summary>
            Default session parameters for isolated client objects.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.EasyUAClient.DefaultIsolatedSubscriptionParameters">
            <summary>
            Default subscription parameters for isolated client objects.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.EasyUAClient.DefaultInstance">
            <inheritdoc cref="P:OpcLabs.EasyOpc.UA.EasyUAClient.SharedInstance"/>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.EasyUAClient.DiscoveryParameters">
            <summary>
            Contains parameters that influence the behavior of the component on the discoverylevel.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.EasyUAClient.EngineParameters">
            <summary>
            Contains parameters that influence the behavior of the component on the engine (global) level.
            </summary>
            <remarks>
            These parameters are perpetually shared among all instances of the <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.EasyUAClient.HostParameters">
            <summary>
            Contains parameters that influence the behavior of the component on the host level.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.EasyUAClient.MonitoredItemParameters">
            <summary>
            Contains parameters that influence the behavior of the component on the monitored item level.
            </summary>
            <remarks>Parameters in this property only apply to instances of <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> that have their
            <see cref="P:OpcLabs.EasyOpc.UA.EasyUAClient.Isolated"/> property equal to <c>false</c> (the default).</remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.EasyUAClient.SessionParameters">
            <summary>
            Contains parameters that influence the behavior of the component on the session level.
            <remarks>Parameters in this property only apply to instances of <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> that have their
            <see cref="P:OpcLabs.EasyOpc.UA.EasyUAClient.Isolated"/> property equal to <c>false</c> (the default).</remarks>
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.EasyUAClient.SubscriptionParameters">
            <summary>
            Contains parameters that influence the behavior of the component on the subscription level.
            </summary>
            <remarks>Parameters in this property only apply to instances of <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> that have their
            <see cref="P:OpcLabs.EasyOpc.UA.EasyUAClient.Isolated"/> property equal to <c>false</c> (the default).</remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.EasyUAClient.IsolatedDiscoveryParameters">
            <summary>
            Contains parameters that influence the behavior of the component on the discovery level.
            </summary>
            <remarks>Parameters in this property only apply to instances of <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> that have their
            <see cref="P:OpcLabs.EasyOpc.UA.EasyUAClient.Isolated"/> property equal to <c>true</c>.</remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.EasyUAClient.IsolatedHostParameters">
            <summary>
            Contains parameters that influence the behavior of the component on the host level.
            </summary>
            <remarks>Parameters in this property only apply to instances of <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> that have their
            <see cref="P:OpcLabs.EasyOpc.UA.EasyUAClient.Isolated"/> property equal to <c>true</c>.</remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.EasyUAClient.IsolatedMonitoredItemParameters">
            <summary>
            Contains parameters that influence the behavior of the component on the monitored item level.
            </summary>
            <remarks>Parameters in this property only apply to instances of <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> that have their
            <see cref="P:OpcLabs.EasyOpc.UA.EasyUAClient.Isolated"/> property equal to <c>true</c>.</remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.EasyUAClient.IsolatedSessionParameters">
            <summary>
            Contains parameters that influence the behavior of the component on the session level.
            </summary>
            <remarks>Parameters in this property only apply to instances of <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> that have their
            <see cref="P:OpcLabs.EasyOpc.UA.EasyUAClient.Isolated"/> property equal to <c>true</c>.</remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.EasyUAClient.IsolatedSubscriptionParameters">
            <summary>
            Contains parameters that influence the behavior of the component on the subscription level.
            </summary>
            <remarks>Parameters in this property only apply to instances of <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> that have their
            <see cref="P:OpcLabs.EasyOpc.UA.EasyUAClient.Isolated"/> property equal to <c>true</c>.</remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.EasyUAClient.AdaptableParameters">
            <summary>
            Adaptable parameters for non-isolated client objects.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.EasyUAClient.DefaultIsolatedAdaptableParameters">
            <summary>
            Default adaptable parameters for isolated client objects.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.EasyUAClient.SharedInstance">
            <summary>
            A shared instance of the client object.
            </summary>
            <remarks>
            <para>
            Use this property with care, as its usability is limited. Its main use is for testing, and for non-library
            application code where just a single instance is sufficient.</para>
            <para>
            The shared instance is not suitable for Windows Forms or similar environments, where a specific 
            <see cref="P:OpcLabs.EasyOpc.UA.EasyUAClient.SynchronizationContext"/> may be used with each form.</para>
            <para>
            We also do not recommend using the shared instance for library code, due to conflicts that may arise if your 
            library sets some instance parameters which may not be the same as what other libraries or the final application 
            expects.
            </para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.EasyUAClient.SharedParameters">
            <summary>
            Parameters that are always shared by all instances of the component.
            </summary>
        </member>
        <member name="E:OpcLabs.EasyOpc.UA.EasyUAClient.LogEntry">
            <summary>
            Raised for loggable entries originating in the OPC-UA client engine and the EasyUAClient component.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.EasyUAClient.InstanceParameters">
            <summary>
            Contains parameters that influence the behavior of just this instance of the component.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.EasyUAClient.Isolated">
            <summary>Specifies that you wish that the <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object instance works with an "isolated" 
            connection to the OPC-UA server, i.e. one that is not shared with other instances. </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.EasyUAClient.IsolatedAdaptableParameters">
            <summary>
            Contains parameters that influence the behavior of the component when it is isolated.
            </summary>
            <remarks>Parameters in this property only apply to instances of <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> that have their
            <see cref="P:OpcLabs.EasyOpc.UA.EasyUAClient.Isolated"/> property equal to <c>true</c>.</remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.EasyUAClient.LicenseInfo">
            <summary>
            Provides dictionary of license data fields and their values.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.EasyUAClient.SynchronizationContext">
            <summary>
            Contains synchronization context used by the object when performing asynchronous operations (including event 
            notifications).
            </summary>
        </member>
        <member name="E:OpcLabs.EasyOpc.UA.EasyUAClient.MonitoredItemChanged">
            <summary>
            Raised for every significant change in a subscribed OPC monitored item.
            </summary>
            <example>
            <code 
                source="..\..\Examples\CSharp\VS2008\Console\UADocExamples\_EasyUAClient.SubscribeMonitoredItem.Overload1.cs" 
                lang="CSharp" 
                region="Example"/>
            <code 
                source="..\..\Examples\VBNET\VS2008\Console\UADocExamples\_EasyUAClient.SubscribeMonitoredItem.Overload1.vb" 
                lang="VBNET" 
                region="Example"/>
            </example>
            <example>
            <code 
                source="..\..\Examples\CSharp\VS2008\Console\UADocExamples\_EasyUAClient.SubscribeMultipleMonitoredItems.Overload1.cs" 
                lang="CSharp" 
                region="Example"/>
            <code 
                source="..\..\Examples\VBNET\VS2008\Console\UADocExamples\_EasyUAClient.SubscribeMultipleMonitoredItems.Overload1.vb" 
                lang="VBNET" 
                region="Example"/>
            </example>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.UACallArguments">
            <summary>
            Holds all arguments needed to call a method in an OPC-UA server.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.UANodeArguments">
            <summary>
            Holds all arguments needed to specify a node in an OPC-UA server.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UANodeArguments.op_Equality(OpcLabs.EasyOpc.UA.UANodeArguments,OpcLabs.EasyOpc.UA.UANodeArguments)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UANodeArguments.op_Inequality(OpcLabs.EasyOpc.UA.UANodeArguments,OpcLabs.EasyOpc.UA.UANodeArguments)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UANodeArguments.#ctor">
            <overloads>
            Initializes a new instance of the class.
            </overloads>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UANodeArguments.#ctor(System.Object,OpcLabs.EasyOpc.UA.UAApplicationElement,OpcLabs.EasyOpc.UA.UANodeElement)">
            <param name="state">User-defined state object.</param>
            <param name="applicationElement">Application element object that provides information about the OPC-UA server.
            </param>
            <param name="nodeElement">Node element object that provides the Node Id.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UANodeArguments.#ctor(System.Object,OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor)">
            <param name="state">User-defined state object.</param>
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeDescriptor">Node descriptor. Identifies the node in OPC server's address space.</param>
            <remarks>
            <para>
            You can obtain <paramref name="nodeDescriptor"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UANodeArguments.#ctor(OpcLabs.BaseLib.OperationArguments)">
            <param name="operationArguments">Operation arguments object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UANodeArguments.#ctor(OpcLabs.BaseLib.OperationArguments,OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor)">
            <param name="operationArguments">Operation arguments object to be copied from.</param>
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeDescriptor">Node descriptor. Identifies the node in OPC server's address space.</param>
            <remarks>
            <para>
            You can obtain <paramref name="nodeDescriptor"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UANodeArguments.#ctor(OpcLabs.EasyOpc.UA.UAApplicationElement,OpcLabs.EasyOpc.UA.UANodeElement)">
            <param name="applicationElement">Application element object that provides information about the OPC-UA server.
            </param>
            <param name="nodeElement">Node element object that provides the Node Id.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UANodeArguments.#ctor(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor)">
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeDescriptor">Node descriptor. Identifies the node in OPC server's address space.</param>
            <remarks>
            <para>
            You can obtain <paramref name="nodeDescriptor"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UANodeArguments.#ctor(OpcLabs.EasyOpc.UA.UANodeArguments)">
            <param name="nodeArguments">An object that specifies the node in the OPC server.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UANodeArguments.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UANodeArguments.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UANodeArguments.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UANodeArguments.ToString">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UANodeArguments.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with information about the 
            class instance.</summary>
            <param name="info"><inheritdoc/>  </param>
            <param name="context"><inheritdoc/>  </param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UANodeArguments.Equals(OpcLabs.EasyOpc.UA.UANodeArguments)">
            <summary>
            Determines whether this object is equal to the other.
            </summary>
            <param name="other">The other object to be tested for equality with this one.</param>
            <returns>Returns <c>true</c> if the objects are equal; otherwise, returns <c>false</c>.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UANodeArguments.EndpointDescriptor">
            <summary>
            Contains the endpoint descriptor, i.e. the data defining a connection to the OPC-UA Server (mainly, its URL string).
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UANodeArguments.NodeDescriptor">
            <summary>
            A descriptor of a node in a server's address space.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UACallArguments.#ctor">
            <overloads>
            Initializes a new instance of the class.
            </overloads>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UACallArguments.#ctor(OpcLabs.BaseLib.OperationArguments)">
            <param name="operationArguments">Operation arguments object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UACallArguments.#ctor(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor)">
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeDescriptor">Node descriptor. Identifies the node in OPC server's address space.</param>
            <param name="methodNodeDescriptor">Method Node Id. Identifies the method node in OPC server's address space.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UACallArguments.#ctor(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor,System.Object[])">
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeDescriptor">Node descriptor. Identifies the node in OPC server's address space.</param>
            <param name="methodNodeDescriptor">Method Node Id. Identifies the method node in OPC server's address space.</param>
            <param name="inputArgumentArray">Array of input arguments to the method call. The number of arguments and their 
            types must conform to the method's requirements.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UACallArguments.#ctor(OpcLabs.EasyOpc.UA.UANodeArguments)">
            <param name="nodeArguments">An object that specifies the node in the OPC server.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UACallArguments.#ctor(OpcLabs.EasyOpc.UA.UANodeArguments,OpcLabs.EasyOpc.UA.UANodeDescriptor)">
            <param name="nodeArguments">An object that specifies the node in the OPC server.</param>
            <param name="methodNodeDescriptor">Method Node Id. Identifies the method node in OPC server's address space.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UACallArguments.#ctor(OpcLabs.EasyOpc.UA.UANodeArguments,OpcLabs.EasyOpc.UA.UANodeDescriptor,System.Object[])">
            <param name="nodeArguments">An object that specifies the node in the OPC server.</param>
            <param name="methodNodeDescriptor">Method Node Id. Identifies the method node in OPC server's address space.</param>
            <param name="inputArgumentArray">Array of input arguments to the method call. The number of arguments and their 
            types must conform to the method's requirements.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UACallArguments.#ctor(OpcLabs.EasyOpc.UA.UACallArguments)">
            <param name="callArguments">Call arguments object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UACallArguments.op_Equality(OpcLabs.EasyOpc.UA.UACallArguments,OpcLabs.EasyOpc.UA.UACallArguments)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UACallArguments.op_Inequality(OpcLabs.EasyOpc.UA.UACallArguments,OpcLabs.EasyOpc.UA.UACallArguments)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UACallArguments.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UACallArguments.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UACallArguments.ToString">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UACallArguments.Equals(OpcLabs.EasyOpc.UA.UACallArguments)">
            <summary>
            Determines whether this object is equal to the other.
            </summary>
            <param name="other">The other object to be tested for equality with this one.</param>
            <returns>Returns <c>true</c> if the objects are equal; otherwise, returns <c>false</c>.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UACallArguments.InputArgumentArray">
            <summary>
            Array of input arguments to the method call. The number of arguments and their types must conform to the 
            method's requirements.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UACallArguments.MethodNodeDescriptor">
            <summary>
            Method Node Id. Identifies the method node in OPC server's address space.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.UAStatusCodeException">
            <summary>
            An exception generated when the OPC-UA status code is not as expected. 
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAStatusCodeException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception 
            being thrown. </param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or 
            destination. </param>
            <remarks>
            <c>GetObjectData</c> sets a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with all the exception object data targeted for 
            serialization. During deserialization, the exception is reconstituted from the <C>SerializationInfo</C> transmitted 
            over the stream.
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAStatusCodeException.StatusCode">
            <summary>
            A status code that describes the result of a service or operation.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.UAMonitoredItemArguments">
            <summary>
            Holds all arguments needed to subscribe to a monitored item in an OPC-UA server.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.UAAttributeArguments">
            <summary>
            Holds all arguments needed to specify a node together with its attribute in an OPC-UA server.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UAAttributeArguments.DefaultAttributeId">
            <summary>
            The attribute Id used when no attribute is specified. Contains the Id of the Value attribute.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAAttributeArguments.#ctor(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor)">
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeDescriptor">Node descriptor. Identifies the node in OPC server's address space.</param>
            <remarks>
            <para>
            You can obtain <paramref name="nodeDescriptor"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAAttributeArguments.#ctor(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor,OpcLabs.EasyOpc.UA.UAAttributeId)">
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeDescriptor">Node descriptor. Identifies the node in OPC server's address space.</param>
            <param name="attributeId">Attribute Id. Identifies an attribute of a node.</param>
            <remarks>
            <para>
            You can obtain <paramref name="nodeDescriptor"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAAttributeArguments.#ctor(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor,OpcLabs.EasyOpc.UA.UAAttributeId,OpcLabs.EasyOpc.UA.UAIndexRangeList)">
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeDescriptor">Node descriptor. Identifies the node in OPC server's address space.</param>
            <param name="attributeId">Attribute Id. Identifies an attribute of a node.</param>
            <param name="indexRangeList">List of index ranges for individual array dimensions.</param>
            <remarks>
            <para>
            You can obtain <paramref name="nodeDescriptor"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAAttributeArguments.#ctor(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor,OpcLabs.EasyOpc.UA.UAIndexRangeList)">
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeDescriptor">Node descriptor. Identifies the node in OPC server's address space.</param>
            <param name="indexRangeList">List of index ranges for individual array dimensions.</param>
            <remarks>
            <para>
            You can obtain <paramref name="nodeDescriptor"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAAttributeArguments.#ctor(System.Object,OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor)">
            <param name="state">User-defined state object.</param>
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeDescriptor">Node descriptor. Identifies the node in OPC server's address space.</param>
            <remarks>
            <para>
            You can obtain <paramref name="nodeDescriptor"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAAttributeArguments.#ctor(System.Object,OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor,OpcLabs.EasyOpc.UA.UAAttributeId)">
            <param name="state">User-defined state object.</param>
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeDescriptor">Node descriptor. Identifies the node in OPC server's address space.</param>
            <param name="attributeId">Attribute Id. Identifies an attribute of a node.</param>
            <remarks>
            <para>
            You can obtain <paramref name="nodeDescriptor"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAAttributeArguments.#ctor(System.Object,OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor,OpcLabs.EasyOpc.UA.UAAttributeId,OpcLabs.EasyOpc.UA.UAIndexRangeList)">
            <param name="state">User-defined state object.</param>
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeDescriptor">Node descriptor. Identifies the node in OPC server's address space.</param>
            <param name="attributeId">Attribute Id. Identifies an attribute of a node.</param>
            <param name="indexRangeList">List of index ranges for individual array dimensions.</param>
            <remarks>
            <para>
            You can obtain <paramref name="nodeDescriptor"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAAttributeArguments.#ctor(System.Object,OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor,OpcLabs.EasyOpc.UA.UAIndexRangeList)">
            <param name="state">User-defined state object.</param>
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeDescriptor">Node descriptor. Identifies the node in OPC server's address space.</param>
            <param name="indexRangeList">List of index ranges for individual array dimensions.</param>
            <remarks>
            <para>
            You can obtain <paramref name="nodeDescriptor"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAAttributeArguments.#ctor(OpcLabs.EasyOpc.UA.UAAttributeArguments)">
            <param name="attributeArguments">Attribute arguments object to copy from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAAttributeArguments.#ctor(OpcLabs.EasyOpc.UA.UANodeArguments)">
            <param name="nodeArguments">An object that specifies the node in the OPC server.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAAttributeArguments.#ctor(OpcLabs.EasyOpc.UA.UANodeArguments,OpcLabs.EasyOpc.UA.UAAttributeId)">
            <param name="nodeArguments">An object that specifies the node in the OPC server.</param>
            <param name="attributeId">Attribute Id. Identifies an attribute of a node.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAAttributeArguments.#ctor(OpcLabs.EasyOpc.UA.UANodeArguments,OpcLabs.EasyOpc.UA.UAAttributeId,OpcLabs.EasyOpc.UA.UAIndexRangeList)">
            <param name="nodeArguments">An object that specifies the node in the OPC server.</param>
            <param name="attributeId">Attribute Id. Identifies an attribute of a node.</param>
            <param name="indexRangeList">List of index ranges for individual array dimensions.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAAttributeArguments.#ctor(OpcLabs.BaseLib.OperationArguments)">
            <param name="operationArguments">Operation arguments object to copy from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAAttributeArguments.op_Equality(OpcLabs.EasyOpc.UA.UAAttributeArguments,OpcLabs.EasyOpc.UA.UAAttributeArguments)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAAttributeArguments.op_Inequality(OpcLabs.EasyOpc.UA.UAAttributeArguments,OpcLabs.EasyOpc.UA.UAAttributeArguments)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAAttributeArguments.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAAttributeArguments.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAAttributeArguments.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAAttributeArguments.ToString">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAAttributeArguments.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with information about the 
            class instance.</summary>
            <param name="info"><inheritdoc/>  </param>
            <param name="context"><inheritdoc/>  </param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAAttributeArguments.Equals(OpcLabs.EasyOpc.UA.UAAttributeArguments)">
            <summary>
            Determines whether this object is equal to the other.
            </summary>
            <param name="other">The other object to be tested for equality with this one.</param>
            <returns>Returns <c>true</c> if the objects are equal; otherwise, returns <c>false</c>.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAAttributeArguments.AttributeId">
            <summary>
            Attribute Id. Identifies an attribute of a node.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAAttributeArguments.IndexRangeList">
            <summary>
            List of index ranges for individual array dimensions.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAMonitoredItemArguments.#ctor">
            <overloads>
            Initializes a new instance of the class.
            </overloads>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAMonitoredItemArguments.#ctor(System.Object,OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor,OpcLabs.EasyOpc.UA.UAMonitoringParameters,OpcLabs.EasyOpc.UA.UASubscriptionParameters)">
            <param name="state">User-defined state object.</param>
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeDescriptor">Node descriptor. Identifies the node in OPC server's address space.</param>
            <param name="monitoringParameters">Contains monitoring parameters (such as the sampling interval, and optional 
            	data change filter).</param>
            <param name="subscriptionParameters">Contains subscription parameters (such as the publishing interval).</param>
            <remarks>
            <para>
            You can obtain <paramref name="nodeDescriptor"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAMonitoredItemArguments.#ctor(System.Object,OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor,OpcLabs.EasyOpc.UA.UAMonitoringParameters)">
            <param name="state">User-defined state object.</param>
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeDescriptor">Node descriptor. Identifies the node in OPC server's address space.</param>
            <param name="monitoringParameters">Contains monitoring parameters (such as the sampling interval, and optional 
            	data change filter).</param>
            <remarks>
            <para>
            You can obtain <paramref name="nodeDescriptor"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAMonitoredItemArguments.#ctor(System.Object,OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor)">
            <param name="state">User-defined state object.</param>
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeDescriptor">Node descriptor. Identifies the node in OPC server's address space.</param>
            <remarks>
            <para>
            You can obtain <paramref name="nodeDescriptor"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAMonitoredItemArguments.#ctor(OpcLabs.BaseLib.OperationArguments)">
            <param name="operationArguments">Operation arguments object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAMonitoredItemArguments.#ctor(OpcLabs.EasyOpc.UA.UAAttributeArguments)">
            <param name="attributeArguments">Attribute arguments object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAMonitoredItemArguments.#ctor(OpcLabs.EasyOpc.UA.UAAttributeArguments,OpcLabs.EasyOpc.UA.UASubscriptionParameters,OpcLabs.EasyOpc.UA.UAMonitoringParameters)">
            <param name="attributeArguments">Attribute arguments object to be copied from.</param>
            <param name="subscriptionParameters">Contains subscription parameters (such as the publishing interval).</param>
            <param name="monitoringParameters">Contains monitoring parameters (such as the sampling interval, and optional 
            data change filter).</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAMonitoredItemArguments.#ctor(OpcLabs.EasyOpc.UA.UAMonitoredItemArguments)">
            <param name="monitoredItemArguments">Monitored item arguments object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAMonitoredItemArguments.#ctor(OpcLabs.EasyOpc.UA.UANodeArguments)">
            <param name="nodeArguments">An object that specifies the node in the OPC server.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAMonitoredItemArguments.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAMonitoredItemArguments.op_Equality(OpcLabs.EasyOpc.UA.UAMonitoredItemArguments,OpcLabs.EasyOpc.UA.UAMonitoredItemArguments)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAMonitoredItemArguments.op_Inequality(OpcLabs.EasyOpc.UA.UAMonitoredItemArguments,OpcLabs.EasyOpc.UA.UAMonitoredItemArguments)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAMonitoredItemArguments.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAMonitoredItemArguments.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAMonitoredItemArguments.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with information about the 
            class instance.</summary>
            <param name="info"><inheritdoc/>  </param>
            <param name="context"><inheritdoc/>  </param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAMonitoredItemArguments.Construct">
            <exclude/>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAMonitoredItemArguments.Equals(OpcLabs.EasyOpc.UA.UAMonitoredItemArguments)">
            <summary>
            Determines whether this object is equal to the other.
            </summary>
            <param name="other">The other object to be tested for equality with this one.</param>
            <returns>Returns <c>true</c> if the objects are equal; otherwise, returns <c>false</c>.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAMonitoredItemArguments.MonitoringParameters">
            <summary>
            Contains monitoring parameters (such as the sampling interval, and optional data change filter).
            </summary>
            <returns>Returns the monitoring parameters object.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAMonitoredItemArguments.SubscriptionParameters">
            <summary>
            Contains subscription parameters (such as the publishing interval).
            </summary>
            <returns>Returns the subscription parameters object.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.UAWriteArgumentsBase">
            <summary>
            Base class for arguments needed to write into an OPC-UA server. Abstract.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UAWriteArgumentsBase.DefaultAttributeType">
            <summary>
            The default type that is used when writing the value of the selected attribute.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UAWriteArgumentsBase.DefaultValueType">
            <summary>
            The default type that is used when writing the value of the Value attribute.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UAWriteArgumentsBase.DefaultValueTypeCode">
            <summary>
            The default type code that is used when writing the Value attribute. Equals to <see cref="F:System.TypeCode.Empty"/>.
            </summary>
            <remarks>
            The <see cref="F:System.TypeCode.Empty"/>value cause the component to determine the type by reading the
            DataType and ValueRank attributes of the node first. Note that this may negatively affect the performance.
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteArgumentsBase.#ctor">
            <overloads>
            Initializes a new instance of the class.
            </overloads>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteArgumentsBase.#ctor(OpcLabs.BaseLib.OperationArguments)">
            <param name="operationArguments">Operation arguments object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteArgumentsBase.#ctor(OpcLabs.EasyOpc.UA.UAAttributeArguments)">
            <param name="attributeArguments">Attribute arguments object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteArgumentsBase.#ctor(OpcLabs.EasyOpc.UA.UAAttributeArguments,System.Type)">
            <param name="attributeArguments">Attribute arguments object to be copied from.</param>
            <param name="valueType">Specifies the type that should be used when writing the Value attribute.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteArgumentsBase.#ctor(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor)">
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeDescriptor">Node descriptor. Identifies the node in OPC server's address space.</param>
            <remarks>
            <para>
            You can obtain <paramref name="nodeDescriptor"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteArgumentsBase.#ctor(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor,System.Type)">
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeDescriptor">Node descriptor. Identifies the node in OPC server's address space.</param>
            <param name="valueType">Specifies the type that should be used when writing the Value attribute.</param>
            <remarks>
            <para>
            You can obtain <paramref name="nodeDescriptor"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteArgumentsBase.#ctor(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor,System.TypeCode)">
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeDescriptor">Node descriptor. Identifies the node in OPC server's address space.</param>
            <param name="valueTypeCode">Specifies the type code that should be used when writing the value.</param>
            <remarks>
            <para>
            You can obtain <paramref name="nodeDescriptor"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteArgumentsBase.#ctor(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor,OpcLabs.EasyOpc.UA.UAAttributeId)">
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeDescriptor">Node descriptor. Identifies the node in OPC server's address space.</param>
            <param name="attributeId">Attribute Id. Identifies an attribute of a node.</param>
            <remarks>
            <para>
            You can obtain <paramref name="nodeDescriptor"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteArgumentsBase.#ctor(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor,OpcLabs.EasyOpc.UA.UAIndexRangeList)">
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeDescriptor">Node descriptor. Identifies the node in OPC server's address space.</param>
            <param name="indexRangeList">List of index ranges for individual array dimensions.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteArgumentsBase.#ctor(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor,OpcLabs.EasyOpc.UA.UAIndexRangeList,System.Type)">
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeDescriptor">Node descriptor. Identifies the node in OPC server's address space.</param>
            <param name="indexRangeList">List of index ranges for individual array dimensions.</param>
            <param name="valueType">Specifies the type that should be used when writing the value.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteArgumentsBase.#ctor(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor,OpcLabs.EasyOpc.UA.UAAttributeId,OpcLabs.EasyOpc.UA.UAIndexRangeList)">
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeDescriptor">Node descriptor. Identifies the node in OPC server's address space.</param>
            <param name="attributeId">Attribute Id. Identifies an attribute of a node.</param>
            <param name="indexRangeList">List of index ranges for individual array dimensions.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteArgumentsBase.#ctor(OpcLabs.EasyOpc.UA.UANodeArguments)">
            <param name="nodeArguments">An object that specifies the node in the OPC server.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteArgumentsBase.#ctor(OpcLabs.EasyOpc.UA.UANodeArguments,System.Type)">
            <param name="nodeArguments">An object that specifies the node in the OPC server.</param>
            <param name="valueType">Specifies the type that should be used when writing the value.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteArgumentsBase.#ctor(OpcLabs.EasyOpc.UA.UANodeArguments,OpcLabs.EasyOpc.UA.UAAttributeId)">
            <param name="nodeArguments">An object that specifies the node in the OPC server.</param>
            <param name="attributeId">Attribute Id. Identifies an attribute of a node.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteArgumentsBase.#ctor(OpcLabs.EasyOpc.UA.UAWriteArgumentsBase)">
            <param name="writeArgumentsBase">Write arguments object base to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteArgumentsBase.op_Equality(OpcLabs.EasyOpc.UA.UAWriteArgumentsBase,OpcLabs.EasyOpc.UA.UAWriteArgumentsBase)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteArgumentsBase.op_Inequality(OpcLabs.EasyOpc.UA.UAWriteArgumentsBase,OpcLabs.EasyOpc.UA.UAWriteArgumentsBase)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteArgumentsBase.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteArgumentsBase.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteArgumentsBase.Equals(OpcLabs.EasyOpc.UA.UAWriteArgumentsBase)">
            <summary>
            Determines whether this object is equal to the other.
            </summary>
            <param name="other">The other object to be tested for equality with this one.</param>
            <returns>Returns <c>true</c> if the objects are equal; otherwise, returns <c>false</c>.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAWriteArgumentsBase.AttributeType">
            <summary>
            Specifies the type that should be used when writing the selected attribute.
            </summary>
            <returns>
            The type that should be used when writing the selected attribute.
            </returns>
            <remarks>
            <para>
            This property can be <c>null</c> if the <see cref="P:OpcLabs.EasyOpc.UA.UAAttributeArguments.AttributeId"/> is equal to 
            <see cref="F:OpcLabs.EasyOpc.UA.UAAttributeId.Value"/>, and <see cref="P:OpcLabs.EasyOpc.UA.UAWriteArgumentsBase.ValueType"/> is <c>null</c>.
            </para>
            <para>
            A <c>null</c> value in this property means that the component will determine the type of the Value attribute
            from the DataType and ValueRank attributes of the node first. This can have negative implication on the 
            performance, and introduces a dependency of the value written on the behavior of the OPC server itself.
            </para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAWriteArgumentsBase.ValueType">
            <summary>
            Specifies the type that should be used when writing the Value attribute.
            </summary>
            <returns>
            The type that should be used when writing the Value attribute.
            </returns>
            <remarks>
            <para>
            The value of this property is not used when the <see cref="P:OpcLabs.EasyOpc.UA.UAAttributeArguments.AttributeId"/> is other than 
            <see cref="F:OpcLabs.EasyOpc.UA.UAAttributeId.Value"/>.</para>
            <para>
            A <c>null</c> value in this property means that the component will determine the type of the Value attribute
            from the DataType and ValueRank attributes of the node first. This can have negative implication on the 
            performance, and introduces a dependency of the value written on the behavior of the OPC server itself.
            </para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAWriteArgumentsBase.ValueTypeFullName">
            <summary>
            Infrastructure.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAWriteArgumentsBase.ValueTypeCode">
            <summary>
            Specifies the type code that should be used when writing the Value attribute.
            </summary>
            <returns>
            <para>
            The type code that should be used when writing the Value attribute. </para>
            <para>
            When the type code is <see cref="F:System.TypeCode.Empty"/>, and the <see cref="P:OpcLabs.EasyOpc.UA.UAAttributeArguments.AttributeId"/> is
            equal to <see cref="F:OpcLabs.EasyOpc.UA.UAAttributeId.Value"/>, it means that the component will determine the type of the 
            Value attribute from the DataType and ValueRank attributes of the node first. This can have negative implication 
            on the performance, and introduces a dependency of the value written on the behavior of the OPC server itself.
            </para>
            </returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.EasyUAAdaptableParameters">
            <summary>
            Adaptable parameters for non-isolated client objects.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAAdaptableParameters.#ctor">
            <overloads>
            <summary>
            Initializes a new instance of the class.
            </summary>
            </overloads>
            
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAAdaptableParameters.#ctor(OpcLabs.EasyOpc.UA.UADiscoveryParameters,OpcLabs.EasyOpc.UA.UAHostParameters,OpcLabs.EasyOpc.UA.UASmartSessionParameters,OpcLabs.EasyOpc.UA.UAClientSubscriptionParameters,OpcLabs.EasyOpc.UA.UAClientMonitoredItemParameters)">
            <param name="discovery">Discovery parameters to be used.</param>
            <param name="host">Host parameters to be used.</param>
            <param name="session">Session parameters to be used.</param>
            <param name="subscription">Subscription parameters to be used.</param>
            <param name="monitoredItem">Monitored item parameters to be used.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAAdaptableParameters.#ctor(OpcLabs.EasyOpc.UA.EasyUAAdaptableParameters)">
            <param name="adaptableParameters">Isolator to copy from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAAdaptableParameters.op_Equality(OpcLabs.EasyOpc.UA.EasyUAAdaptableParameters,OpcLabs.EasyOpc.UA.EasyUAAdaptableParameters)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAAdaptableParameters.op_Inequality(OpcLabs.EasyOpc.UA.EasyUAAdaptableParameters,OpcLabs.EasyOpc.UA.EasyUAAdaptableParameters)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAAdaptableParameters.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAAdaptableParameters.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAAdaptableParameters.Reset">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAAdaptableParameters.ToString">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAAdaptableParameters.Clone">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAAdaptableParameters.MembersEqual(OpcLabs.EasyOpc.UA.EasyUAAdaptableParameters)">
            <summary>
            Infrastructure.
            </summary>
            <param name="other">The object to compare members to.</param>
            <returns>Returns <c>true</c> iff the member values equal.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.EasyUAAdaptableParameters.Default">
            <summary>
            Default adaptable parameters.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.EasyUAAdaptableParameters.Interoperability">
            <summary>
            Adaptable parameters for best interoperability.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.EasyUAAdaptableParameters.OpcCompliance">
            <summary>
            Adaptable parameters for best OPC compliance.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.EasyUAInstanceParameters">
            <summary>
            Contains parameters that influence the behavior of just this instance of the component.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.EasyUAInstanceParameters.DefaultDiscoveryHost">
            <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.UA.EasyUAInstanceParameters.DiscoveryHost"/> property.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAInstanceParameters.#ctor">
            <overloads>
            <summary>
            Initializes a new instance of the class.
            </summary>
            </overloads>
            
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAInstanceParameters.#ctor(OpcLabs.EasyOpc.UA.EasyUAInstanceParameters)">
            <param name="instanceParameters">Parameters to copy from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAInstanceParameters.op_Equality(OpcLabs.EasyOpc.UA.EasyUAInstanceParameters,OpcLabs.EasyOpc.UA.EasyUAInstanceParameters)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAInstanceParameters.op_Inequality(OpcLabs.EasyOpc.UA.EasyUAInstanceParameters,OpcLabs.EasyOpc.UA.EasyUAInstanceParameters)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAInstanceParameters.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAInstanceParameters.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAInstanceParameters.Reset">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAInstanceParameters.ToString">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAInstanceParameters.MembersEqual(OpcLabs.EasyOpc.UA.EasyUAInstanceParameters)">
            <summary>
            Infrastructure.
            </summary>
            <param name="other">The object to compare members to.</param>
            <returns>Returns <c>true</c> iff the member values equal.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.EasyUAInstanceParameters.Default">
            <summary>
            Default host parameters.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.EasyUAInstanceParameters.DiscoveryHost">
            <summary>
            The name of the machine that runs the discovery server that will be used for discovery tasks.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.EasyUAInstanceParameters.Mode">
            <summary>
            Specifies common parameters.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.EasyUAClientMode">
            <summary>
            Specifies common parameters that influence the client mode of operation.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClientMode.op_Equality(OpcLabs.EasyOpc.UA.EasyUAClientMode,OpcLabs.EasyOpc.UA.EasyUAClientMode)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClientMode.op_Inequality(OpcLabs.EasyOpc.UA.EasyUAClientMode,OpcLabs.EasyOpc.UA.EasyUAClientMode)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClientMode.#ctor">
            <summary>Initializes a new instance of the class with default data.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClientMode.#ctor(OpcLabs.EasyOpc.UA.EasyUAClientMode)">
            <param name="clientMode">Mode to copy from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClientMode.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClientMode.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClientMode.ToString">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClientMode.Equals(OpcLabs.EasyOpc.UA.EasyUAClientMode)">
            <summary>
            Determines whether this object is equal to the other.
            </summary>
            <param name="other">The other object to be tested for equality with this one.</param>
            <returns>Returns <c>true</c> if the objects are equal; otherwise, returns <c>false</c>.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.EasyUAClientMode.Default">
            <summary>
            Default client mode.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.EasyUASharedParameters">
            <summary>
            Parameters that are always shared by all instances of the component.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUASharedParameters.#ctor">
            <overloads>
            <summary>
            Initializes a new instance of the class.
            </summary>
            </overloads>
            
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUASharedParameters.#ctor(OpcLabs.EasyOpc.UA.EasyUAEngineParameters)">
            <param name="engine">Engine parameters to be used.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUASharedParameters.#ctor(OpcLabs.EasyOpc.UA.EasyUASharedParameters)">
            <param name="sharedParameters">Parameters to copy from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUASharedParameters.op_Equality(OpcLabs.EasyOpc.UA.EasyUASharedParameters,OpcLabs.EasyOpc.UA.EasyUASharedParameters)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUASharedParameters.op_Inequality(OpcLabs.EasyOpc.UA.EasyUASharedParameters,OpcLabs.EasyOpc.UA.EasyUASharedParameters)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUASharedParameters.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUASharedParameters.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUASharedParameters.Reset">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUASharedParameters.ToString">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUASharedParameters.MembersEqual(OpcLabs.EasyOpc.UA.EasyUASharedParameters)">
            <summary>
            Infrastructure.
            </summary>
            <param name="other">The object to compare members to.</param>
            <returns>Returns <c>true</c> iff the member values equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUASharedParameters.ResetEngine">
            <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.UA.EasyUASharedParameters.Engine"/> to a default.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUASharedParameters.ShouldSerializeEngine">
            <summary>
            Determines whether the <see cref="P:OpcLabs.EasyOpc.UA.EasyUASharedParameters.Engine"/> is not empty.
            </summary>
            <returns><c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.EasyUASharedParameters.Default">
            <summary>
            Default adaptable parameters.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.EasyUASharedParameters.Engine">
            <summary>
            Contains parameters that influence the behavior of the component on the engine (global) level.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.EasyUAEngineParameters">
            <summary>
            Contains values for determining certain OPC-UA parameters heuristically.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.EasyUAEngineParameters.DefaultAutomaticPublishingFactor">
            <summary>
            The default automatic publishing factor that the component uses to determine the publishing interval.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.EasyUAEngineParameters.DefaultFastestAutomaticPublishingInterval">
            <summary>
            The default fastest publishing interval that the component will use when calculating it.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAEngineParameters.#ctor">
            <overloads>
            <summary>
            Initializes a new instance of the class.
            </summary>
            </overloads>
            
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAEngineParameters.#ctor(OpcLabs.EasyOpc.UA.UASmartEngineParameters)">
            <param name="smartEngineParameters">Smart engine parameters to copy from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAEngineParameters.#ctor(OpcLabs.EasyOpc.UA.EasyUAEngineParameters)">
            <param name="easyUAEngineParameters">Parameters to copy from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAEngineParameters.op_Equality(OpcLabs.EasyOpc.UA.EasyUAEngineParameters,OpcLabs.EasyOpc.UA.EasyUAEngineParameters)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAEngineParameters.op_Inequality(OpcLabs.EasyOpc.UA.EasyUAEngineParameters,OpcLabs.EasyOpc.UA.EasyUAEngineParameters)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAEngineParameters.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAEngineParameters.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAEngineParameters.Reset">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAEngineParameters.MembersEqual(OpcLabs.EasyOpc.UA.EasyUAEngineParameters)">
            <summary>
            Infrastructure.
            </summary>
            <param name="other">The object to compare members to.</param>
            <returns>Returns <c>true</c> iff the member values equal.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.EasyUAEngineParameters.Default">
            <summary>
            A default instance of the parameters object.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.EasyUAEngineParameters.AutomaticPublishingFactor">
            <summary>
            Automatic publishing factor that the component uses to determine the publishing interval.
            </summary>
            <remarks>
            If you do not specify the publishing interval (if it is set to zero in <see cref="T:OpcLabs.EasyOpc.UA.UASubscriptionParameters"/>), the
            component will calculate it by dividing the sampling interval by this factor, and multiplying by the queue size.
            The resulting value is limited by <see cref="P:OpcLabs.EasyOpc.UA.EasyUAEngineParameters.FastestAutomaticPublishingInterval"/>.
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.EasyUAEngineParameters.FastestAutomaticPublishingInterval">
            <summary>
            Fastest publishing interval that the component will use when calculating it.
            </summary>
            <remarks>
            If the component is determining the publishing interval automatically, it will not make it faster than this value.
            </remarks>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.EasyUAMonitoredItemChangedEventArgs">
            <summary>
            Provides data for the <see cref="E:OpcLabs.EasyOpc.UA.EasyUAClient.MonitoredItemChanged"/> event.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAMonitoredItemChangedEventArgs.#ctor">
            <summary>
            Creates a new, empty instance.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAMonitoredItemChangedEventArgs.op_Equality(OpcLabs.EasyOpc.UA.EasyUAMonitoredItemChangedEventArgs,OpcLabs.EasyOpc.UA.EasyUAMonitoredItemChangedEventArgs)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAMonitoredItemChangedEventArgs.op_Inequality(OpcLabs.EasyOpc.UA.EasyUAMonitoredItemChangedEventArgs,OpcLabs.EasyOpc.UA.EasyUAMonitoredItemChangedEventArgs)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAMonitoredItemChangedEventArgs.op_Explicit(OpcLabs.EasyOpc.UA.EasyUAMonitoredItemChangedEventArgs)~OpcLabs.EasyOpc.UA.UAAttributeDataResult">
            <summary>
            Converts event arguments to a corresponding result object, <see cref="T:OpcLabs.EasyOpc.UA.UAAttributeDataResult"/>. 
            </summary>
            <param name="eventArgs">The event arguments to be converted.</param>
            <returns>The result object that corresponds to the event arguments. <b>null</b> if the event arguments
            passed in were <b>null</b>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAMonitoredItemChangedEventArgs.ToUAAttributeDataResult(OpcLabs.EasyOpc.UA.EasyUAMonitoredItemChangedEventArgs)">
            <summary>
            Converts event arguments to a corresponding result object, <see cref="T:OpcLabs.EasyOpc.UA.UAAttributeDataResult"/>. 
            </summary>
            <param name="eventArgs">The event arguments to be converted.</param>
            <returns>The result object that corresponds to the event arguments. <b>null</b> if the event arguments
            passed in were <b>null</b>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAMonitoredItemChangedEventArgs.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAMonitoredItemChangedEventArgs.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAMonitoredItemChangedEventArgs.ToString">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAMonitoredItemChangedEventArgs.CheckAttributeData(OpcLabs.EasyOpc.UA.UAAttributeData)">
            <summary>
            Infrastructure.
            </summary>
            <param name="attributeData">Attribute data to be checked.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAMonitoredItemChangedEventArgs.Equals(OpcLabs.EasyOpc.UA.EasyUAMonitoredItemChangedEventArgs)">
            <summary>
            Determines whether this object is equal to the other.
            </summary>
            <param name="other">The other object to be tested for equality with this one.</param>
            <returns>Returns <c>true</c> if the objects are equal; otherwise, returns <c>false</c>.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.EasyUAMonitoredItemChangedEventArgs.AttributeData">
            <summary>
            Attribute data: the value of an attribute, together with status code and timestamps.
            </summary>
            <remarks>
            This property can only be accessed if the <see cref="T:System.Exception"/> is <c>null</c>.
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.EasyUAMonitoredItemChangedEventArgs.Arguments">
            <summary>
            Holds arguments that were used to subscribe to a monitored item in an OPC-UA server.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.EasyUAMonitoredItemChangedEventArgs.Handle">
            <summary>
            The handle of the monitored item subscription, as returned by the method that created the subscription.
            </summary>
            <remarks>
            <para>It is not recommended that you use the handle for purposes other rather than changing the subscription
            or unsubscribing. If you need to identify the item which the incoming notification relates to, pass a State
            argument (or property) to the subscription method, and then interpret the State property in the 
            <see cref="P:OpcLabs.EasyOpc.UA.EasyUAMonitoredItemChangedEventArgs.Arguments"/> of the notification.</para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.EasyUAMonitoredItemChangedEventArgs.StatusInfo">
            <summary>
            Status information corresponding to the contents of the event arguments.
            </summary>
            <value>Contains <see cref="F:OpcLabs.BaseLib.Data.StatusInfo.Unknown"/> when the event arguments represent 
            a failure (non-null <see cref="T:System.Exception"/>). When the event arguments represent a success, the status
            information is determined from the <c>StatusCode</c> of the <see cref="P:OpcLabs.EasyOpc.UA.EasyUAMonitoredItemChangedEventArgs.AttributeData"/>.
            </value>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.UAException">
            <summary>Exceptions arising from OPC operations.</summary>
            <remarks>
            In general, you cannot safely prevent these exceptions from happening. Various conditions external to your code
            can cause OPC failures, e.g. network problems, improper OPC server configuration, etc. For this reason, you should 
            always expect that an OPC operation can fail.
            </remarks>
            <example>
            <code 
                source="..\..\Examples\CSharp\VS2008\Console\UADocExamples\_EasyUAClient.Write.Overload1.cs" 
                lang="CSharp" 
                region="Example"/>
            <code 
                source="..\..\Examples\VBNET\VS2008\Console\UADocExamples\_EasyUAClient.Write.Overload1.vb" 
                lang="VBNET" 
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAException.Create(System.Int32,System.Exception)">
            <exclude/>  // IMPROVE: document
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAException.#ctor(System.String)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAException.#ctor(System.String,System.Exception)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference 
            (<c>Nothing</c> in Visual Basic) if no inner exception is specified.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAException.#ctor(System.String,System.Int32,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:OpcLabs.EasyOpc.UA.UAException"/> class with a specified error message, error 
            code, and a reference to the inner exception that is the cause this exception.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="errorCode">The code of the error.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference 
            (<c>Nothing</c> in Visual Basic) if no inner exception is specified.</param>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.Resource1">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.Resource1.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.Resource1.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.Resource1.EasyUAEngine_GetDataTypeId_NotANodeId">
            <summary>
              Looks up a localized string similar to The OPC-UA server has returned a value for the DataType attribute that is not a NodeId. The converted type of the returned value is &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.Resource1.EasyUAEngine_GetDataTypeId_NotGoodStatus">
            <summary>
              Looks up a localized string similar to The OPC-UA server has returned a status for the DataType attribute that is not Good. The returned status is &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.Resource1.EasyUAEngine_GetDataTypeId_NullValue">
            <summary>
              Looks up a localized string similar to The OPC-UA server has returned a null value for the DataType attribute..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.Resource1.EasyUAEngine_GetValueRank_NotAnInt32">
            <summary>
              Looks up a localized string similar to The OPC-UA server has returned a value for the ValueRank attribute that is not an Int32. The converted type of the returned value is &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.Resource1.EasyUAEngine_GetValueRank_NotGoodStatus">
            <summary>
              Looks up a localized string similar to The OPC-UA server has returned a status for the ValueRank attribute that is not Good. The returned status is &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.Resource1.EasyUAEngine_GetValueRank_NotValid">
            <summary>
              Looks up a localized string similar to The OPC-UA server has returned an invalid value ({0}) for the ValueRank attribute..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.Resource1.EasyUAEngine_GetValueRank_NullValue">
            <summary>
              Looks up a localized string similar to The OPC-UA server has returned a null value for the ValueRank attribute..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.Resource1.EasyUAEngine_MonitoredItemSubscriptionHandleBelongsToOtherClient">
            <summary>
              Looks up a localized string similar to Monitored item subscription handle belongs to other client..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.Resource1.EasyUAEngine_MonitoredItemSubscriptionHandleIsInvalid">
            <summary>
              Looks up a localized string similar to Monitored item subscription handle is invalid..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.Resource1.EasyUAEngine_StatusIsNotGoodFormat">
            <summary>
              Looks up a localized string similar to Status is not good: {0}..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.Resource1.EasyUAEngineBase_LicenseNoLongerValid">
            <summary>
              Looks up a localized string similar to The license is no longer valid. You might be running with an evaluation license limited by an absolute date that has already passed..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.Resource1.EasyUAEngineBase_LicenseNotValid">
            <summary>
              Looks up a localized string similar to License is not valid..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.Resource1.EasyUAEngineBase_NotAllowedToRun">
            <summary>
              Looks up a localized string similar to Not allowed to run by the license. You might be using a trial license, and the version of the software you are using is obsolete. Obtain a recent version to resolve this problem..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.Resource1.EasyUAEngineBase_OptionNotAllowed">
            <summary>
              Looks up a localized string similar to Option not allowed. The license you have does not allow the use of the option invoked. Obtain and install proper license to resolve this error..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.Resource1.EasyUAEngineBase_PlatformNotAllowed">
            <summary>
              Looks up a localized string similar to Platform not allowed. The license you have does not allow use on the current platform. Obtain and install proper license to resolve this error..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.Resource1.EasyUAEngineBase_RunTimeIsOverLimit">
            <summary>
              Looks up a localized string similar to Run time is over the limit. The license you have (most likely trial version) does not provide valid data after certain time period expires. Note that after the component&apos;s process is simply restarted, valid data will be provided again. Obtain and install proper license to resolve this error..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.Resource1.UAClientEngine_OpcOperationFailureFormat">
            <summary>
              Looks up a localized string similar to {0} The inner exception, of type &apos;{1}&apos;, contains details about the problem..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.Resource1.UAException_Create_IntroFormat">
            <summary>
              Looks up a localized string similar to An OPC-UA operation failure with error code {0} (0x{0:X8}) occurred, originating from &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.Resource1.UAException_Create_ServiceExceptionFormat">
            <summary>
              Looks up a localized string similar to {0} The inner OPC-UA service exception with service result &apos;{1}&apos; contains details about the problem..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.Resource1.UAMonitoredItemArgumentsConverter_ConvertTo_NotAUAMonitoredItemArguments">
            <summary>
              Looks up a localized string similar to The value passed to a type converter is not a UAMonitoredItemArguments, but a &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.Resource1.UAStatusCodeException_Serialization_StatusCode_Null">
            <summary>
              Looks up a localized string similar to The StatusCode value is not present..
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.EasyUAMonitoredItemArguments">
            <summary>
            Holds all arguments needed to subscribe to a monitored item in an OPC-UA server, possibly including a callback method.
            </summary>
            <example>
            <code 
                source="..\..\Examples\CSharp\VS2008\Console\UADocExamples\_EasyUAClient.SubscribeMultipleMonitoredItems.Overload1.cs" 
                lang="CSharp" 
                region="Example"/>
            <code 
                source="..\..\Examples\VBNET\VS2008\Console\UADocExamples\_EasyUAClient.SubscribeMultipleMonitoredItems.Overload1.vb" 
                lang="VBNET" 
                region="Example"/>
            </example>
            <example>
            <code 
                source="..\..\Examples\CSharp\VS2008\Console\UADocExamples\_EasyUAClient.GetMonitoredItemArguments.Main.cs" 
                lang="CSharp" 
                region="Example"/>
            <code 
                source="..\..\Examples\VBNET\VS2008\Console\UADocExamples\_EasyUAClient.GetMonitoredItemArguments.Main.vb" 
                lang="VBNET" 
                region="Example"/>
            </example>
            <example>
            <code 
                source="..\..\Examples\CSharp\VS2008\Console\UADocExamples\_EasyUAClient.GetMonitoredItemArgumentsDictionary.Main.cs" 
                lang="CSharp" 
                region="Example"/>
            <code 
                source="..\..\Examples\VBNET\VS2008\Console\UADocExamples\_EasyUAClient.GetMonitoredItemArgumentsDictionary.Main.vb" 
                lang="VBNET" 
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAMonitoredItemArguments.#ctor">
            <overloads>
            Initializes a new instance of the class.
            </overloads>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAMonitoredItemArguments.#ctor(OpcLabs.EasyOpc.UA.EasyUAMonitoredItemArguments)">
            <param name="monitoredItemArguments">Monitored item arguments object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAMonitoredItemArguments.#ctor(System.EventHandler{OpcLabs.EasyOpc.UA.EasyUAMonitoredItemChangedEventArgs},OpcLabs.EasyOpc.UA.UAMonitoredItemArguments)">
            <param name="callback">A callback method to be invoked for each significant monitored item change.</param>
            <param name="monitoredItemArguments">Monitored item arguments object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAMonitoredItemArguments.#ctor(System.EventHandler{OpcLabs.EasyOpc.UA.EasyUAMonitoredItemChangedEventArgs},System.Object,OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor,OpcLabs.EasyOpc.UA.UAMonitoringParameters,OpcLabs.EasyOpc.UA.UASubscriptionParameters)">
            <param name="callback">A callback method to be invoked for each significant monitored item change.</param>
            <param name="state">User-defined state object.</param>
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeDescriptor">Node descriptor. Identifies the node in OPC server's address space.</param>
            <param name="monitoringParameters">Contains monitoring parameters (such as the sampling interval, and optional 
            	data change filter).</param>
            <param name="subscriptionParameters">Contains subscription parameters (such as the publishing interval).</param>
            <remarks>
            <para>
            If <paramref name="callback"/> is a null reference, only the 
            <see cref="E:OpcLabs.EasyOpc.UA.EasyUAClient.MonitoredItemChanged"/> event is generated, and no callback method is invoked.</para>
            <para>
            You can obtain <paramref name="nodeDescriptor"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAMonitoredItemArguments.#ctor(System.EventHandler{OpcLabs.EasyOpc.UA.EasyUAMonitoredItemChangedEventArgs},System.Object,OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor,OpcLabs.EasyOpc.UA.UAMonitoringParameters)">
            <param name="callback">A callback method to be invoked for each significant monitored item change.</param>
            <param name="state">User-defined state object.</param>
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeDescriptor">Node descriptor. Identifies the node in OPC server's address space.</param>
            <param name="monitoringParameters">Contains monitoring parameters (such as the sampling interval, and optional 
            	data change filter).</param>
            <remarks>
            <para>If <paramref name="callback"/> is a null reference, only the 
            <see cref="E:OpcLabs.EasyOpc.UA.EasyUAClient.MonitoredItemChanged"/> event is generated, and no callback method is invoked.</para>
            <para>
            You can obtain <paramref name="nodeDescriptor"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAMonitoredItemArguments.#ctor(System.EventHandler{OpcLabs.EasyOpc.UA.EasyUAMonitoredItemChangedEventArgs},System.Object,OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor)">
            <param name="callback">A callback method to be invoked for each significant monitored item change.</param>
            <param name="state">User-defined state object.</param>
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeDescriptor">Node descriptor. Identifies the node in OPC server's address space.</param>
            <remarks>
            <para>If <paramref name="callback"/> is a null reference, only the 
            <see cref="E:OpcLabs.EasyOpc.UA.EasyUAClient.MonitoredItemChanged"/> event is generated, and no callback method is invoked.</para>
            <para>
            You can obtain <paramref name="nodeDescriptor"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAMonitoredItemArguments.#ctor(System.Object,OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor,OpcLabs.EasyOpc.UA.UAMonitoringParameters,OpcLabs.EasyOpc.UA.UASubscriptionParameters)">
            <param name="state">User-defined state object.</param>
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeDescriptor">Node descriptor. Identifies the node in OPC server's address space.</param>
            <param name="monitoringParameters">Contains monitoring parameters (such as the sampling interval, and optional 
            	data change filter).</param>
            <param name="subscriptionParameters">Contains subscription parameters (such as the publishing interval).</param>
            <remarks>
            <para>
            You can obtain <paramref name="nodeDescriptor"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAMonitoredItemArguments.#ctor(System.Object,OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor,OpcLabs.EasyOpc.UA.UAMonitoringParameters)">
            <param name="state">User-defined state object.</param>
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeDescriptor">Node descriptor. Identifies the node in OPC server's address space.</param>
            <param name="monitoringParameters">Contains monitoring parameters (such as the sampling interval, and optional 
            	data change filter).</param>
            <remarks>
            <para>
            You can obtain <paramref name="nodeDescriptor"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAMonitoredItemArguments.#ctor(System.Object,OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor)">
            <param name="state">User-defined state object.</param>
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeDescriptor">Node descriptor. Identifies the node in OPC server's address space.</param>
            <remarks>
            <para>
            You can obtain <paramref name="nodeDescriptor"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAMonitoredItemArguments.#ctor(OpcLabs.BaseLib.OperationArguments)">
            <param name="operationArguments">Operation arguments object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAMonitoredItemArguments.#ctor(OpcLabs.EasyOpc.UA.UAAttributeArguments)">
            <param name="attributeArguments">Attribute arguments object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAMonitoredItemArguments.#ctor(OpcLabs.EasyOpc.UA.UAAttributeArguments,OpcLabs.EasyOpc.UA.UASubscriptionParameters,OpcLabs.EasyOpc.UA.UAMonitoringParameters)">
            <param name="attributeArguments">Attribute arguments object to be copied from.</param>
            <param name="subscriptionParameters">Contains subscription parameters (such as the publishing interval).</param>
            <param name="monitoringParameters">Contains monitoring parameters (such as the sampling interval, and optional 
            data change filter).</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAMonitoredItemArguments.#ctor(OpcLabs.EasyOpc.UA.UAMonitoredItemArguments)">
            <param name="monitoredItemArguments">Monitored item arguments object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAMonitoredItemArguments.#ctor(OpcLabs.EasyOpc.UA.UANodeArguments)">
            <param name="nodeArguments">An object that specifies the node in the OPC server.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAMonitoredItemArguments.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAMonitoredItemArguments.op_Equality(OpcLabs.EasyOpc.UA.EasyUAMonitoredItemArguments,OpcLabs.EasyOpc.UA.EasyUAMonitoredItemArguments)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAMonitoredItemArguments.op_Inequality(OpcLabs.EasyOpc.UA.EasyUAMonitoredItemArguments,OpcLabs.EasyOpc.UA.EasyUAMonitoredItemArguments)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAMonitoredItemArguments.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAMonitoredItemArguments.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAMonitoredItemArguments.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with information about the 
            class instance.</summary>
            <param name="info"><inheritdoc/>  </param>
            <param name="context"><inheritdoc/>  </param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAMonitoredItemArguments.Construct">
            <exclude/>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAMonitoredItemArguments.Equals(OpcLabs.EasyOpc.UA.EasyUAMonitoredItemArguments)">
            <summary>
            Determines whether this object is equal to the other.
            </summary>
            <param name="other">The other object to be tested for equality with this one.</param>
            <returns>Returns <c>true</c> if the objects are equal; otherwise, returns <c>false</c>.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.EasyUAMonitoredItemArguments.Callback">
            <summary>A callback method to be invoked for each significant monitored item change.</summary>
            <value>If this is a null reference, only the <see cref="E:OpcLabs.EasyOpc.UA.EasyUAClient.MonitoredItemChanged"/> 
            event is generated, and no callback method is invoked.</value>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.EasyUAMonitoredItemArgumentsDictionary">
            <summary>
            A dictionary of monitored item argument objects, keyed by monitored item handle.
            </summary>
            <example>
            <code source="..\..\Examples\CSharp\VS2008\Console\UADocExamples\_EasyUAClient.GetMonitoredItemArgumentsDictionary.Main.cs" lang="CSharp" region="Example"/>
            <code source="..\..\Examples\VBNET\VS2008\Console\UADocExamples\_EasyUAClient.GetMonitoredItemArgumentsDictionary.Main.vb" lang="VBNET" region="Example"/>
            </example>
            <remarks>This dictionary is returned by <see cref="M:OpcLabs.EasyOpc.UA.EasyUAClient.GetMonitoredItemArgumentsDictionary"/>.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAMonitoredItemArgumentsDictionary.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception 
            being thrown. </param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or 
            destination. </param>
            <remarks>
            This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.
            </remarks>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.UAReadArguments">
            <summary>
            Holds all arguments needed to read from an OPC-UA server.
            </summary>
            <example>
            <code 
                source="..\..\Examples\CSharp\VS2008\Console\UADocExamples\_EasyUAClient.ReadMultiple.Main.cs" 
                lang="CSharp" 
                region="Example"/>
            <code 
                source="..\..\Examples\VBNET\VS2008\Console\UADocExamples\_EasyUAClient.ReadMultiple.Main.vb" 
                lang="VBNET" 
                region="Example"/>
            </example>
            <example>
            <code 
                source="..\..\Examples\CSharp\VS2008\Console\UADocExamples\_EasyUAClient.ReadMultipleValues.Main.cs" 
                lang="CSharp" 
                region="Example"/>
            <code 
                source="..\..\Examples\VBNET\VS2008\Console\UADocExamples\_EasyUAClient.ReadMultipleValues.Main.vb" 
                lang="VBNET" 
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAReadArguments.#ctor">
            <overloads>
            Initializes a new instance of the class.
            </overloads>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAReadArguments.#ctor(OpcLabs.BaseLib.OperationArguments)">
            <param name="operationArguments">Operation arguments object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAReadArguments.#ctor(OpcLabs.EasyOpc.UA.UAAttributeArguments)">
            <param name="attributeArguments">Attribute arguments object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAReadArguments.#ctor(OpcLabs.EasyOpc.UA.UAAttributeArguments,OpcLabs.EasyOpc.UA.UAReadParameters)">
            <param name="attributeArguments">Attribute arguments object to be copied from.</param>
            <param name="readParameters">Contains parameters for OPC-UA read operations, such as the maximum age of the value.
            </param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAReadArguments.#ctor(OpcLabs.EasyOpc.UA.UAReadArguments)">
            <param name="readArguments">Read arguments object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAReadArguments.#ctor(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor)">
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeDescriptor">Node descriptor. Identifies the node in OPC server's address space.</param>
            <remarks>
            <para>
            You can obtain <paramref name="nodeDescriptor"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAReadArguments.#ctor(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor,OpcLabs.EasyOpc.UA.UAAttributeId)">
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeDescriptor">Node descriptor. Identifies the node in OPC server's address space.</param>
            <param name="attributeId">Attribute Id. Identifies an attribute of a node.</param>
            <remarks>
            <para>
            You can obtain <paramref name="nodeDescriptor"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAReadArguments.#ctor(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor,OpcLabs.EasyOpc.UA.UAAttributeId,OpcLabs.EasyOpc.UA.UAIndexRangeList)">
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeDescriptor">Node descriptor. Identifies the node in OPC server's address space.</param>
            <param name="attributeId">Attribute Id. Identifies an attribute of a node.</param>
            <param name="indexRangeList">List of index ranges for individual array dimensions.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAReadArguments.#ctor(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor,OpcLabs.EasyOpc.UA.UAAttributeId,OpcLabs.EasyOpc.UA.UAReadParameters)">
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeDescriptor">Node descriptor. Identifies the node in OPC server's address space.</param>
            <param name="attributeId">Attribute Id. Identifies an attribute of a node.</param>
            <param name="readParameters">Contains parameters for OPC-UA read operations, such as the maximum age of the value.
            </param>
            <remarks>
            <para>
            You can obtain <paramref name="nodeDescriptor"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAReadArguments.#ctor(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor,OpcLabs.EasyOpc.UA.UAAttributeId,OpcLabs.EasyOpc.UA.UAIndexRangeList,OpcLabs.EasyOpc.UA.UAReadParameters)">
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeDescriptor">Node descriptor. Identifies the node in OPC server's address space.</param>
            <param name="attributeId">Attribute Id. Identifies an attribute of a node.</param>
            <param name="indexRangeList">List of index ranges for individual array dimensions.</param>
            <param name="readParameters">Contains parameters for OPC-UA read operations, such as the maximum age of the value.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAReadArguments.#ctor(OpcLabs.EasyOpc.UA.UANodeArguments)">
            <param name="nodeArguments">An object that specifies the node in the OPC server.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAReadArguments.#ctor(OpcLabs.EasyOpc.UA.UANodeArguments,OpcLabs.EasyOpc.UA.UAAttributeId)">
            <param name="nodeArguments">An object that specifies the node in the OPC server.</param>
            <param name="attributeId">Attribute Id. Identifies an attribute of a node.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAReadArguments.op_Equality(OpcLabs.EasyOpc.UA.UAReadArguments,OpcLabs.EasyOpc.UA.UAReadArguments)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAReadArguments.op_Inequality(OpcLabs.EasyOpc.UA.UAReadArguments,OpcLabs.EasyOpc.UA.UAReadArguments)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAReadArguments.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAReadArguments.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAReadArguments.Equals(OpcLabs.EasyOpc.UA.UAReadArguments)">
            <summary>
            Determines whether this object is equal to the other.
            </summary>
            <param name="other">The other object to be tested for equality with this one.</param>
            <returns>Returns <c>true</c> if the objects are equal; otherwise, returns <c>false</c>.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAReadArguments.ReadParameters">
            <summary>
            Contains parameters for OPC-UA read operations, such as the maximum age of the value.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.EasyUASubscriptionChangeArguments">
            <summary>
            Contains arguments describing how the monitoring item subscription should be changed.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUASubscriptionChangeArguments.#ctor(OpcLabs.BaseLib.OperationArguments)">
            <overloads>
            <summary>
            Initializes a new instance of the class.
            </summary>
            </overloads>
            <summary>
            Initializes a new copy of the <see cref="T:OpcLabs.EasyOpc.UA.EasyUASubscriptionChangeArguments"/> object from the 
            <see cref="T:OpcLabs.BaseLib.OperationArguments"/> object.
            </summary>
            <param name="operationArguments">Arguments to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUASubscriptionChangeArguments.#ctor(OpcLabs.BaseLib.HandleArguments)">
            <summary>
            Initializes a new copy of the <see cref="T:OpcLabs.EasyOpc.UA.EasyUASubscriptionChangeArguments"/> object from the 
            <see cref="T:OpcLabs.BaseLib.HandleArguments"/>.
            </summary>
            <param name="handleArguments">Arguments to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUASubscriptionChangeArguments.#ctor(OpcLabs.BaseLib.HandleArguments,OpcLabs.EasyOpc.UA.UAMonitoringParameters,OpcLabs.EasyOpc.UA.UASubscriptionParameters)">
            <summary>
            Initializes a new copy of the <see cref="T:OpcLabs.EasyOpc.UA.EasyUASubscriptionChangeArguments"/> object from the 
            <see cref="T:OpcLabs.BaseLib.HandleArguments"/>, monitoring parameters, and subscription parameters.
            </summary>
            <param name="handleArguments"><see cref="T:OpcLabs.BaseLib.HandleArguments"/> to be copied from.</param>
            <param name="monitoringParameters">Contains new monitoring parameters (such as the sampling interval, and optional 
            data change filter).</param>
            <param name="subscriptionParameters">Contains new subscription parameters (such as the publishing interval).</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUASubscriptionChangeArguments.#ctor(System.Int32,OpcLabs.EasyOpc.UA.UAMonitoringParameters,OpcLabs.EasyOpc.UA.UASubscriptionParameters)">
            <summary>
            Initializes a new copy of the <see cref="T:OpcLabs.EasyOpc.UA.EasyUASubscriptionChangeArguments"/> object from the 
            monitoring item handle, monitoring parameters, and subscription parameters.
            </summary>
            <param name="handle">Contains handle of the monitored item to be affected.</param>
            <param name="monitoringParameters">Contains new monitoring parameters (such as the sampling interval, and optional 
            data change filter).</param>
            <param name="subscriptionParameters">Contains new subscription parameters (such as the publishing interval).</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUASubscriptionChangeArguments.#ctor(System.Int32,OpcLabs.EasyOpc.UA.UAMonitoringParameters)">
            <summary>
            Initializes a new copy of the <see cref="T:OpcLabs.EasyOpc.UA.EasyUASubscriptionChangeArguments"/> object from the 
            monitoring item handle, and monitoring parameters.
            </summary>
            <param name="handle">Contains handle of the monitored item to be affected.</param>
            <param name="monitoringParameters">Contains new monitoring parameters (such as the sampling interval, and optional 
            data change filter).</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUASubscriptionChangeArguments.#ctor(OpcLabs.EasyOpc.UA.EasyUASubscriptionChangeArguments)">
            <summary>
            Initializes a new copy of the <see cref="T:OpcLabs.EasyOpc.UA.EasyUASubscriptionChangeArguments"/> object from an existing instance.
            </summary>
            <param name="subscriptionChangeArguments">Arguments to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUASubscriptionChangeArguments.op_Equality(OpcLabs.EasyOpc.UA.EasyUASubscriptionChangeArguments,OpcLabs.EasyOpc.UA.EasyUASubscriptionChangeArguments)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUASubscriptionChangeArguments.op_Inequality(OpcLabs.EasyOpc.UA.EasyUASubscriptionChangeArguments,OpcLabs.EasyOpc.UA.EasyUASubscriptionChangeArguments)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUASubscriptionChangeArguments.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUASubscriptionChangeArguments.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUASubscriptionChangeArguments.Equals(OpcLabs.EasyOpc.UA.EasyUASubscriptionChangeArguments)">
            <summary>
            Determines whether this object is equal to the other.
            </summary>
            <param name="other">The other object to be tested for equality with this one.</param>
            <returns>Returns <c>true</c> if the objects are equal; otherwise, returns <c>false</c>.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.EasyUASubscriptionChangeArguments.MonitoringParameters">
            <summary>
            Contains new monitoring parameters (such as the sampling interval, and optional 
            data change filter).
            </summary>
            <returns>Returns the monitoring parameters object.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.EasyUASubscriptionChangeArguments.SubscriptionParameters">
            <summary>
            Contains snew ubscription parameters (such as the publishing interval).
            </summary>
            <returns>Returns the subscription parameters object.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.UAAttributeDataResult">
            <summary>
            <summary>Holds result of a Read operation, i.e. the data obtained for an attribute of a node in OPC Server's
            address space.</summary>
            </summary>
            <example>
            <code source="..\..\Examples\CSharp\VS2008\Console\UADocExamples\_EasyUAClient.ReadMultiple.Main.cs" lang="CSharp" region="Example"/>
            <code source="..\..\Examples\VBNET\VS2008\Console\UADocExamples\_EasyUAClient.ReadMultiple.Main.vb" lang="VBNET" region="Example"/>
            </example>
            <remarks>
            <para>The result is successful if the <see cref="P:OpcLabs.BaseLib.OperationResult.Exception"/> is a null reference. Otherwise, this 
            property contains information about the reason of the failure.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAAttributeDataResult.#ctor">
            <overloads>
            <summary>
            Initializes a new instance of the class.
            </summary>
            </overloads>
            
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAAttributeDataResult.#ctor(System.Object,System.Exception,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAAttributeDataResult.#ctor(System.Object,System.Exception,System.Int32,OpcLabs.EasyOpc.UA.UAAttributeData)">
            <summary>Initializes a new instance of the class, with given state object, exception, error code, and 
            <see cref="T:OpcLabs.EasyOpc.UA.UAAttributeData"/>.</summary>
            <param name="state">The state object specified when the operation was invoked.</param>
            <param name="exception">The reason of the failure of the operation.</param>
            <param name="errorCode">The HRESULT of the error.</param>
            <param name="attributeData">The <see cref="T:OpcLabs.EasyOpc.UA.UAAttributeData"/> (value, timestamps and satus code) that is a 
            successful result of the operation.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAAttributeDataResult.#ctor(System.Object,OpcLabs.EasyOpc.UA.UAAttributeData)">
            <summary>Initializes a new instance of the class, with given state object and 
            <see cref="T:OpcLabs.EasyOpc.UA.UAAttributeData"/>.</summary>
            <param name="state">The state object specified when the operation was invoked.</param>
            <param name="attributeData">The <see cref="T:OpcLabs.EasyOpc.UA.UAAttributeData"/> (value, timestamps and status code) that is 
            a successful result of the operation.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAAttributeDataResult.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAAttributeDataResult.op_Equality(OpcLabs.EasyOpc.UA.UAAttributeDataResult,OpcLabs.EasyOpc.UA.UAAttributeDataResult)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAAttributeDataResult.op_Inequality(OpcLabs.EasyOpc.UA.UAAttributeDataResult,OpcLabs.EasyOpc.UA.UAAttributeDataResult)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAAttributeDataResult.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with information about the 
            class instance.</summary>
            <param name="info"><inheritdoc/>  </param>
            <param name="context"><inheritdoc/>  </param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAAttributeDataResult.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAAttributeDataResult.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAAttributeDataResult.ToString">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAAttributeDataResult.Equals(OpcLabs.EasyOpc.UA.UAAttributeDataResult)">
            <summary>
            Determines whether this object is equal to the other.
            </summary>
            <param name="other">The other object to be tested for equality with this one.</param>
            <returns>Returns <c>true</c> if the objects are equal; otherwise, returns <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAAttributeDataResult.CheckAttributeData(OpcLabs.EasyOpc.UA.UAAttributeData)">
            <summary>
            Infrastructure.
            </summary>
            <param name="attributeData">Attribute data to be checked.</param>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAAttributeDataResult.AttributeData">
            <summary>
            Attribute data: the value of an attribute, together with status code and timestamps.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAAttributeDataResult.StatusInfo">
            <summary>
            Status information.
            </summary>
            <remarks>When the result represents a failure, the status information is 
            <see cref="F:OpcLabs.BaseLib.Data.StatusInfo.Unknown"/>. When the result represents a success, the status information
            depends on the status code of the <see cref="P:OpcLabs.EasyOpc.UA.UAAttributeDataResult.AttributeData"/>.
            </remarks>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.UAWriteArguments">
            <summary>
            Holds all arguments needed to write into an OPC-UA server.
            </summary>
            <example>
            <code 
                source="..\..\Examples\CSharp\VS2008\Console\UADocExamples\_EasyUAClient.WriteMultiple.TestSuccess.cs" 
                lang="CSharp" 
                region="Example"/>
            <code 
                source="..\..\Examples\VBNET\VS2008\Console\UADocExamples\_EasyUAClient.WriteMultiple.TestSuccess.vb" 
                lang="VBNET" 
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteArguments.#ctor">
            <overloads>
            Initializes a new instance of the class.
            </overloads>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteArguments.#ctor(OpcLabs.BaseLib.OperationArguments)">
            <param name="operationArguments">Operation arguments object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteArguments.#ctor(OpcLabs.EasyOpc.UA.UAAttributeArguments)">
            <param name="attributeArguments">Attribute arguments object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteArguments.#ctor(OpcLabs.EasyOpc.UA.UAAttributeArguments,OpcLabs.EasyOpc.UA.UAAttributeData)">
            <param name="attributeArguments">Attribute arguments object to be copied from.</param>
            <param name="attributeData">Value of an attribute, together with status code and timestamps, to be written.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteArguments.#ctor(OpcLabs.EasyOpc.UA.UAAttributeArguments,OpcLabs.EasyOpc.UA.UAAttributeData,System.Type)">
            <param name="attributeArguments">Attribute arguments object to be copied from.</param>
            <param name="attributeData">Value of an attribute, together with status code and timestamps, to be written.</param>
            <param name="valueType">Specifies the type that should be used when writing the Value attribute.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteArguments.#ctor(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor)">
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeDescriptor">Node descriptor. Identifies the node in OPC server's address space.</param>
            <remarks>
            <para>
            You can obtain <paramref name="nodeDescriptor"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteArguments.#ctor(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor,OpcLabs.EasyOpc.UA.UAAttributeData)">
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeDescriptor">Node descriptor. Identifies the node in OPC server's address space.</param>
            <param name="attributeData">Value of an attribute, together with status code and timestamps, to be written.</param>
            <remarks>
            <para>
            You can obtain <paramref name="nodeDescriptor"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteArguments.#ctor(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor,OpcLabs.EasyOpc.UA.UAAttributeData,System.Type)">
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeDescriptor">Node descriptor. Identifies the node in OPC server's address space.</param>
            <param name="attributeData">Value of an attribute, together with status code and timestamps, to be written.</param>
            <param name="valueType">Specifies the type that should be used when writing the value.</param>
            <remarks>
            <para>
            You can obtain <paramref name="nodeDescriptor"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteArguments.#ctor(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor,OpcLabs.EasyOpc.UA.UAAttributeData,System.TypeCode)">
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeDescriptor">Node descriptor. Identifies the node in OPC server's address space.</param>
            <param name="attributeData">Value of an attribute, together with status code and timestamps, to be written.</param>
            <param name="valueTypeCode">Specifies the type code that should be used when writing the value.</param>
            <remarks>
            <para>
            You can obtain <paramref name="nodeDescriptor"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteArguments.#ctor(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor,OpcLabs.EasyOpc.UA.UAAttributeData,OpcLabs.EasyOpc.UA.UAAttributeId)">
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeDescriptor">Node descriptor. Identifies the node in OPC server's address space.</param>
            <param name="attributeData">Value of an attribute, together with status code and timestamps, to be written.</param>
            <param name="attributeId">Attribute Id. Identifies an attribute of a node.</param>
            <remarks>
            <para>
            You can obtain <paramref name="nodeDescriptor"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteArguments.#ctor(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor,OpcLabs.EasyOpc.UA.UAAttributeData,OpcLabs.EasyOpc.UA.UAAttributeId,OpcLabs.EasyOpc.UA.UAIndexRangeList)">
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeDescriptor">Node descriptor. Identifies the node in OPC server's address space.</param>
            <param name="attributeData">Value of an attribute, together with status code and timestamps, to be written.</param>
            <param name="attributeId">Attribute Id. Identifies an attribute of a node.</param>
            <param name="indexRangeList">List of index ranges for individual array dimensions.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteArguments.#ctor(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor,OpcLabs.EasyOpc.UA.UAAttributeData,OpcLabs.EasyOpc.UA.UAIndexRangeList)">
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeDescriptor">Node descriptor. Identifies the node in OPC server's address space.</param>
            <param name="attributeData">Value of an attribute, together with status code and timestamps, to be written.</param>
            <param name="indexRangeList">List of index ranges for individual array dimensions.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteArguments.#ctor(OpcLabs.EasyOpc.UA.UANodeArguments)">
            <param name="nodeArguments">An object that specifies the node in the OPC server.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteArguments.#ctor(OpcLabs.EasyOpc.UA.UANodeArguments,OpcLabs.EasyOpc.UA.UAAttributeData,System.Type)">
            <param name="nodeArguments">An object that specifies the node in the OPC server.</param>
            <param name="attributeData">Value of an attribute, together with status code and timestamps, to be written.</param>
            <param name="valueType">Specifies the type that should be used when writing the value.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteArguments.#ctor(OpcLabs.EasyOpc.UA.UAWriteArguments)">
            <param name="writeArguments">Write arguments object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteArguments.#ctor(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor,OpcLabs.EasyOpc.UA.UAAttributeData,OpcLabs.EasyOpc.UA.UAIndexRangeList,System.Type)">
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeDescriptor">Node descriptor. Identifies the node in OPC server's address space.</param>
            <param name="attributeData">Value of an attribute, together with status code and timestamps, to be written.</param>
            <param name="indexRangeList">List of index ranges for individual array dimensions.</param>
            <param name="valueType">Specifies the type that should be used when writing the value.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteArguments.#ctor(OpcLabs.EasyOpc.UA.UANodeArguments,OpcLabs.EasyOpc.UA.UAAttributeData,OpcLabs.EasyOpc.UA.UAAttributeId)">
            <param name="nodeArguments">An object that specifies the node in the OPC server.</param>
            <param name="attributeData">Value of an attribute, together with status code and timestamps, to be written.</param>
            <param name="attributeId">Attribute Id. Identifies an attribute of a node.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteArguments.op_Equality(OpcLabs.EasyOpc.UA.UAWriteArguments,OpcLabs.EasyOpc.UA.UAWriteArguments)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteArguments.op_Inequality(OpcLabs.EasyOpc.UA.UAWriteArguments,OpcLabs.EasyOpc.UA.UAWriteArguments)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteArguments.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteArguments.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteArguments.Equals(OpcLabs.EasyOpc.UA.UAWriteArguments)">
            <summary>
            Determines whether this object is equal to the other.
            </summary>
            <param name="other">The other object to be tested for equality with this one.</param>
            <returns>Returns <c>true</c> if the objects are equal; otherwise, returns <c>false</c>.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAWriteArguments.AttributeData">
            <summary>
            The value of an attribute, together with status code and timestamps.
            </summary>
            <returns>Returns the attribute data.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.UAWriteValueArguments">
            <summary>
            Holds all arguments needed to write a value into an OPC-UA server.
            </summary>
            <example>
            <code 
                source="..\..\Examples\CSharp\VS2008\Console\UADocExamples\_EasyUAClient.WriteMultipleValues.TestSuccess.cs" 
                lang="CSharp" 
                region="Example"/>
            <code 
                source="..\..\Examples\VBNET\VS2008\Console\UADocExamples\_EasyUAClient.WriteMultipleValues.TestSuccess.vb" 
                lang="VBNET" 
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteValueArguments.#ctor">
            <overloads>
            Initializes a new instance of the class.
            </overloads>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteValueArguments.#ctor(OpcLabs.BaseLib.OperationArguments)">
            <param name="operationArguments">Operation arguments object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteValueArguments.#ctor(OpcLabs.EasyOpc.UA.UAAttributeArguments)">
            <param name="attributeArguments">Attribute arguments object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteValueArguments.#ctor(OpcLabs.EasyOpc.UA.UAAttributeArguments,System.Object)">
            <param name="attributeArguments">Attribute arguments object to be copied from.</param>
            <param name="value">The value to be written.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteValueArguments.#ctor(OpcLabs.EasyOpc.UA.UAAttributeArguments,System.Object,System.Type)">
            <param name="attributeArguments">Attribute arguments object to be copied from.</param>
            <param name="value">The value to be written.</param>
            <param name="valueType">Specifies the type that should be used when writing the value.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteValueArguments.#ctor(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor)">
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeDescriptor">Node descriptor. Identifies the node in OPC server's address space.</param>
            <remarks>
            <para>
            You can obtain <paramref name="nodeDescriptor"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteValueArguments.#ctor(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor,System.Object)">
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeDescriptor">Node descriptor. Identifies the node in OPC server's address space.</param>
            <param name="value">The value to be written.</param>
            <remarks>
            <para>
            You can obtain <paramref name="nodeDescriptor"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteValueArguments.#ctor(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor,System.Object,System.Type)">
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeDescriptor">Node descriptor. Identifies the node in OPC server's address space.</param>
            <param name="value">The value to be written.</param>
            <param name="valueType">Specifies the type that should be used when writing the value.</param>
            <remarks>
            <para>
            You can obtain <paramref name="nodeDescriptor"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteValueArguments.#ctor(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor,System.Object,System.TypeCode)">
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeDescriptor">Node descriptor. Identifies the node in OPC server's address space.</param>
            <param name="value">The value to be written.</param>
            <param name="valueTypeCode">Specifies the type code that should be used when writing the value.</param>
            <remarks>
            <para>
            You can obtain <paramref name="nodeDescriptor"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteValueArguments.#ctor(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor,System.Object,OpcLabs.EasyOpc.UA.UAAttributeId)">
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeDescriptor">Node descriptor. Identifies the node in OPC server's address space.</param>
            <param name="value">The value to be written.</param>
            <param name="attributeId">Attribute Id. Identifies an attribute of a node.</param>
            <remarks>
            <para>
            You can obtain <paramref name="nodeDescriptor"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteValueArguments.#ctor(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor,System.Object,OpcLabs.EasyOpc.UA.UAIndexRangeList)">
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeDescriptor">Node descriptor. Identifies the node in OPC server's address space.</param>
            <param name="value">The value to be written.</param>
            <param name="indexRangeList">List of index ranges for individual array dimensions.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteValueArguments.#ctor(OpcLabs.EasyOpc.UA.UANodeArguments)">
            <param name="nodeArguments">An object that specifies the node in the OPC server.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteValueArguments.#ctor(OpcLabs.EasyOpc.UA.UANodeArguments,System.Object,System.Type)">
            <param name="nodeArguments">An object that specifies the node in the OPC server.</param>
            <param name="value">The value to be written.</param>
            <param name="valueType">Specifies the type that should be used when writing the value.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteValueArguments.#ctor(OpcLabs.EasyOpc.UA.UAWriteValueArguments)">
            <param name="writeValueArguments">Write value arguments object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteValueArguments.#ctor(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeDescriptor,System.Object,OpcLabs.EasyOpc.UA.UAIndexRangeList,System.Type)">
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeDescriptor">Node descriptor. Identifies the node in OPC server's address space.</param>
            <param name="value">The value to be written.</param>
            <param name="indexRangeList">List of index ranges for individual array dimensions.</param>
            <param name="valueType">Specifies the type that should be used when writing the value.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteValueArguments.#ctor(OpcLabs.EasyOpc.UA.UANodeArguments,System.Object,OpcLabs.EasyOpc.UA.UAAttributeId)">
            <param name="nodeArguments">An object that specifies the node in the OPC server.</param>
            <param name="value">The value to be written.</param>
            <param name="attributeId">Attribute Id. Identifies an attribute of a node.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteValueArguments.op_Equality(OpcLabs.EasyOpc.UA.UAWriteValueArguments,OpcLabs.EasyOpc.UA.UAWriteValueArguments)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteValueArguments.op_Inequality(OpcLabs.EasyOpc.UA.UAWriteValueArguments,OpcLabs.EasyOpc.UA.UAWriteValueArguments)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteValueArguments.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteValueArguments.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteValueArguments.Equals(OpcLabs.EasyOpc.UA.UAWriteValueArguments)">
            <summary>
            Determines whether this object is equal to the other.
            </summary>
            <param name="other">The other object to be tested for equality with this one.</param>
            <returns>Returns <c>true</c> if the objects are equal; otherwise, returns <c>false</c>.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAWriteValueArguments.Value">
            <summary>
            The value to be written.
            </summary>
            <returns>The value to be written.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.UAWriteResult">
            <summary>
            <summary>Holds result of an OPC-UA Write operation.</summary>
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteResult.#ctor">
            <overloads>
            <summary>
            Initializes a new instance of the class.
            </summary>
            </overloads>
            
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteResult.#ctor(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteResult.#ctor(System.Object,System.Exception,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteResult.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the class with serialized data.</summary>
            <param name="info">The SerializationInfo that holds the serialized object data.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteResult.op_Equality(OpcLabs.EasyOpc.UA.UAWriteResult,OpcLabs.EasyOpc.UA.UAWriteResult)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteResult.op_Inequality(OpcLabs.EasyOpc.UA.UAWriteResult,OpcLabs.EasyOpc.UA.UAWriteResult)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="left">First object to be compared.</param>
            <param name="right">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteResult.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with information about the 
            class instance.</summary>
            <param name="info"><inheritdoc/>  </param>
            <param name="context"><inheritdoc/>  </param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteResult.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteResult.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteResult.ToString">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteResult.Equals(OpcLabs.EasyOpc.UA.UAWriteResult)">
            <summary>
            Determines whether this object is equal to the other.
            </summary>
            <param name="other">The other object to be tested for equality with this one.</param>
            <returns>Returns <c>true</c> if the objects are equal; otherwise, returns <c>false</c>.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAWriteResult.Clamped">
            <summary>
            Determines whether the value written was accepted but was clamped.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAWriteResult.CompletesAsynchronously">
            <summary>
            Determines whether the processing will complete asynchronously.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.UAMonitoredItemArgumentsConverter">
            <exclude/>
        </member>
    </members>
</doc>
