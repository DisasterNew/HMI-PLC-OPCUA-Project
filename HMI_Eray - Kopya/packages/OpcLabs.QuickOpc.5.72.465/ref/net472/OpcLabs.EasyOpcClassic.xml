<?xml version="1.0"?>
<doc>
  <assembly>
    <name>OpcLabs.EasyOpcClassic</name>
  </assembly>
  <members>
    <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.ComplexEventProcessing.AEEventDataPayload">
      <summary>
            An event payload for OPC Alarms&amp;Events notifications.
            </summary>
      <remarks>
            This class does not hold any (event) attribute values. Create a derived class if attribute values are required.
            </remarks>
      <example>
        <h3>.NET</h3>
        <code source="..\..\Net\Examples\CSharp\VisualStudio\Console\SimpleAEStreamInsightApplication\Program.cs" lang="CSharp" title="C#" region="Example" />
        <!--code  // IMPROVE: have this example in VB.NET
                source="..\..\Net\Examples\VBNET\VisualStudio\Console\SimpleAEStreamInsightApplication\Program.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/ -->
      </example>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComplexEventProcessing.AEEventDataPayload.#ctor">
      <summary>Initializes a new instance, an empty event payload.</summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComplexEventProcessing.AEEventDataPayload.#ctor(OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData)">
      <summary>
            Initializes a new event payload from an OPC Alarms&amp;Events event object.
            </summary>
      <param name="eventData">Event data.</param>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComplexEventProcessing.AEEventDataPayload.#ctor(OpcLabs.EasyOpc.AlarmsAndEvents.ComplexEventProcessing.AEEventDataPayload)">
      <summary>Initializes a new copy of the <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.ComplexEventProcessing.AEEventDataPayload" /> object.</summary>
      <param name="eventDataPayload">Event payload object to be copied from.</param>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComplexEventProcessing.AEEventDataPayload.#ctor(System.String,System.DateTime,System.String,System.Int64,System.Int64,System.Int32,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Boolean,System.DateTime,System.Int64,System.String)">
      <summary>
            Initializes a new event payload from values of its fields.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComplexEventProcessing.AEEventDataPayload.op_Implicit(OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData)~OpcLabs.EasyOpc.AlarmsAndEvents.ComplexEventProcessing.AEEventDataPayload">
      <summary>
            Converts an for OPC Alarms&amp;Events event object to an event payload.
            </summary>
      <param name="eventData">Event data.</param>
      <returns>Returns an event payload containing the data from the event object.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComplexEventProcessing.AEEventDataPayload.FromAEEvent(OpcLabs.EasyOpc.AlarmsAndEvents.AEEventData)">
      <summary>
            Converts an for OPC Alarms&amp;Events event object to an event payload.
            </summary>
      <param name="eventData">Event data.</param>
      <returns>Returns an event payload containing the data from the event object.</returns>
    </member>
    <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComplexEventProcessing.AEEventDataPayload.QualifiedSourceName">
      <summary>The source of event notification.</summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComplexEventProcessing.AEEventDataPayload.Time">
      <summary>Time of the event occurrence - for conditions, time that the condition transitioned into the new state or 
            sub-condition.</summary>
      <remarks>
        <para>For example, if the event notification is for acknowledgment of a condition, this would be the time that the 
            condition became acknowledged.</para>
      </remarks>
    </member>
    <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComplexEventProcessing.AEEventDataPayload.Message">
      <summary>Event notification message describing the event.</summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComplexEventProcessing.AEEventDataPayload.EventType">
      <summary>Simple, Condition-Related, or Tracking event.</summary>
      <remarks>
        <para>Internal value of one of <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType" /> constants.</para>
      </remarks>
    </member>
    <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComplexEventProcessing.AEEventDataPayload.CategoryId">
      <summary>Event category ID.</summary>
      <remarks>
        <para>Standard and Vendor-specific event category codes.</para>
      </remarks>
    </member>
    <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComplexEventProcessing.AEEventDataPayload.Severity">
      <summary>Event severity (1..1000).</summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComplexEventProcessing.AEEventDataPayload.ConditionName">
      <summary>The name of the condition related to this event notification.</summary>
      <remarks>
        <para>
          <b>This property is used only for Condition-Related Events (see EventType).</b>
        </para>
      </remarks>
    </member>
    <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComplexEventProcessing.AEEventDataPayload.SubconditionName">
      <summary>The name of the current sub-condition, for multi-state conditions. For a single-state condition, this contains 
            the condition name.</summary>
      <remarks>
        <para>
          <b>This property is used only for Condition-Related Events (see EventType).</b>
        </para>
      </remarks>
    </member>
    <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComplexEventProcessing.AEEventDataPayload.Enabled">
      <summary>New state of the condition: The condition is enabled.</summary>
      <remarks>
        <para>
          <b>This property is used only for Condition-Related Events (see EventType).</b>
        </para>
      </remarks>
    </member>
    <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComplexEventProcessing.AEEventDataPayload.Active">
      <summary>New state of the condition: The condition is active.</summary>
      <remarks>
        <para>
          <b>This property is used only for Condition-Related Events (see EventType).</b>
        </para>
      </remarks>
    </member>
    <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComplexEventProcessing.AEEventDataPayload.Acknowledged">
      <summary>New state of the condition: The condition is acknowledged.</summary>
      <remarks>
        <para>
          <b>This property is used only for Condition-Related Events (see EventType).</b>
        </para>
      </remarks>
    </member>
    <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComplexEventProcessing.AEEventDataPayload.Quality">
      <summary>Quality associated with the condition.</summary>
      <remarks>
        <para>
          <b>This property is used only for Condition-Related Events (see EventType).</b>
        </para>
        <para>Values are as defined for the OPC Quality Flags in the OPC Data Access Server specification.</para>
      </remarks>
    </member>
    <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComplexEventProcessing.AEEventDataPayload.AcknowledgeRequired">
      <summary>This flag indicates that the related condition requires acknowledgment of this event.</summary>
      <remarks>
        <para>
          <b>This property is used only for Condition-Related Events (see EventType).</b>
        </para>
        <para>The determination of those events which require acknowledgment is server specific. For example, transition into 
            a LimitAlarm condition would likely require an acknowledgment, while the event notification of the resulting 
            acknowledgment would likely not require an acknowledgment.</para>
      </remarks>
    </member>
    <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComplexEventProcessing.AEEventDataPayload.ActiveTime">
      <summary>Time that the condition became active (for single-state conditions), or the time of the transition into the 
            current sub-condition (for multi-state conditions).</summary>
      <remarks>
        <para>
          <b>This property is used only for Condition-Related Events (see EventType).</b>
        </para>
        <para>This time is used by the client when acknowledging the condition.</para>
      </remarks>
    </member>
    <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComplexEventProcessing.AEEventDataPayload.Cookie">
      <summary>Server defined cookie associated with the event notification.</summary>
      <remarks>
        <para>
          <b>This property is used only for Condition-Related Events (see EventType).</b>
        </para>
        <para>The cookie is used by the client when acknowledging the condition. This value is opaque to the client.</para>
      </remarks>
    </member>
    <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComplexEventProcessing.AEEventDataPayload.ActorId">
      <summary>Actor ID.</summary>
      <remarks>
        <para>
          <b>This property is used only for Tracking Events and for Condition-Related Events which are acknowledgment 
            notifications (see EventType).</b>
        </para>
        <para>For tracking events, this is the actor ID for the event notification.</para>
        <para>For condition-related events, this is the AcknowledgerID when the new state is acknowledged. If the 
            AcknowledgerID is an empty string, the event was automatically acknowledged by the server.</para>
        <para>For other events, the value is an empty string.</para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComplexEventProcessing.AEEventDataPayload.ToString">
      <inheritdoc cref="M:System.Object.ToString" />
    </member>
    <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.ComplexEventProcessing.AENotificationPayload">
      <summary>
            A payload for OPC Alarms&amp;Events notifications.
            </summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.ComplexEventProcessing.AENotificationPayload.DefaultEventSeverity">
      <summary>
            Event severity used when the event arguments contain no event, and the default event payload is not specified.
            </summary>
      <remarks>
            The OPC-A&amp;E severities are from 0(1) to 1000. The value 9999 is chosen to be higher than the severity of any 
            OPC-A&amp;E event, yet still in a 4-digit range.</remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComplexEventProcessing.AENotificationPayload.#ctor">
      <summary>Initializes a new instance, an empty event payload.</summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComplexEventProcessing.AENotificationPayload.#ctor(OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs)">
      <summary>
            Initializes a new event payload from event arguments for OPC Alarms&amp;Events notifications.
            </summary>
      <param name="eventArgs">Event data.</param>
      <remarks>
            When the event arguments contain no event, a default event payload is set to the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComplexEventProcessing.AENotificationPayload.EventDataPayload" /> property,
            with severity equal to <see cref="F:OpcLabs.EasyOpc.AlarmsAndEvents.ComplexEventProcessing.AENotificationPayload.DefaultEventSeverity" />, and an error message from the event arguments.
            </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComplexEventProcessing.AENotificationPayload.#ctor(OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs,OpcLabs.EasyOpc.AlarmsAndEvents.ComplexEventProcessing.AEEventDataPayload)">
      <summary>
            Initializes a new event payload from event arguments for OPC Alarms&amp;Events notifications.
            </summary>
      <param name="eventArgs">Event data.</param>
      <param name="defaultEventDataPayload">Event payload to be used when the event arguments contain no event.</param>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComplexEventProcessing.AENotificationPayload.#ctor(System.String,System.String,System.Boolean,System.Boolean,OpcLabs.EasyOpc.AlarmsAndEvents.ComplexEventProcessing.AEEventDataPayload)">
      <summary>
            Initializes a new event payload from values of its fields.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComplexEventProcessing.AENotificationPayload.op_Implicit(OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs)~OpcLabs.EasyOpc.AlarmsAndEvents.ComplexEventProcessing.AENotificationPayload">
      <summary>
            Converts event arguments for OPC Alarms&amp;Events notification to an event payload.
            </summary>
      <param name="eventArgs">Event data.</param>
      <returns>Returns an event payload containing the data from the event arguments.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComplexEventProcessing.AENotificationPayload.FromEasyAENotificationEventArgs(OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs)">
      <summary>
            Converts event arguments for OPC Alarms&amp;Events notification to an event payload.
            </summary>
      <param name="eventArgs">Event data.</param>
      <returns>Returns an event payload containing the data from the event arguments.</returns>
    </member>
    <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComplexEventProcessing.AENotificationPayload.Server">
      <summary>
            A string specifying the OPC-A&amp;E server.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComplexEventProcessing.AENotificationPayload.ErrorId">
      <summary>
            Gets the error ID of the error.
            </summary>
      <value>The error ID of the error.</value>
    </member>
    <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComplexEventProcessing.AENotificationPayload.Refresh">
      <summary>Denotes whether this notification was triggered by subscription refresh.</summary>
      <remarks>
        <para>When Refresh is True, the value of True in RefreshComplete tells that the refresh has completed.</para>
      </remarks>
    </member>
    <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComplexEventProcessing.AENotificationPayload.RefreshComplete">
      <summary>When True, this notification denotes that the subscription refresh is complete.</summary>
      <remarks>
        <para>RefreshComplete can only be True when Refresh is also True.</para>
      </remarks>
    </member>
    <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComplexEventProcessing.AENotificationPayload.EventDataPayload">
      <summary>
            The event payload.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComplexEventProcessing.AENotificationPayload.ToString">
      <inheritdoc cref="M:System.Object.ToString" />
    </member>
    <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.ComplexEventProcessing.NamespaceDoc">
      <summary>
            This namespace contains classes used to develop StreamInsight applications with OPC Alarms&amp;Events 
            (OPC-A&amp;E).
            </summary>
    </member>
    <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes.DEasyAEClientEvents">
      <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient" /> events to COM clients.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes.DEasyAEClientEvents.EventingFailure(System.Object,OpcLabs.BaseLib.FailureEventArgs)">
      <inheritdoc cref="E:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.EventingFailure" />
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes.DEasyAEClientEvents.Notification(System.Object,OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs)">
      <inheritdoc cref="E:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.Notification" />
    </member>
    <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes.DEasyAEClientManagementEvents">
      <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientManagementCore" /> events to COM clients.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes.DEasyAEClientManagementEvents.LogEntry(System.Object,OpcLabs.BaseLib.Instrumentation.LogEntryEventArgs)">
      <inheritdoc cref="E:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientManagementCore.LogEntry" />
    </member>
    <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes.NamespaceDoc">
      <summary>
            This namespace contains COM types for classes that facilitate easy work with OPC Alarms and Events.
            </summary>
    </member>
    <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient">
      <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient" /> to COM clients.
            </summary>
      <example>
        <h3>COM</h3>
        <code source="..\..\Native\Examples\OP\DocExamples\AlarmsAndEvents\_EasyAEClient\SubscribeEvents.Main.inc" language="ObjectPascal" lang="Object Pascal" title="Object Pascal" region="Example" />
        <code source="..\..\Native\Examples\PHP\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\SubscribeEvents.Main.php" lang="PHP" title="PHP" region="Example" />
        <code source="..\..\Native\Examples\VB\VB60\DocExamples\AlarmsAndEvents_EasyAEClientForm.frm" language="VB" lang="Visual Basic (VB 6.0)" title="Visual Basic (VB 6.0)" region="Example SubscribeEvents.Main" />
        <code source="..\..\Native\Examples\VBScript\WSH\DocExamples\AlarmsAndEvents\_EasyAEClient\SubscribeEvents.Main.vbs" lang="VBScript" title="VBScript" region="Example" />
        <code source="..\..\Native\Examples\VBScript\WSH\DocExamples\Specialized\TopServer_AE.Main.vbs" lang="VBScript" title="VBScript" region="Example" />
      </example>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient.ToString">
      <inheritdoc cref="M:System.Object.ToString" />
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient.Equals(System.Object)">
      <inheritdoc cref="M:System.Object.Equals(System.Object)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient.GetHashCode">
      <inheritdoc cref="M:System.Object.GetHashCode" />
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient.GetType">
      <inheritdoc cref="M:System.Object.GetType" />
    </member>
    <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient.DisplayString">
      <summary>
            The display string for the current object.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient.CustomReference">
      <inheritdoc cref="P:OpcLabs.BaseLib.Widgets.Widget.CustomReference" />
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient.Clone">
      <inheritdoc cref="M:System.ICloneable.Clone" />
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient.GetService(System.Type)">
      <inheritdoc cref="M:System.IServiceProvider.GetService(System.Type)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient.GetServiceByName(System.String)">
      <inheritdoc cref="M:OpcLabs.BaseLib.Extensions.IServiceProviderExtension.GetServiceByName(System.IServiceProvider,System.String)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient.ValueEquals(System.Object)">
      <inheritdoc cref="M:OpcLabs.BaseLib.IValueEquatable.ValueEquals(System.Object)" />
    </member>
    <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient.CallbackQueueCapacity">
      <inheritdoc cref="P:OpcLabs.BaseLib.Widgets.NotifyingWidget.CallbackQueueCapacity" />
    </member>
    <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient.CallbackQueueIdleTimeToSleep">
      <inheritdoc cref="P:OpcLabs.BaseLib.Widgets.NotifyingWidget.CallbackQueueIdleTimeToSleep" />
    </member>
    <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient.QueueCallbacks">
      <inheritdoc cref="P:OpcLabs.BaseLib.Widgets.NotifyingWidget.QueueCallbacks" />
    </member>
    <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient.AliasProvider">
      <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.AliasProvider" />
    </member>
    <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient.InstanceParameters">
      <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.InstanceParameters" />
    </member>
    <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient.Isolated">
      <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.Isolated" />
    </member>
    <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient.IsolatedParameters">
      <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.IsolatedParameters" />
    </member>
    <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient.LicenseInfo">
      <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.LicenseInfo" />
    </member>
    <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient.PullNotificationQueueCapacity">
      <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.PullNotificationQueueCapacity" />
      <example>
        <h3>COM</h3>
        <code source="..\..\Native\Examples\OP\DocExamples\AlarmsAndEvents\_EasyAEClient\PullNotification.Main.inc" language="ObjectPascal" lang="Object Pascal" title="Object Pascal" region="Example" />
        <code source="..\..\Native\Examples\PHP\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\PullNotification.Main.php" lang="PHP" title="PHP" region="Example" />
        <code source="..\..\Native\Examples\Python\CPython\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\Com.PullNotification.Main.py" lang="Python" title="Python (COM)" region="Example" />
        <code source="..\..\Native\Examples\VB\VB60\DocExamples\AlarmsAndEvents_EasyAEClientForm.frm" language="VB" lang="Visual Basic (VB 6.0)" title="Visual Basic (VB 6.0)" region="Example PullNotification.Main" />
        <code source="..\..\Native\Examples\VBScript\WSH\DocExamples\AlarmsAndEvents\_EasyAEClient\PullNotification.Main.vbs" lang="VBScript" title="VBScript" region="Example" />
      </example>
    </member>
    <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient.SupportedTechnologies">
      <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.SupportedTechnologies" />
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient.AcknowledgeCondition(System.Object,System.Object,System.String,System.DateTime,System.Int32,System.String,System.String)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.AcknowledgeCondition(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor,System.String,System.DateTime,System.Int64)" />
      <example>
        <h3>COM</h3>
        <code source="..\..\Native\Examples\VBScript\WSH\DocExamples\AlarmsAndEvents\_EasyAEClient\AcknowledgeCondition.Main.vbs" lang="VBScript" title="VBScript" region="Example" />
      </example>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient.BrowseAreas(System.String,System.String,System.String)">
      <summary>
            Browses the specified area for child areas.
            Uses computer name and server class for specifying the OPC server.
            A parent area is passed in. No filtering.
            </summary>
      <param name="machineName">Name of the machine. 
            Determines the computer on which the OPC server is located. May be an empty 
            string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it 
            by DCOM configuration.</param>
      <param name="serverClass">Contains ProgID of the OPC server.</param>
      <param name="parentQualifiedName">Fully qualified name of the parent area to be browsed (empty string for root)
            </param>
      <returns>The method returns a keyed collection of <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElement" /> values, each containing information 
            about a particular area found. The keys of the keyed collection are the names of the areas.</returns>
      <example>
        <h3>COM</h3>
        <code source="..\..\Native\Examples\VBScript\WSH\DocExamples\AlarmsAndEvents\_EasyAEClient\BrowseAreas.Main.vbs" lang="VBScript" title="VBScript" region="Example" />
      </example>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient.BrowseNodes(System.Object,System.Object,System.Object)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.BrowseNodes(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AEBrowseParameters)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient.BrowseServers(System.String)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.BrowseServers(System.String,OpcLabs.EasyOpc.OpcTechnologies)" />
      <example>
        <h3>COM</h3>
        <code source="..\..\Native\Examples\VBScript\WSH\DocExamples\AlarmsAndEvents\_EasyAEClient\BrowseServers.Main.vbs" lang="VBScript" title="VBScript" region="Example" />
      </example>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient.BrowseSources(System.String,System.String,System.String)">
      <summary>
            Browses the specified area for child sources.
            Uses computer name and server class for specifying the OPC server.
            A parent area is passed in. No filtering.
            </summary>
      <param name="machineName">Name of the machine. 
            Determines the computer on which the OPC server is located. May be an empty 
            string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it 
            by DCOM configuration.</param>
      <param name="serverClass">Contains ProgID of the OPC server.</param>
      <param name="parentQualifiedName">Fully qualified name of the parent area to be browsed (empty string for root)
            </param>
      <returns>The method returns a keyed collection of <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AddressSpace.AENodeElement" /> values, each containing information 
            about a particular source found. The keys of the keyed collection are the names of the sources.</returns>
      <example>
        <h3>COM</h3>
        <code source="..\..\Native\Examples\VBScript\WSH\DocExamples\AlarmsAndEvents\_EasyAEClient\BrowseSources.Main.vbs" lang="VBScript" title="VBScript" region="Example" />
      </example>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient.ChangeEventSubscription(System.Int32,System.Int32,System.Object,System.Boolean)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.ChangeEventSubscription(System.Int32,System.Int32,OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter,System.Boolean)" />
      <example>
        <h3>COM</h3>
        <code source="..\..\Native\Examples\VBScript\WSH\DocExamples\AlarmsAndEvents\_EasyAEClient\ChangeEventSubscription.Main.vbs" lang="VBScript" title="VBScript" region="Example" />
      </example>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient.GetConditionState(System.Object,System.Object,System.String,System.Object)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.GetConditionState(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor,System.String,System.Int64[])" />
      <example>
        <h3>COM</h3>
        <code source="..\..\Native\Examples\Python\CPython\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\Com.GetConditionState.Main.py" lang="Python" title="Python (COM)" region="Example" />
        <code source="..\..\Native\Examples\VBScript\WSH\DocExamples\AlarmsAndEvents\_EasyAEClient\GetConditionState.Main.vbs" lang="VBScript" title="VBScript" region="Example" />
      </example>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient.GetConditionStateList(System.Object,System.Object,System.String,System.Collections.IList)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.GetConditionState(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor,System.String,System.Int64[])" />
      <remarks>
        <para>
            This method uses lists instead of arrays.</para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient.GetEventsSubscriptionArguments(System.Int32)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.GetEventsSubscriptionArguments(System.Int32)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient.IsKnownEventsSubscriptionHandle(System.Int32)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.IsKnownEventsSubscriptionHandle(System.Int32)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient.QueryEventCategories(System.Object,System.Int32)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.QueryEventCategories(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType)" />
      <example>
        <h3>COM</h3>
        <code source="..\..\Native\Examples\VBScript\WSH\DocExamples\AlarmsAndEvents\_EasyAEClient\QueryEventCategories.Main.vbs" lang="VBScript" title="VBScript" region="Example" />
      </example>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient.QuerySourceConditions(System.Object,System.Object)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.QuerySourceConditions(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor)" />
      <example>
        <h3>COM</h3>
        <code source="..\..\Native\Examples\VBScript\WSH\DocExamples\AlarmsAndEvents\_EasyAEClient\QuerySourceConditions.Main.vbs" lang="VBScript" title="VBScript" region="Example" />
      </example>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient.RefreshEventSubscription(System.Int32)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.RefreshEventSubscription(System.Int32)" />
      <example>
        <h3>COM</h3>
        <code source="..\..\Native\Examples\VBScript\WSH\DocExamples\AlarmsAndEvents\_EasyAEClient\RefreshEventSubscription.Main.vbs" lang="VBScript" title="VBScript" region="Example" />
      </example>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient.Reset">
      <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.Reset" />
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient.SubscribeEvents(System.Object,System.Object,System.Boolean,System.Object)">
      <summary>
            Subscribe to OPC events. Specify server descriptor and subscription parameters objects, and "refresh when active" 
            flag.
            </summary>
      <param name="serverDescriptor">The OPC server involved in the operation.</param>
      <param name="subscriptionParameters">Subscription parameters to be used when the subscription is created</param>
      <param name="refreshWhenActive">When set, the subscription will automatically perform
            a Refresh after each successful connection to the server (either the initial connection, or any automatic 
            reconnection after the connection is lost).</param>
      <param name="state">The state object (can be any value supplied by your code); available in event 
            notifications.</param>
      <returns>The method returns an integer handle that uniquely identifies the event subscription.</returns>
      <example>
        <h3>COM</h3>
        <code source="..\..\Native\Examples\OP\DocExamples\AlarmsAndEvents\_EasyAEClient\SubscribeEvents.Main.inc" language="ObjectPascal" lang="Object Pascal" title="Object Pascal" region="Example" />
        <code source="..\..\Native\Examples\PHP\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\SubscribeEvents.Main.php" lang="PHP" title="PHP" region="Example" />
        <code source="..\..\Native\Examples\VB\VB60\DocExamples\AlarmsAndEvents_EasyAEClientForm.frm" language="VB" lang="Visual Basic (VB 6.0)" title="Visual Basic (VB 6.0)" region="Example SubscribeEvents.Main" />
        <code source="..\..\Native\Examples\VBScript\WSH\DocExamples\AlarmsAndEvents\_EasyAEClient\SubscribeEvents.Main.vbs" lang="VBScript" title="VBScript" region="Example" />
      </example>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient.UnsubscribeAllEvents">
      <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.UnsubscribeAllEvents" />
      <example>
        <h3>COM</h3>
        <code source="..\..\Native\Examples\VBScript\WSH\DocExamples\AlarmsAndEvents\_EasyAEClient\UnsubscribeAllEvents.Main.vbs" lang="VBScript" title="VBScript" region="Example" />
      </example>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient.UnsubscribeEvents(System.Int32)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.UnsubscribeEvents(System.Int32)" />
      <example>
        <h3>COM</h3>
        <code source="..\..\Native\Examples\VB\VB60\DocExamples\AlarmsAndEvents_EasyAEClientForm.frm" language="VB" lang="Visual Basic (VB 6.0)" title="Visual Basic (VB 6.0)" region="Example SubscribeEvents.Main" />
        <code source="..\..\Native\Examples\VBScript\WSH\DocExamples\AlarmsAndEvents\_EasyAEClient\UnsubscribeEvents.Main.vbs" lang="VBScript" title="VBScript" region="Example" />
      </example>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient.PullNotification(System.Int32)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClientExtension.PullNotification(OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient,System.Int32)" />
      <example>
        <h3>COM</h3>
        <code source="..\..\Native\Examples\OP\DocExamples\AlarmsAndEvents\_EasyAEClient\PullNotification.Main.inc" language="ObjectPascal" lang="Object Pascal" title="Object Pascal" region="Example" />
        <code source="..\..\Native\Examples\PHP\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\PullNotification.Main.php" lang="PHP" title="PHP" region="Example" />
        <code source="..\..\Native\Examples\Python\CPython\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\Com.PullNotification.Main.py" lang="Python" title="Python (COM)" region="Example" />
        <code source="..\..\Native\Examples\VB\VB60\DocExamples\AlarmsAndEvents_EasyAEClientForm.frm" language="VB" lang="Visual Basic (VB 6.0)" title="Visual Basic (VB 6.0)" region="Example PullNotification.Main" />
        <code source="..\..\Native\Examples\VBScript\WSH\DocExamples\AlarmsAndEvents\_EasyAEClient\PullNotification.Main.vbs" lang="VBScript" title="VBScript" region="Example" />
      </example>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient.PullNotificationList(System.Int32,System.Int32)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.PullMultipleNotifications(System.Int32,System.Int32)" />
      <remarks>
        <para>
            This method uses lists instead of arrays.</para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClient.PullMultipleNotifications(System.Int32,System.Int32)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.PullMultipleNotifications(System.Int32,System.Int32)" />
    </member>
    <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClientManagement">
      <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientManagementCore" /> to COM clients.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClientManagement.ToString">
      <inheritdoc cref="M:System.Object.ToString" />
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClientManagement.Equals(System.Object)">
      <inheritdoc cref="M:System.Object.Equals(System.Object)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClientManagement.GetHashCode">
      <inheritdoc cref="M:System.Object.GetHashCode" />
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClientManagement.GetType">
      <inheritdoc cref="M:System.Object.GetType" />
    </member>
    <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClientManagement.DisplayString">
      <summary>
            The display string for the current object.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClientManagement.CustomReference">
      <inheritdoc cref="P:OpcLabs.BaseLib.Widgets.Widget.CustomReference" />
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClientManagement.Clone">
      <inheritdoc cref="M:System.ICloneable.Clone" />
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClientManagement.GetService(System.Type)">
      <inheritdoc cref="M:System.IServiceProvider.GetService(System.Type)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClientManagement.GetServiceByName(System.String)">
      <inheritdoc cref="M:OpcLabs.BaseLib.Extensions.IServiceProviderExtension.GetServiceByName(System.IServiceProvider,System.String)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClientManagement.ValueEquals(System.Object)">
      <inheritdoc cref="M:OpcLabs.BaseLib.IValueEquatable.ValueEquals(System.Object)" />
    </member>
    <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClientManagement.AdaptableParameters">
      <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientManagementCore.AdaptableParameters" />
    </member>
    <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClientManagement.SharedInstance">
      <summary>
            A default, shared instance of the client object.
            </summary>
      <remarks>
        <para>
            Use this property with care, as its usability is limited. Its main use is for testing, and for non-library
            application code where just a single instance is sufficient.</para>
        <para>
            The default instance is not suitable for Windows Forms or similar environments, where a specific 
            <see cref="T:System.Threading.SynchronizationContext" /> may be used with each form.</para>
        <para>
            We do not recommend to use the default instance for library code, due to conflicts that may arise if your library
            sets some instance parameters which may not be the same as what other libraries or th final application expects.
            </para>
      </remarks>
    </member>
    <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClientManagement.SharedParameters">
      <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientManagementCore.SharedParameters" />
    </member>
    <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClientSelector">
      <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientSelector" /> to COM clients.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClientSelector.ToString">
      <inheritdoc cref="M:System.Object.ToString" />
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClientSelector.Equals(System.Object)">
      <inheritdoc cref="M:System.Object.Equals(System.Object)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClientSelector.GetHashCode">
      <inheritdoc cref="M:System.Object.GetHashCode" />
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClientSelector.GetType">
      <inheritdoc cref="M:System.Object.GetType" />
    </member>
    <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClientSelector.DisplayString">
      <summary>
            The display string for the current object.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClientSelector.Clone">
      <inheritdoc cref="M:System.ICloneable.Clone" />
    </member>
    <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClientSelector.StandardName">
      <inheritdoc cref="P:OpcLabs.BaseLib.Parameters.StandardName" />
    </member>
    <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClientSelector.Differentiator">
      <inheritdoc cref="P:OpcLabs.BaseLib.ParameterizedSelector`2.Differentiator" />
    </member>
    <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClientSelector.InstanceParameters">
      <inheritdoc cref="P:OpcLabs.BaseLib.ParameterizedSelector`2.InstanceParameters" />
    </member>
    <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClientSelector.Isolated">
      <inheritdoc cref="P:OpcLabs.BaseLib.ParameterizedSelector`2.Isolated" />
    </member>
    <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClientSelector.IsolatedParameters">
      <inheritdoc cref="P:OpcLabs.BaseLib.ParameterizedSelector`2.IsolatedParameters" />
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClientSelector.Reset">
      <inheritdoc cref="M:OpcLabs.BaseLib.ParameterizedSelector`2.Reset" />
    </member>
    <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientManagementCore">
      <summary>
            The core part of the <c>EasyAEClientManagement</c> object.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientManagementCore.#ctor">
      <summary>Initializes a new instance of the class.</summary>
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientManagementCore.#ctor(OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientManagementCore)">
      <param name="clientManagement">Client management object to copy from.</param>
      <exception cref="T:System.ArgumentNullException">
        <para>
             A <c>null</c> reference (<c>Nothing</c> in Visual Basic) is passed to a method that does not accept it as a valid argument.</para>
        <para>
             This is a usage error, i.e. it will never occur (the exception will not be thrown) in a correctly written program. Your code should not catch this exception.</para>
      </exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientManagementCore.#ctor(System.ComponentModel.IContainer)">
      <summary>
            Required for Windows.Forms Class Composition Designer support
            </summary>
      <param name="container">The component container to which the new instance will be added.</param>
      <exception cref="T:System.ArgumentNullException">
        <para>
             A <c>null</c> reference (<c>Nothing</c> in Visual Basic) is passed to a method that does not accept it as a valid argument.</para>
        <para>
             This is a usage error, i.e. it will never occur (the exception will not be thrown) in a correctly written program. Your code should not catch this exception.</para>
      </exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientManagementCore.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the class with serialized data.</summary>
      <param name="info">The SerializationInfo that holds the serialized object data.</param>
      <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
      <exception cref="T:System.ArgumentNullException">
        <para>
             A <c>null</c> reference (<c>Nothing</c> in Visual Basic) is passed to a method that does not accept it as a valid argument.</para>
        <para>
             This is a usage error, i.e. it will never occur (the exception will not be thrown) in a correctly written program. Your code should not catch this exception.</para>
      </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
        <para>
             An error has occurred during serialization or deserialization.</para>
        <para>
             This is an operation error that depends on factors external to your program, and thus cannot be always avoided. Your code must handle it appropriately.</para>
      </exception>
    </member>
    <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientManagementCore.AdaptableParameters">
      <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.AdaptableParameters" />
    </member>
    <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientManagementCore.SharedParameters">
      <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.SharedParameters" />
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientManagementCore.Clone">
      <inheritdoc cref="M:System.ICloneable.Clone" />
    </member>
    <member name="E:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientManagementCore.LogEntry">
      <summary>
            Raised for loggable entries originating in the OPC-A&amp;E client engine and the EasyAEClient component.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientManagementCore.DeepClone">
      <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
      <returns>A new object that is a deep copy of this instance.</returns>
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientManagementCore.ResetAdaptableParameters">
      <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientManagementCore.AdaptableParameters" /> back to its default.
            </summary>
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientManagementCore.ShouldSerializeAdaptableParameters">
      <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientManagementCore.AdaptableParameters" /> is in its default state.
            </summary>
      <returns>
        <c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientManagementCore.ResetSharedParameters">
      <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientManagementCore.SharedParameters" /> back to its default.
            </summary>
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientManagementCore.ShouldSerializeSharedParameters">
      <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientManagementCore.SharedParameters" /> is in its default state.
            </summary>
      <returns>
        <c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientSelector">
      <summary>
            Describes how to select the <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore" /> object.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientSelector.#ctor">
      <overloads>
        <summary>
            Initializes a new instance of the class.
            </summary>
      </overloads>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientSelector.#ctor(OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientSelector)">
      <summary>
            Initializes a new instance of the class.
            </summary>
      <param name="selector">Selector to copy from.</param>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientSelector.#ctor(System.String)">
      <summary>
            Initializes a new instance of the class.
            </summary>
      <param name="differentiator"> An arbitrary string that differentiates the selected client from others with the 
            same parameters.</param>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientSelector.#ctor(System.String,System.Boolean)">
      <summary>
            Initializes a new instance of the class.
            </summary>
      <param name="differentiator"> An arbitrary string that differentiates the selected client from others with the 
            same parameters.</param>
      <param name="isolated">Determines whether the client component selected should operate isolated from other client 
            components.</param>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientSelector.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the class.
            </summary>
      <summary>Initializes a new instance of the class with serialized data.</summary>
      <param name="info">The SerializationInfo that holds the serialized object data.</param>
      <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
    </member>
    <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientSelector.Default">
      <summary>
            Default client selector.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientSelector.op_Equality(OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientSelector,OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientSelector)">
      <summary>Determines whether the two objects are equal.</summary>
      <param name="left">First object to be compared.</param>
      <param name="right">Second object to be compared.</param>
      <returns>
        <c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientSelector.op_Inequality(OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientSelector,OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientSelector)">
      <summary>Determines whether the two objects are not equal.</summary>
      <param name="left">First object to be compared.</param>
      <param name="right">Second object to be compared.</param>
      <returns>
        <c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientSelector.Equals(System.Object)">
      <inheritdoc cref="M:System.Object.Equals(System.Object)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientSelector.GetHashCode">
      <inheritdoc cref="M:System.Object.GetHashCode" />
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientSelector.ToString">
      <inheritdoc cref="M:System.Object.ToString" />
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientSelector.Clone">
      <inheritdoc cref="M:System.ICloneable.Clone" />
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientSelector.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
    </member>
    <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientSelector.OpcLabs#EasyOpc#AlarmsAndEvents#ComTypes#_EasyAEClientSelector#DisplayString">
      <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClientSelector.DisplayString" />
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientSelector.DeepClone">
      <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
      <returns>A new object that is a deep copy of this instance.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientSelector.Equals(OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientSelector)">
      <summary>
            Infrastructure.
            </summary>
      <param name="other">The object to compare members to.</param>
      <returns>Returns <c>true</c> iff the member values equal.</returns>
    </member>
    <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.Internal.EasyAEClientCoreProvider">
      <exclude />
      <summary>
            Provides <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore" /> objects according to specified criteria.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Internal.EasyAEClientCoreProvider.Instance">
      <summary>
            A single instance of the provider.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Internal.EasyAEClientCoreProvider.CreateObject(System.ValueTuple{OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientSelector,OpcLabs.BaseLib.Licensing.LicensingContext,OpcLabs.BaseLib.Aliasing.Internal.IAliasProvider})">
      <inheritdoc cref="M:OpcLabs.BaseLib.Abstract.ParameterizedObjectProvider`2.CreateObject(`1)" />
    </member>
    <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.Internal.LicensingEasyAEClient">
      <exclude />
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Internal.LicensingEasyAEClient.#ctor(OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient,OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient)">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Internal.LicensingEasyAEClient.GetConditionState(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor,System.String,System.Int64[])">
      <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.GetConditionState(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor,System.String,System.Int64[])" />
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Internal.LicensingEasyAEClient.AcknowledgeCondition(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor,System.String,System.DateTime,System.Int64,System.String,System.String)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.AcknowledgeCondition(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor,System.String,System.DateTime,System.Int64,System.String,System.String)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Internal.LicensingEasyAEClient.BrowseServers(System.String,OpcLabs.EasyOpc.OpcTechnologies)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.BrowseServers(System.String,OpcLabs.EasyOpc.OpcTechnologies)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Internal.LicensingEasyAEClient.BrowseNodes(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AEBrowseParameters)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.BrowseNodes(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AEBrowseParameters)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Internal.LicensingEasyAEClient.QueryEventCategories(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.QueryEventCategories(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Internal.LicensingEasyAEClient.QuerySourceConditions(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.QuerySourceConditions(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor)" />
    </member>
    <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Internal.LicensingEasyAEClient.LicenseInfo">
      <inheritdoc cref="P:OpcLabs.BaseLib.ILicenseInfoProvider.LicenseInfo" />
    </member>
    <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.Internal.NamespaceDoc">
      <summary>
            This namespace contains internal classes that facilitate easy work with OPC Alarms and Events.
            </summary>
    </member>
    <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.LiveMapping.NamespaceDoc">
      <summary>
            This namespace contains classes used for live mapping of OPC Alarms&amp;Events sources to targets.
            </summary>
    </member>
    <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.LiveMapping.Resource1">
      <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.LiveMapping.Resource1.ResourceManager">
      <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.LiveMapping.Resource1.Culture">
      <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
    </member>
    <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.LiveMapping.AEMemberAttribute">
      <summary>
            Denotes that the member should be involved in OPC Data Access mapping.
            </summary>
    </member>
    <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.LiveMapping.AENodeAttribute">
      <summary>
            Gives information about OPC Alarms&amp;Events node (area or source).
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.LiveMapping.AENodeAttribute.BrowsePath">
      <summary>
            Specifies the browse path for the OPC node (area or source).
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.LiveMapping.AENodeAttribute.QualifiedName">
      <summary>
            Contains the qualified name of the OPC node (area or source; empty string for the root, null reference if unknown).
            </summary>
    </member>
    <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.LiveMapping.AEQualifiedNameTemplateAttribute">
      <summary>
            Describes how to construct OPC qualified name (of nodes).
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.LiveMapping.AEQualifiedNameTemplateAttribute.#ctor(System.String)">
      <summary>
            Initializes a new instance of the class with given template string.
            </summary>
      <param name="templateString">The template string.</param>
    </member>
    <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.LiveMapping.AEQualifiedNameTemplateAttribute.TemplateString">
      <summary>
            The template string.
            </summary>
      <remarks>
        <para>
          <c>Null</c> is allowed, because it allows to disable the template use from certain level onwards.</para>
        <para>
            Following macros can be used in template strings:
            <ul><li><c>$(ParentQualifiedName)   </c>The OPC qualified name of parent node.</li><li><c>$(BrowseName)            </c>The browse name of current node.</li></ul></para>
      </remarks>
    </member>
    <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.LiveMapping.AETypeAttribute">
      <summary>
            Denotes that the type should be involved in OPC Alarms&amp;Events mapping.
            </summary>
    </member>
    <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.LiveMapping.AEEventMappingKind">
      <summary>
            Specifies how the OPC Alarms&amp;Events event will be mapped.
            </summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.LiveMapping.AEEventMappingKind.Result">
      <summary>
            Map the operation result, as <see cref="T:OpcLabs.BaseLib.OperationModel.OperationResult" /> or a derived type specific for the operation.
            </summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.LiveMapping.AEEventMappingKind.ErrorId">
      <summary>
            Map the error ID, as <see cref="T:System.String" /></summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.LiveMapping.AEEventMappingKind.Exception">
      <summary>
            Map the exception, as <see cref="F:OpcLabs.EasyOpc.AlarmsAndEvents.LiveMapping.AEEventMappingKind.Exception" /> or a derived type. <c>null</c> if the operation has been successful.
            </summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.LiveMapping.AEEventMappingKind.ErrorMessage">
      <summary>
            Map the error message, as <see cref="T:System.String" />. An empty string if the operation has been successful.
            </summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.LiveMapping.AEEventMappingKind.StatusInfo">
      <summary>
            Map the status information, as <see cref="F:OpcLabs.EasyOpc.AlarmsAndEvents.LiveMapping.AEEventMappingKind.StatusInfo" />.
            </summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.LiveMapping.AEEventMappingKind.QualifiedSourceName">
      <summary>
            Map the source of event notification.
            <para><b>Remarks:</b></para><para>
            The linking target value is not changed if the operation resulted in an exception.</para></summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.LiveMapping.AEEventMappingKind.Time">
      <summary>
            Map the time of the event occurrence - for conditions, time that the condition transitioned into the new state or 
            sub-condition.
            <para><b>Remarks:</b></para><para>For example, if the event notification is for acknowledgment of a condition, this would be the time that the 
            condition became acknowledged.</para><para>The linking target value is not changed if the operation resulted in an exception.</para></summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.LiveMapping.AEEventMappingKind.Message">
      <summary>
            Map the event notification message describing the event. This is the default mapping kind.
            <para><b>Remarks:</b></para><para>
            The linking target value is not changed if the operation resulted in an exception.
            </para></summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.LiveMapping.AEEventMappingKind.EventType">
      <summary>
            Map indication of Simple, Condition-Related, or Tracking event.
            <para><b>Remarks:</b></para><para>One of <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType" /> constants.</para><para>The linking target value is not changed if the operation resulted in an exception.</para></summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.LiveMapping.AEEventMappingKind.CategoryId">
      <summary>
            Map event category ID.
            <para><b>Remarks:</b></para><para>Standard and Vendor-specific event category codes.</para><para>The linking target value is not changed if the operation resulted in an exception.</para></summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.LiveMapping.AEEventMappingKind.Severity">
      <summary>
            Map the event severity (1..1000).
            <para><b>Remarks:</b></para><para>
            The linking target value is not changed if the operation resulted in an exception.
            </para></summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.LiveMapping.AEEventMappingKind.AttributeValues">
      <summary>
            Map a dictionary of vendor-specific event attributes.
            <para><b>Remarks:</b></para><para>Attributes are vendor-specific.</para><para>If a server cannot provide reasonable data for an attribute, the returned VARIANT should be set to VT_EMPTY.
            </para><para>This is a dictionary where the key is attribute ID, and the value is the actual value of that event attribute.
            </para><para>The linking target value is not changed if the operation resulted in an exception.</para></summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.LiveMapping.AEEventMappingKind.Value">
      <summary>
            Map vendor-specific event attribute, specified by its ID.
            <para><b>Remarks:</b></para><para>Attributes are vendor-specific.</para><para>If a server cannot provide reasonable data for an attribute, the returned VARIANT should be set to VT_EMPTY.
            </para><para>The linking target value is not changed if the operation resulted in an exception.</para></summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.LiveMapping.AEEventMappingKind.ConditionName">
      <summary>
            Map the name of the condition related to this event notification.
            <para><b>Remarks:</b></para><para><b>This property is used only for Condition-Related Events (see EventType).</b></para><para>The linking target value is not changed if the operation resulted in an exception.</para></summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.LiveMapping.AEEventMappingKind.SubconditionName">
      <summary>
            Map the name of the current sub-condition, for multi-state conditions. For a single-state condition, this contains 
            the condition name.
            <para><b>Remarks:</b></para><para><b>This property is used only for Condition-Related Events (see EventType).</b></para><para>The linking target value is not changed if the operation resulted in an exception.</para></summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.LiveMapping.AEEventMappingKind.Enabled">
      <summary>
            Map new state of the condition: The condition is enabled.
            <para><b>Remarks:</b></para><para><b>This property is used only for Condition-Related Events (see EventType).</b></para><para>The linking target value is not changed if the operation resulted in an exception.</para></summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.LiveMapping.AEEventMappingKind.Active">
      <summary>
            Map new state of the condition: The condition is active.
            <para><b>Remarks:</b></para><para><b>This property is used only for Condition-Related Events (see EventType).</b></para><para>The linking target value is not changed if the operation resulted in an exception.</para></summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.LiveMapping.AEEventMappingKind.Acknowledged">
      <summary>
            Map new state of the condition: The condition is acknowledged.
            <para><b>Remarks:</b></para><para><b>This property is used only for Condition-Related Events (see EventType).</b></para><para>The linking target value is not changed if the operation resulted in an exception.</para></summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.LiveMapping.AEEventMappingKind.Quality">
      <summary>
            Map the quality associated with the condition, as <see cref="T:OpcLabs.EasyOpc.DataAccess.DAQuality" />.
            <para><b>Remarks:</b></para><para><b>This property is used only for Condition-Related Events (see EventType).</b></para><para>Values are as defined for the OPC Quality Flags in the OPC Data Access Server specification.</para><para>The linking target value is not changed if the operation resulted in an exception.</para></summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.LiveMapping.AEEventMappingKind.AcknowledgeRequired">
      <summary>
            Map a flag indicating that the related condition requires acknowledgment of this event.
            <para><b>Remarks:</b></para><para><b>This property is used only for Condition-Related Events (see EventType).</b></para><para>The determination of those events which require acknowledgment is server specific. For example, transition into 
            a LimitAlarm condition would likely require an acknowledgment, while the event notification of the resulting 
            acknowledgment would likely not require an acknowledgment.</para><para>The linking target value is not changed if the operation resulted in an exception.</para></summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.LiveMapping.AEEventMappingKind.ActiveTime">
      <summary>
            Map time that the condition became active (for single-state conditions), or the time of the transition 
            into the current sub-condition (for multi-state conditions).
            <para><b>Remarks:</b></para><para><b>This property is used only for Condition-Related Events (see EventType).</b></para><para>This time is used by the client when acknowledging the condition.</para><para>The linking target value is not changed if the operation resulted in an exception.</para></summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.LiveMapping.AEEventMappingKind.Cookie">
      <summary>
            Map server defined cookie associated with the event notification.
            <para><b>Remarks:</b></para><para><b>This property is used only for Condition-Related Events (see EventType).</b></para><para>The cookie is used by the client when acknowledging the condition. This value is opaque to the client.</para><para>The linking target value is not changed if the operation resulted in an exception.</para></summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.LiveMapping.AEEventMappingKind.ActorId">
      <summary>
            Map actor ID.
            <para><b>Remarks:</b></para><para><b>This property is used only for Tracking Events and for Condition-Related Events which are acknowledgment 
            notifications (see EventType).</b></para><para>For tracking events, this is the actor ID for the event notification.</para><para>For condition-related events, this is the AcknowledgerID when the new state is acknowledged. If the 
            AcknowledgerID is an empty string, the event was automatically acknowledged by the server.</para><para>For other events, the value is an empty string.</para><para>The linking target value is not changed if the operation resulted in an exception.</para></summary>
    </member>
    <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.NamespaceDoc">
      <summary>
            This namespace contains classes that facilitate easy work with OPC Alarms and Events.
            </summary>
    </member>
    <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEAcknowledgeConditionObserver">
      <summary>
            Push-based notification receiver (observer) that acknowledges OPC-A&amp;E conditions.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEAcknowledgeConditionObserver.#ctor">
      <overloads>
        <summary>
            Create a new instance of the observer that acknowledges OPC-A&amp;E conditions.
            </summary>
      </overloads>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEAcknowledgeConditionObserver.#ctor(OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientSelector,OpcLabs.BaseLib.Aliasing.Internal.IAliasProvider)">
      <summary>
            Create a new instance of the observer that acknowledges OPC-A&amp;E conditions.
            </summary>
      <summary>
            Creates a new instance of the observer, specifying a client selector and an alias provider.
            </summary>
      <param name="clientSelector">A client selector to be used by the observer.</param>
      <param name="aliasProvider">The alias provider to be used for resolving aliases by this reactive object.</param>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEAcknowledgeConditionObserver.#ctor(OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEAcknowledgeConditionObserver)">
      <summary>
            Create a new instance of the observer that acknowledges OPC-A&amp;E conditions.
            </summary>
      <summary>Initializes a new instance of the class, copying values from a given object.</summary>
      <param name="acknowledgeConditionObserver">The object to be copied from.</param>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEAcknowledgeConditionObserver.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Create a new instance of the observer that acknowledges OPC-A&amp;E conditions.
            </summary>
      <summary>Initializes a new instance of the class with serialized data.</summary>
      <param name="info">The SerializationInfo that holds the serialized object data.</param>
      <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEAcknowledgeConditionObserver.op_Equality(OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEAcknowledgeConditionObserver,OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEAcknowledgeConditionObserver)">
      <summary>Determines whether the two objects are equal.</summary>
      <param name="left">First object to be compared.</param>
      <param name="right">Second object to be compared.</param>
      <returns>
        <c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEAcknowledgeConditionObserver.op_Inequality(OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEAcknowledgeConditionObserver,OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEAcknowledgeConditionObserver)">
      <summary>Determines whether the two objects are not equal.</summary>
      <param name="left">First object to be compared.</param>
      <param name="right">Second object to be compared.</param>
      <returns>
        <c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEAcknowledgeConditionObserver.Create">
      <summary>
            Creates a new observer that acknowledges OPC-A&amp;E conditions, using a default <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore" />.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEAcknowledgeConditionObserver.Equals(System.Object)">
      <inheritdoc cref="M:System.Object.Equals(System.Object)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEAcknowledgeConditionObserver.GetHashCode">
      <inheritdoc cref="M:System.Object.GetHashCode" />
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEAcknowledgeConditionObserver.Clone">
      <inheritdoc />
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEAcknowledgeConditionObserver.OnNext(OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEAcknowledgeConditionArguments)">
      <inheritdoc cref="M:System.IObserver`1.OnNext(`0)" />
      <remarks>
            Writes the incoming value into the OPC-DA item.
            </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEAcknowledgeConditionObserver.OnError(System.Exception)">
      <inheritdoc cref="M:System.IObserver`1.OnError(System.Exception)" />
      <remarks>No operation.</remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEAcknowledgeConditionObserver.OnCompleted">
      <inheritdoc cref="M:System.IObserver`1.OnCompleted" />
      <remarks>No operation.</remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEAcknowledgeConditionObserver.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEAcknowledgeConditionObserver.DeepClone">
      <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
      <returns>A new object that is a deep copy of this instance.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEAcknowledgeConditionObserver.Equals(OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEAcknowledgeConditionObserver)">
      <summary>
            Infrastructure.
            </summary>
    </member>
    <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AENotificationObservable">
      <summary>
            Push-based notification provider (observable) for OPC Alarms&amp;Events notifications.
            </summary>
      <example>
        <h3>.NET</h3>
        <code source="..\..\Net\Examples\CSharp\VisualStudio\Console\ReactiveDocExamples\AlarmsAndEvents\_AENotificationObservable\Subscribe.Main1.cs" lang="CSharp" title="C#" region="Example" />
      </example>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AENotificationObservable.#ctor">
      <overloads>
        <summary>
            Create a new instance of the OPC-A&amp;E notification observable.
            </summary>
      </overloads>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AENotificationObservable.#ctor(OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientSelector,OpcLabs.BaseLib.Aliasing.Internal.IAliasProvider,System.Collections.Generic.IEnumerable{OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEEventsSubscriptionArguments})">
      <summary>
            Create a new instance of the OPC-A&amp;E notification observable.
            </summary>
      <summary>
            Create a new instance of the notification observable, with specified client object selector, alias provider, and an enumerable
            containing the OPC events to be observed.
            </summary>
      <param name="clientSelector">The selector of the client object that is used for OPC Alarms&amp;Events operations.</param>
      <param name="aliasProvider">The alias provider to be used for resolving aliases by this reactive object.</param>
      <param name="arguments">The OPC events to be observed.</param>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AENotificationObservable.#ctor(OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AENotificationObservable)">
      <summary>
            Create a new instance of the OPC-A&amp;E notification observable.
            </summary>
      <summary>Initializes a new instance of the class, copying values from a given object.</summary>
      <param name="notificationObservable">The object to be copied from.</param>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AENotificationObservable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Create a new instance of the OPC-A&amp;E notification observable.
            </summary>
      <summary>Initializes a new instance of the class with serialized data.</summary>
      <param name="info">The SerializationInfo that holds the serialized object data.</param>
      <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AENotificationObservable.op_Equality(OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AENotificationObservable,OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AENotificationObservable)">
      <summary>Determines whether the two objects are equal.</summary>
      <param name="left">First object to be compared.</param>
      <param name="right">Second object to be compared.</param>
      <returns>
        <c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AENotificationObservable.op_Inequality(OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AENotificationObservable,OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AENotificationObservable)">
      <summary>Determines whether the two objects are not equal.</summary>
      <param name="left">First object to be compared.</param>
      <param name="right">Second object to be compared.</param>
      <returns>
        <c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AENotificationObservable.Create(OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEEventsSubscriptionArguments)">
      <summary>
            Creates a new notification observable for OPC events given by <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEEventsSubscriptionArguments" /> object.
            </summary>
      <param name="args">Contains the OPC events to be observed.</param>
      <returns>Returns an observable for notifications about given OPC events.</returns>
      <remarks>
            The <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEReactive.DefaultClientSelector" /> selector will be used for OPC Alarms&amp;Events operations.
            </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AENotificationObservable.Create(System.Collections.Generic.IEnumerable{OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEEventsSubscriptionArguments})">
      <summary>
            Creates a new notification observable for multiple OPC events given by 
            <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEEventsSubscriptionArguments" /> objects.
            </summary>
      <param name="arguments">Contains the enumerable of OPC events to be observed.</param>
      <returns>Returns an observable for notifications about given OPC events.</returns>
      <remarks>
            The <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEReactive.DefaultClientSelector" /> selector will be used for OPC Alarms&amp;Events operations.
            </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AENotificationObservable.Create(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionParameters,System.Boolean,System.Object)">
      <summary>
            Creates a new notification observable for OPC events given by the server descriptor and subscription parameters 
            objects, and other parameters.
            </summary>
      <param name="serverDescriptor">The OPC server involved in the operation.</param>
      <param name="subscriptionParameters">Subscription parameters to be used when the subscription is created</param>
      <param name="refreshWhenActive">When set, the subscription will automatically perform
            a Refresh after each successful connection to the server (either the initial connection, or any automatic 
            reconnection after the connection is lost).</param>
      <param name="state">The state object (can be any value supplied by your code); available in event 
            notifications.</param>
      <returns>Returns an observable for notifications about given OPC events.</returns>
      <remarks>
            The <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEReactive.DefaultClientSelector" /> selector will be used for OPC Alarms&amp;Events operations.
            </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AENotificationObservable.Create(System.String,System.String,System.Int32)">
      <summary>
            Creates a new notification observable for OPC events given by the machine name, server class, and other parameters.
            </summary>
      <param name="machineName">Name of the machine. 
            Determines the computer on which the OPC server is located. May be an empty 
            string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it 
            by DCOM configuration.</param>
      <param name="serverClass">Contains ProgID of the OPC server.</param>
      <param name="notificationRate">The requested notification rate. The notification rate is in milliseconds and tells 
            the server how often to send event notifications. This is a minimum time - do not send event notifications any 
            faster that this UNLESS the buffer size is reached. A value of 0 for notification rate means that the server should 
            send event notifications as soon as it gets them. This parameter is used to improve communications efficiency 
            between client and server. This parameter is a recommendation from the client, and the server is allowed to ignore 
            the parameter.</param>
      <returns>Returns an observable for notifications about given OPC events.</returns>
      <remarks>
            The <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEReactive.DefaultClientSelector" /> selector will be used for OPC Alarms&amp;Events operations.
            </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AENotificationObservable.Create(System.String,System.String,System.Int32,OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter)">
      <summary>
            Creates a new notification observable for OPC events given by the machine name, server class, and other parameters.
            </summary>
      <param name="machineName">Name of the machine. 
            Determines the computer on which the OPC server is located. May be an empty 
            string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it 
            by DCOM configuration.</param>
      <param name="serverClass">Contains ProgID of the OPC server.</param>
      <param name="notificationRate">The requested notification rate. The notification rate is in milliseconds and tells 
            the server how often to send event notifications. This is a minimum time - do not send event notifications any 
            faster that this UNLESS the buffer size is reached. A value of 0 for notification rate means that the server should 
            send event notifications as soon as it gets them. This parameter is used to improve communications efficiency 
            between client and server. This parameter is a recommendation from the client, and the server is allowed to ignore 
            the parameter.</param>
      <param name="filter">An <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter" /> that determines the filtering criteria to be used 
            for the event subscription.</param>
      <returns>Returns an observable for notifications about given OPC events.</returns>
      <remarks>
            The <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEReactive.DefaultClientSelector" /> selector will be used for OPC Alarms&amp;Events operations.
            </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AENotificationObservable.Create(System.String,System.String,System.Int32,OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter,OpcLabs.EasyOpc.AlarmsAndEvents.AEAttributeSetDictionary,System.Boolean,System.Boolean,System.Object)">
      <summary>
            Creates a new notification observable for OPC events given by the machine name, server class, and other parameters.
            </summary>
      <param name="machineName">Name of the machine. 
            Determines the computer on which the OPC server is located. May be an empty 
            string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it 
            by DCOM configuration.</param>
      <param name="serverClass">Contains ProgID of the OPC server.</param>
      <param name="active">Creates activated or deactivated subscription. See ChangeEventSubscription
            for more information.</param>
      <param name="refreshWhenActive">When set, the subscription will automatically perform
            a Refresh after each successful connection to the server (either the initial connection, or any automatic 
            reconnection after the connection is lost).</param>
      <param name="state">The state object (can be any value supplied by your code); available in event 
            notifications.</param>
      <param name="notificationRate">The requested notification rate. The notification rate is in milliseconds and tells 
            the server how often to send event notifications. This is a minimum time - do not send event notifications any 
            faster that this UNLESS the buffer size is reached. A value of 0 for notification rate means that the server should 
            send event notifications as soon as it gets them. This parameter is used to improve communications efficiency 
            between client and server. This parameter is a recommendation from the client, and the server is allowed to ignore 
            the parameter.</param>
      <param name="filter">An <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter" /> that determines the filtering criteria to be used 
            for the event subscription.</param>
      <param name="returnedAttributesByCategory">Determines the attributes to be returned for each category with 
            event notifications. A dictionary where they key is the category ID, and the value is an array of attribute IDs for 
            that event category.</param>
      <returns>Returns an observable for notifications about given OPC events.</returns>
      <remarks>
            The <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEReactive.DefaultClientSelector" /> selector will be used for OPC Alarms&amp;Events operations.
            </remarks>
    </member>
    <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AENotificationObservable.Arguments">
      <summary>
            The OPC events to be observed.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AENotificationObservable.Equals(System.Object)">
      <inheritdoc cref="M:System.Object.Equals(System.Object)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AENotificationObservable.GetHashCode">
      <inheritdoc cref="M:System.Object.GetHashCode" />
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AENotificationObservable.Clone">
      <inheritdoc />
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AENotificationObservable.Subscribe(System.IObserver{OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs})">
      <inheritdoc cref="M:System.IObservable`1.Subscribe(System.IObserver{`0})" />
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AENotificationObservable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AENotificationObservable.CreateEventsSubscriptionArguments(System.IObserver{OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAENotificationEventArgs},OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.AEEventsSubscriptionArguments)">
      <summary>
            Infrastructure.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AENotificationObservable.Equals(OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AENotificationObservable)">
      <summary>
            Infrastructure.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AENotificationObservable.ReadXmlElement(System.Xml.XmlReader)">
      <inheritdoc cref="M:OpcLabs.BaseLib.Info.ReadXmlElement(System.Xml.XmlReader)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AENotificationObservable.WriteXmlElement(System.Xml.XmlWriter)">
      <inheritdoc cref="M:OpcLabs.BaseLib.Info.WriteXmlElement(System.Xml.XmlWriter)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AENotificationObservable.DeepClone">
      <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
      <returns>A new object that is a deep copy of this instance.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AENotificationObservable.ShouldSerializeArguments">
      <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AENotificationObservable.Arguments" /> is in its default state.
            </summary>
      <returns>
        <c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
    </member>
    <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEReactive">
      <summary>
            Base class for OPC Alarms&amp;Events push-based notification providers (observables) and receivers (observers).
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEReactive.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the class with serialized data.</summary>
      <param name="info">The SerializationInfo that holds the serialized object data.</param>
      <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
    </member>
    <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEReactive.DefaultAliasProvider">
      <summary>
            The default alias provider  that will be used when new instances of <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEReactive" /> are created, and no
            alias provider is specified. 
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEReactive.DefaultClientSelector">
      <summary>
            The default client selector that will be used when new instances of <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEReactive" /> are created, and no
            client selector is specified. 
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEReactive.op_Equality(OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEReactive,OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEReactive)">
      <summary>Determines whether the two objects are equal.</summary>
      <param name="left">First object to be compared.</param>
      <param name="right">Second object to be compared.</param>
      <returns>
        <c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEReactive.op_Inequality(OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEReactive,OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEReactive)">
      <summary>Determines whether the two objects are not equal.</summary>
      <param name="left">First object to be compared.</param>
      <param name="right">Second object to be compared.</param>
      <returns>
        <c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
    </member>
    <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEReactive.AliasProvider">
      <summary>
            The alias provider to be used for resolving aliases by this reactive object.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEReactive.ClientSelector">
      <summary>
            The selector of the client object that is used for OPC Alarms&amp;Events operations.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEReactive.Equals(System.Object)">
      <inheritdoc cref="M:System.Object.Equals(System.Object)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEReactive.GetHashCode">
      <inheritdoc cref="M:System.Object.GetHashCode" />
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEReactive.Clone">
      <inheritdoc />
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEReactive.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEReactive.Equals(OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEReactive)">
      <summary>
            Infrastructure.
            </summary>
      <param name="other">The object to compare members to.</param>
      <returns>Returns <c>true</c> iff the member values equal.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEReactive.ObtainClient">
      <summary>
            Obtains a client object to be used by this reactive object.
            </summary>
      <returns>Returns the <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore" /> according to the current client selector.</returns>
      <exception cref="T:OpcLabs.BaseLib.Licensing.LicensingException">The component is not licensed for the operation requested.</exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEReactive.ReadXmlElement(System.Xml.XmlReader)">
      <inheritdoc cref="M:OpcLabs.BaseLib.Info.ReadXmlElement(System.Xml.XmlReader)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEReactive.WriteXmlElement(System.Xml.XmlWriter)">
      <inheritdoc cref="M:OpcLabs.BaseLib.Info.WriteXmlElement(System.Xml.XmlWriter)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEReactive.DeepClone">
      <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
      <returns>A new object that is a deep copy of this instance.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEReactive.ShouldSerializeAliasProvider">
      <summary>
            Determines whether the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEReactive.AliasProvider" /> is not at its default value.
            </summary>
      <returns>
        <c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEReactive.ShouldSerializeClientSelector">
      <summary>
            Determines whether the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.AEReactive.ClientSelector" /> is not at its default value.
            </summary>
      <returns>
        <c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
    </member>
    <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.Reactive.NamespaceDoc">
      <summary>
            This namespace contains reactive extensions (Rx) classes for OPC Alarms&amp;Events.
            </summary>
    </member>
    <member name="T:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore">
      <summary>
            The core part of the <c>EasyAEClient</c> object.
            </summary>
      <summary>
            The core part of the <c>EasyAEClient</c> object.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.#ctor">
      <summary>Initializes a new instance of the class.</summary>
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.#ctor(OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore)">
      <param name="client">Client object to copy from.</param>
      <exception cref="T:System.ArgumentNullException">
        <para>
             A <c>null</c> reference (<c>Nothing</c> in Visual Basic) is passed to a method that does not accept it as a valid argument.</para>
        <para>
             This is a usage error, i.e. it will never occur (the exception will not be thrown) in a correctly written program. Your code should not catch this exception.</para>
      </exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
      <param name="configuration">Configuration to bind to.</param>
      <exception cref="T:System.ArgumentNullException">
        <para>
             A <c>null</c> reference (<c>Nothing</c> in Visual Basic) is passed to a method that does not accept it as a valid argument.</para>
        <para>
             This is a usage error, i.e. it will never occur (the exception will not be thrown) in a correctly written program. Your code should not catch this exception.</para>
      </exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.#ctor(System.ComponentModel.IContainer)">
      <summary>
            Required for Windows.Forms Class Composition Designer support
            </summary>
      <param name="container">The component container to which the new instance will be added.</param>
      <exception cref="T:System.ArgumentNullException">
        <para>
             A <c>null</c> reference (<c>Nothing</c> in Visual Basic) is passed to a method that does not accept it as a valid argument.</para>
        <para>
             This is a usage error, i.e. it will never occur (the exception will not be thrown) in a correctly written program. Your code should not catch this exception.</para>
      </exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the class with serialized data.</summary>
      <param name="info">The SerializationInfo that holds the serialized object data.</param>
      <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
      <exception cref="T:System.ArgumentNullException">
        <para>
             A <c>null</c> reference (<c>Nothing</c> in Visual Basic) is passed to a method that does not accept it as a valid argument.</para>
        <para>
             This is a usage error, i.e. it will never occur (the exception will not be thrown) in a correctly written program. Your code should not catch this exception.</para>
      </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
        <para>
             An error has occurred during serialization or deserialization.</para>
        <para>
             This is an operation error that depends on factors external to your program, and thus cannot be always avoided. Your code must handle it appropriately.</para>
      </exception>
    </member>
    <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.AliasProvider">
      <summary>
            The alias provider to be used for resolving aliases by this component.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.AcknowledgeCondition(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor,System.String,System.DateTime,System.Int64)">
      <summary>
            Acknowledges a condition in the Event Server. 
            Uses server descriptor for specifying the OPC server.
            Use default acknowledger ID and an empty comment.
            </summary>
      <param name="serverDescriptor">The OPC server involved in the operation.</param>
      <param name="sourceDescriptor">Contains fully qualified source name. Identifies the source of the condition that is 
            being acknowledged, e.g. FIC101.</param>
      <param name="conditionName">A condition name, identifying the condition that is being acknowledged. Condition Names 
            are unique within the scope of the event server. Examples of Condition Names might be "LevelAlarm" or "Deviation".
            </param>
      <param name="activeTime">An active time corresponding to the Source and Condition Name pair. This parameter uniquely 
            identifies a specific transition of the condition to the active state or into a different sub-condition and is the 
            same as the <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState" />.SubconditionActiveTime condition attribute. Active Times are passed to 
            the client in the event notification. If the condition has become active again or transitioned into a different 
            sub-condition at a later time, this acknowledgment will be ignored.</param>
      <param name="cookie">A server supplied "cookie" corresponding to the Source and Condition Name pair that in addition 
            to the Active Time uniquely identifies a specific event notification. Cookies are passed to the client in the event
            notification. The client is responsible for returning the same cookie parameter, received in the event notification, 
            back to the server in the condition acknowledgment.</param>
      <example>
        <h3>.NET</h3>
        <code source="..\..\Net\Examples\CSharp\VisualStudio\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\AcknowledgeCondition.Main1.cs" lang="CSharp" title="C#" region="Example" />
        <code source="..\..\Net\Examples\Python\CPython\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\Net.AcknowledgeCondition.Main1.py" lang="Python" title="Python (.NET)" region="Example" />
        <code source="..\..\Net\Examples\VBNET\VisualStudio\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\AcknowledgeCondition.Main1.vb" lang="VB.NET" title="Visual Basic (VB.NET)" region="Example" />
      </example>
      <exception cref="T:System.ArgumentNullException">
        <para>
             A <c>null</c> reference (<c>Nothing</c> in Visual Basic) is passed to a method that does not accept it as a valid argument.</para>
        <para>
             This is a usage error, i.e. it will never occur (the exception will not be thrown) in a correctly written program. Your code should not catch this exception.</para>
      </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <para>
             The value of an argument is outside the allowable range of values as defined by the invoked method.</para>
        <para>
             This is a usage error, i.e. it will never occur (the exception will not be thrown) in a correctly written program. Your code should not catch this exception.</para>
      </exception>
      <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">
        <para>
            The OPC "Classic" (or OPC XML-DA) operation has failed. This operation exception in uniformly used to allow 
            common handling of various kinds of errors. The <see cref="P:System.Exception.InnerException" /> always contains
            information about the actual error cause.</para>
        <para>
            This is an operation error that depends on factors external to your program, and thus cannot be always avoided. Your code must handle it appropriately.</para>
      </exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.AcknowledgeCondition(System.String,System.String,System.String,System.String,System.DateTime,System.Int64)">
      <summary>
            Acknowledges a condition in the Event Server. 
            Uses computer name and server class for specifying the OPC server.
            Use default acknowledger ID and an empty comment.
            </summary>
      <param name="machineName">Name of the machine. 
            Determines the computer on which the OPC server is located. May be an empty 
            string, in which case the OPC server is assumed to exist on the local computer or at the computer specified for it 
            by DCOM configuration.</param>
      <param name="serverClass">Contains ProgID of the OPC server.</param>
      <param name="qualifiedSourceName">Fully qualified source name. Identifies the source of the condition that is being 
            acknowledged, e.g. FIC101.</param>
      <param name="conditionName">A condition name, identifying the condition that is being acknowledged. Condition Names 
            are unique within the scope of the event server. Examples of Condition Names might be "LevelAlarm" or "Deviation".
            </param>
      <param name="activeTime">An active time corresponding to the Source and Condition Name pair. This parameter uniquely 
            identifies a specific transition of the condition to the active state or into a different sub-condition and is the 
            same as the <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.AEConditionState" />.SubconditionActiveTime condition attribute. Active Times are passed to 
            the client in the event notification. If the condition has become active again or transitioned into a different 
            sub-condition at a later time, this acknowledgment will be ignored.</param>
      <param name="cookie">A server supplied "cookie" corresponding to the Source and Condition Name pair that in addition 
            to the Active Time uniquely identifies a specific event notification. Cookies are passed to the client in the event
            notification. The client is responsible for returning the same cookie parameter, received in the event notification, 
            back to the server in the condition acknowledgment.</param>
      <example>
        <h3>.NET</h3>
        <code source="..\..\Net\Examples\CSharp\VisualStudio\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\AcknowledgeCondition.Main1.cs" lang="CSharp" title="C#" region="Example" />
        <code source="..\..\Net\Examples\Python\CPython\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\Net.AcknowledgeCondition.Main1.py" lang="Python" title="Python (.NET)" region="Example" />
        <code source="..\..\Net\Examples\VBNET\VisualStudio\Console\DocExamples\AlarmsAndEvents\_EasyAEClient\AcknowledgeCondition.Main1.vb" lang="VB.NET" title="Visual Basic (VB.NET)" region="Example" />
      </example>
      <exception cref="T:System.ArgumentNullException">
        <para>
             A <c>null</c> reference (<c>Nothing</c> in Visual Basic) is passed to a method that does not accept it as a valid argument.</para>
        <para>
             This is a usage error, i.e. it will never occur (the exception will not be thrown) in a correctly written program. Your code should not catch this exception.</para>
      </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <para>
             The value of an argument is outside the allowable range of values as defined by the invoked method.</para>
        <para>
             This is a usage error, i.e. it will never occur (the exception will not be thrown) in a correctly written program. Your code should not catch this exception.</para>
      </exception>
      <exception cref="T:OpcLabs.EasyOpc.OperationModel.OpcException">
        <para>
            The OPC "Classic" (or OPC XML-DA) operation has failed. This operation exception in uniformly used to allow 
            common handling of various kinds of errors. The <see cref="P:System.Exception.InnerException" /> always contains
            information about the actual error cause.</para>
        <para>
            This is an operation error that depends on factors external to your program, and thus cannot be always avoided. Your code must handle it appropriately.</para>
      </exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.Reset">
      <summary>
            Sets the object properties back to their defaults.
            </summary>
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.ToString">
      <inheritdoc cref="M:System.Object.ToString" />
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.ValueEquals(OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore)">
      <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore" /> is value equal to the current object.
            </summary>
      <param name="other">The <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore" /> to compare with the current object.</param>
      <returns>
        <c>true</c> if the specified object is value equal to the current object; otherwise, <c>false</c>.</returns>
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.Clone">
      <inheritdoc cref="M:System.ICloneable.Clone" />
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.ValueEquals(System.Object)">
      <inheritdoc cref="M:OpcLabs.BaseLib.IValueEquatable.ValueEquals(System.Object)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.CallbackError(System.String,System.Exception)">
      <inheritdoc cref="M:OpcLabs.BaseLib.Widgets.NotifyingWidget.CallbackError(System.String,System.Exception)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.OnCallbackEnqueuerOverflow(System.Int32)">
      <inheritdoc />
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.OnCallbackEnqueuerOverflowClearing(System.Int64)">
      <inheritdoc />
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.ReadXmlElement(System.Xml.XmlReader)">
      <inheritdoc cref="M:OpcLabs.BaseLib.Info.ReadXmlElement(System.Xml.XmlReader)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.SendCallbackError(System.String,System.Exception)">
      <inheritdoc cref="M:OpcLabs.BaseLib.Widgets.NotifyingWidget.CallbackError(System.String,System.Exception)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.WriteXmlElement(System.Xml.XmlWriter)">
      <inheritdoc cref="M:OpcLabs.BaseLib.Info.WriteXmlElement(System.Xml.XmlWriter)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.DeepClone">
      <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
      <returns>A new object that is a deep copy of this instance.</returns>
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.CreateInnerClient">
      <summary>
            Infrastructure
            </summary>
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.ResetAliasProvider">
      <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.AliasProvider" /> to a default.
            </summary>
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.ShouldSerializeAliasProvider">
      <summary>
            Determines whether the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.AliasProvider" /> is not empty.
            </summary>
      <returns>
        <c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.GetService(System.Type)">
      <inheritdoc cref="M:OpcLabs.BaseLib.Widgets.Widget.GetService(System.Type)" />
    </member>
    <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.PullNotificationQueueCapacity">
      <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.PullNotificationQueueCapacity" />
    </member>
    <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.SupportedTechnologies">
      <inheritdoc cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.SupportedTechnologies" />
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.GetEventsSubscriptionArguments(System.Int32)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.GetEventsSubscriptionArguments(System.Int32)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.IsKnownEventsSubscriptionHandle(System.Int32)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.IsKnownEventsSubscriptionHandle(System.Int32)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.GetConditionState(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor,System.String,System.Int64[])">
      <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.GetConditionState(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor,System.String,System.Int64[])" />
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.AcknowledgeCondition(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor,System.String,System.DateTime,System.Int64,System.String,System.String)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.AcknowledgeCondition(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor,System.String,System.DateTime,System.Int64,System.String,System.String)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.BrowseServers(System.String,OpcLabs.EasyOpc.OpcTechnologies)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.BrowseServers(System.String,OpcLabs.EasyOpc.OpcTechnologies)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.BrowseNodes(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AEBrowseParameters)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.BrowseNodes(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AEBrowseParameters)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.QueryEventCategories(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.QueryEventCategories(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AEEventType)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.QuerySourceConditions(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.QuerySourceConditions(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.AlarmsAndEvents.AENodeDescriptor)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.SubscribeEvents(OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAEEventsSubscriptionArguments)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.SubscribeEvents(OpcLabs.EasyOpc.AlarmsAndEvents.OperationModel.EasyAEEventsSubscriptionArguments)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.ChangeEventSubscription(System.Int32,System.Int32,OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter,System.Boolean)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.ChangeEventSubscription(System.Int32,System.Int32,OpcLabs.EasyOpc.AlarmsAndEvents.AESubscriptionFilter,System.Boolean)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.RefreshEventSubscription(System.Int32)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.RefreshEventSubscription(System.Int32)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.UnsubscribeEvents(System.Int32)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.UnsubscribeEvents(System.Int32)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.UnsubscribeAllEvents">
      <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.UnsubscribeAllEvents" />
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.PullMultipleNotifications(System.Int32,System.Int32)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.PullMultipleNotifications(System.Int32,System.Int32)" />
    </member>
    <member name="E:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.EventingFailure">
      <inheritdoc cref="E:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.EventingFailure" />
    </member>
    <member name="E:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.Notification">
      <inheritdoc cref="E:OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient.Notification" />
    </member>
    <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.InnerClient">
      <summary>
            Inner client to which the functionality is forwarded.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.InstanceParameters">
      <summary>
            Contains parameters that influence the behavior of just this instance of the component.
            </summary>
      <remarks>
        <para>
            The initial value can be changed by configuration and can differ from the default.</para>
      </remarks>
    </member>
    <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.Isolated">
      <summary>Specifies that you wish that the <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore" /> object instance works with an "isolated" 
            connection to the OPC server, i.e. one that is not shared with other instances.</summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.IsolatedParameters">
      <summary>
            Contains parameters that influence the behavior of the component when it is isolated.
            </summary>
      <remarks>
        <para>
            Parameters in this property only apply to instances of <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore" /> that have their
            <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.Isolated" /> property equal to <c>true</c>.</para>
        <para>
            The initial value can be changed by configuration and can differ from the default.</para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.ResetIsolated">
      <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.Isolated" /> back to its default.
            </summary>
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.ShouldSerializeIsolated">
      <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.Isolated" /> is in its default state.
            </summary>
      <returns>
        <c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.ResetInstanceParameters">
      <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.InstanceParameters" /> to a default.
            </summary>
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.ShouldSerializeInstanceParameters">
      <summary>
            Determines whether the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.InstanceParameters" /> is not empty.
            </summary>
      <returns>
        <c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.ResetIsolatedParameters">
      <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.IsolatedParameters" /> to a default.
            </summary>
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.ShouldSerializeIsolatedParameters">
      <summary>
            Determines whether the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.IsolatedParameters" /> is not empty.
            </summary>
      <returns>
        <c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.LicenseInfo">
      <inheritdoc cref="P:OpcLabs.BaseLib.ILicenseInfoProvider.LicenseInfo" />
    </member>
    <member name="F:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.DefaultIsolated">
      <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.Isolated" /> property. Equals to <c>false</c>.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.AdaptableParameters">
      <summary>
            Adaptable parameters for non-isolated client objects.
            </summary>
      <remarks>
        <para>
            When the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.Isolated" /> property of the <see cref="T:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore" /> is <c>false</c> (the default), these 
            adaptable parameters are used. When the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.Isolated" /> property is <c>true</c>, each such instance has 
            its own set of adaptable parameters, taken from the <see cref="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.IsolatedParameters" /> property instead.
            </para>
        <para>
            The initial value can be changed by configuration and can differ from the default.</para>
      </remarks>
    </member>
    <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.SharedParameters">
      <summary>
            Parameters that are always shared by all instances of the component.
            </summary>
      <remarks>
        <para>
            The initial value can be changed by configuration and can differ from the default.</para>
      </remarks>
    </member>
    <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.SharedServiceContainer">
      <summary>
            Container for services that are shared by all instances of the component.
            </summary>
      <remarks>
        <para>
            Use this property to add additional shared services, before the component has been statically activated.</para>
      </remarks>
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.SharedServiceProvider">
      <summary>
            Provides services that are shared by all instances of the component.
            </summary>
      <remarks>
        <para>
            Use this property to retrieve shared services. Getting the property triggers static activation of the component,
            if it has not been activated yet.</para>
      </remarks>
    </member>
    <member name="E:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.LogEntry">
      <summary>
            Raised for loggable entries originating in the OPC-A&amp;E client engine and the EasyAEClient component.
            </summary>
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.ComplexEventProcessing.DAItemChangedPayload`1">
      <summary>
            An event payload for significant change in a subscribed OPC-DA item.
            </summary>
      <typeparam name="TValue">The type of OPC values in this payload class.</typeparam>
      <example>
        <h3>.NET</h3>
        <code source="..\..\Net\Examples\CSharp\VisualStudio\Console\SimpleDAStreamInsightApplication\Program.cs" lang="CSharp" title="C#" region="Example" />
        <!--code  // IMPROVE: have this example in VB.NET
                source="..\..\Net\Examples\VBNET\VisualStudio\Console\SimpleDAStreamInsightApplication\Program.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/ -->
      </example>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComplexEventProcessing.DAItemChangedPayload`1.#ctor">
      <summary>Initializes a new instance, an empty event payload.</summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComplexEventProcessing.DAItemChangedPayload`1.#ctor(OpcLabs.EasyOpc.DataAccess.Generic.EasyDAItemChangedEventArgs{`0})">
      <summary>
            Initializes a new event payload from event arguments for significant change in a subscribed OPC-DA item.
            </summary>
      <param name="eventArgs">Event data.</param>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComplexEventProcessing.DAItemChangedPayload`1.#ctor(OpcLabs.EasyOpc.DataAccess.Generic.EasyDAItemChangedEventArgs{`0},OpcLabs.EasyOpc.DataAccess.ComplexEventProcessing.DAVtqPayload{`0})">
      <summary>
            Initializes a new event payload from event arguments for significant change in a subscribed OPC-DA item.
            </summary>
      <param name="eventArgs">Event data.</param>
      <param name="defaultVtqPayload">VTQ payload to be used when the event arguments contain no VTQ.</param>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComplexEventProcessing.DAItemChangedPayload`1.#ctor(System.String,System.String,System.String,OpcLabs.EasyOpc.DataAccess.ComplexEventProcessing.DAVtqPayload{`0})">
      <summary>
            Initializes a new event payload from values of its fields.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComplexEventProcessing.DAItemChangedPayload`1.op_Implicit(OpcLabs.EasyOpc.DataAccess.Generic.EasyDAItemChangedEventArgs{`0})~OpcLabs.EasyOpc.DataAccess.ComplexEventProcessing.DAItemChangedPayload{`0}">
      <summary>
            Converts event arguments for significant change in a subscribed OPC-DA item to an event payload.
            </summary>
      <param name="eventArgs">Event data.</param>
      <returns>Returns an event payload containing the data from the event arguments.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComplexEventProcessing.DAItemChangedPayload`1.FromEasyDAItemChangedEventArgs(OpcLabs.EasyOpc.DataAccess.Generic.EasyDAItemChangedEventArgs{`0})">
      <summary>
            Converts event arguments for significant change in a subscribed OPC-DA item to an event payload.
            </summary>
      <param name="eventArgs">Event data.</param>
      <returns>Returns an event payload containing the data from the event arguments.</returns>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.ComplexEventProcessing.DAItemChangedPayload`1.Server">
      <summary>
            A string specifying the OPC-DA server.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.ComplexEventProcessing.DAItemChangedPayload`1.Item">
      <summary>
            A string specifying the OPC-DA item.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.ComplexEventProcessing.DAItemChangedPayload`1.ErrorId">
      <summary>
            Gets the error ID of the error.
            </summary>
      <value>The error ID of the error.</value>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.ComplexEventProcessing.DAItemChangedPayload`1.VtqPayload">
      <summary>
            An event payload for OPC-DA data value, timestamp and quality.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComplexEventProcessing.DAItemChangedPayload`1.ToString">
      <inheritdoc cref="M:System.Object.ToString" />
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.ComplexEventProcessing.DAVtqPayload`1">
      <summary>
            An event payload for OPC-DA data value, timestamp and quality.
            </summary>
      <typeparam name="TValue">The type of OPC values in this payload class.</typeparam>
      <example>
        <h3>.NET</h3>
        <code source="..\..\Net\Examples\CSharp\VisualStudio\Console\SimpleDAStreamInsightApplication\Program.cs" lang="CSharp" title="C#" region="Example" />
        <!--code  // IMPROVE: have this example in VB.NET
                source="..\..\Net\Examples\VBNET\VisualStudio\Console\SimpleDAStreamInsightApplication\Program.vb" 
                lang="VB.NET" title="Visual Basic (VB.NET)"
                region="Example"/ -->
      </example>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComplexEventProcessing.DAVtqPayload`1.#ctor">
      <summary>Initializes a new instance, an empty event payload.</summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComplexEventProcessing.DAVtqPayload`1.#ctor(OpcLabs.EasyOpc.DataAccess.Generic.DAVtq{`0})">
      <summary>
            Initializes a new event payload from OPC-DA VTQ (data value, timestamp and quality).
            </summary>
      <param name="vtq">Data value, timestamp and quality.</param>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComplexEventProcessing.DAVtqPayload`1.#ctor(System.DateTime,System.Int32,`0)">
      <summary>
            Initializes a new event payload from values of its fields.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComplexEventProcessing.DAVtqPayload`1.op_Implicit(OpcLabs.EasyOpc.DataAccess.Generic.DAVtq{`0})~OpcLabs.EasyOpc.DataAccess.ComplexEventProcessing.DAVtqPayload{`0}">
      <summary>
            Converts OPC-DA data value, timestamp and quality to an event payload.
            </summary>
      <param name="vtq">Data value, timestamp and quality.</param>
      <returns>Returns an event payload containing the OPC-DA data value, timestamp and quality.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComplexEventProcessing.DAVtqPayload`1.FromDAVtq(OpcLabs.EasyOpc.DataAccess.Generic.DAVtq{`0})">
      <summary>
            Converts OPC-DA data value, timestamp and quality to an event payload.
            </summary>
      <param name="vtq">Data value, timestamp and quality.</param>
      <returns>Returns an event payload containing the OPC-DA data value, timestamp and quality.</returns>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.ComplexEventProcessing.DAVtqPayload`1.Timestamp">
      <summary>
            The timestamp associated with the value.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.ComplexEventProcessing.DAVtqPayload`1.Quality">
      <summary>
            The quality associated with the value.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.ComplexEventProcessing.DAVtqPayload`1.Value">
      <summary>
            The value of item data.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComplexEventProcessing.DAVtqPayload`1.ToString">
      <inheritdoc cref="M:System.Object.ToString" />
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.ComplexEventProcessing.NamespaceDoc">
      <summary>
            This namespace contains extension classes used to develop StreamInsight applications with OPC Data Access (OPC-DA).
            </summary>
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.ComTypes.DEasyDAClientEvents">
      <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore" /> events to COM clients.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes.DEasyDAClientEvents.EventingFailure(System.Object,OpcLabs.BaseLib.FailureEventArgs)">
      <inheritdoc cref="E:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.EventingFailure" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes.DEasyDAClientEvents.ItemChanged(System.Object,OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemChangedEventArgs)">
      <inheritdoc cref="E:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.ItemChanged" />
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.ComTypes.DEasyDAClientManagementEvents">
      <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.DataAccess.EasyDAClientManagementCore" /> events to COM clients.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes.DEasyDAClientManagementEvents.LogEntry(System.Object,OpcLabs.BaseLib.Instrumentation.LogEntryEventArgs)">
      <inheritdoc cref="E:OpcLabs.EasyOpc.DataAccess.EasyDAClientManagementCore.LogEntry" />
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.ComTypes.NamespaceDoc">
      <summary>
            This namespace contains COM types for classes that facilitate easy work with OPC Data Access.
            </summary>
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient">
      <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore" /> to COM clients.
            </summary>
      <example>
        <h3>COM</h3>
        <code source="..\..\Native\Examples\JScript\WSH\DocExamples\_EasyDAClient\ReadItemValue.Main.js" lang="JScript" region="Example" />
        <code source="..\..\Native\Examples\OP\DocExamples\DataAccess\_EasyDAClient\ReadItemValue.Main.inc" language="ObjectPascal" lang="Object Pascal" title="Object Pascal" region="Example" />
        <code source="..\..\Native\Examples\PHP\Console\DocExamples\DataAccess\_EasyDAClient\SubscribeItem.Main.php" lang="PHP" title="PHP" region="Example" />
        <code source="..\..\Native\Examples\Python\CPython\Console\DocExamples\DataAccess\_EasyDAClient\Com.ReadItemValue.Main.py" lang="Python" title="Python (COM)" region="Example" />
        <code source="..\..\Native\Examples\VB\VB60\DocExamples\DataAccess_EasyDAClientForm.frm" language="VB" lang="Visual Basic (VB 6.0)" title="Visual Basic (VB 6.0)" region="Example ReadItemValue.Main" />
        <code source="..\..\Native\Examples\VBScript\WSH\DocExamples\DataAccess\_EasyDAClient\ReadItemValue.Main.vbs" lang="VBScript" title="VBScript" region="Example" />
      </example>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.ToString">
      <inheritdoc cref="M:System.Object.ToString" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.Equals(System.Object)">
      <inheritdoc cref="M:System.Object.Equals(System.Object)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.GetHashCode">
      <inheritdoc cref="M:System.Object.GetHashCode" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.GetType">
      <inheritdoc cref="M:System.Object.GetType" />
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.DisplayString">
      <summary>
            The display string for the current object.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.CustomReference">
      <inheritdoc cref="P:OpcLabs.BaseLib.Widgets.Widget.CustomReference" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.Clone">
      <inheritdoc cref="M:System.ICloneable.Clone" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.GetService(System.Type)">
      <inheritdoc cref="M:System.IServiceProvider.GetService(System.Type)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.GetServiceByName(System.String)">
      <inheritdoc cref="M:OpcLabs.BaseLib.Extensions.IServiceProviderExtension.GetServiceByName(System.IServiceProvider,System.String)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.ValueEquals(System.Object)">
      <inheritdoc cref="M:OpcLabs.BaseLib.IValueEquatable.ValueEquals(System.Object)" />
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.CallbackQueueCapacity">
      <inheritdoc cref="P:OpcLabs.BaseLib.Widgets.NotifyingWidget.CallbackQueueCapacity" />
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.CallbackQueueIdleTimeToSleep">
      <inheritdoc cref="P:OpcLabs.BaseLib.Widgets.NotifyingWidget.CallbackQueueIdleTimeToSleep" />
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.QueueCallbacks">
      <inheritdoc cref="P:OpcLabs.BaseLib.Widgets.NotifyingWidget.QueueCallbacks" />
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.AliasProvider">
      <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.AliasProvider" />
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.InstanceParameters">
      <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.InstanceParameters" />
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.Isolated">
      <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.Isolated" />
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.IsolatedParameters">
      <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.IsolatedParameters" />
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.LicenseInfo">
      <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.LicenseInfo" />
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.PullItemChangedQueueCapacity">
      <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.PullItemChangedQueueCapacity" />
      <example>
        <h3>COM</h3>
        <code source="..\..\Native\Examples\JScript\WSH\DocExamples\_EasyDAClient\PullItemChanged.Main.js" lang="JScript" region="Example" />
        <code source="..\..\Native\Examples\OP\DocExamples\DataAccess\_EasyDAClient\PullItemChanged.Main.inc" language="ObjectPascal" lang="Object Pascal" title="Object Pascal" region="Example" />
        <code source="..\..\Native\Examples\PHP\Console\DocExamples\DataAccess\_EasyDAClient\PullItemChanged.Main.php" lang="PHP" title="PHP" region="Example" />
        <code source="..\..\Native\Examples\Python\CPython\Console\DocExamples\DataAccess\_EasyDAClient\Com.PullItemChanged.Main.py" lang="Python" title="Python (COM)" region="Example" />
        <code source="..\..\Native\Examples\VB\VB60\DocExamples\DataAccess_EasyDAClientForm.frm" language="VB" lang="Visual Basic (VB 6.0)" title="Visual Basic (VB 6.0)" region="Example PullItemChanged.Main" />
        <code source="..\..\Native\Examples\VBScript\WSH\DocExamples\DataAccess\_EasyDAClient\PullItemChanged.Main.vbs" lang="VBScript" title="VBScript" region="Example" />
      </example>
      <example>
        <h3>COM</h3>
        <code source="..\..\Native\Examples\OP\DocExamples\DataAccess\_EasyDAClient\PullItemChanged.MultipleItems.inc" language="ObjectPascal" lang="Object Pascal" title="Object Pascal" region="Example" />
        <code source="..\..\Native\Examples\Python\CPython\Console\DocExamples\DataAccess\_EasyDAClient\Com.PullItemChanged.MultipleItems.py" lang="Python" title="Python (COM)" region="Example" />
        <code source="..\..\Native\Examples\VB\VB60\DocExamples\DataAccess_EasyDAClientForm.frm" language="VB" lang="Visual Basic (VB 6.0)" title="Visual Basic (VB 6.0)" region="Example PullItemChanged.MultipleItems" />
      </example>
      <example>
        <h3>COM</h3>
        <code source="..\..\Native\Examples\Python\CPython\Console\DocExamples\DataAccess\Xml\Com.PullItemChanged.MultipleItemsXml.py" lang="Python" title="Python (COM)" region="Example" />
      </example>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.SupportedTechnologies">
      <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.SupportedTechnologies" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.BrowseAccessPaths(System.Object,System.Object)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.BrowseAccessPaths(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.BrowseAccessPathList(System.Object,System.Object)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.BrowseAccessPaths(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)" />
      <remarks>
        <para>
            This method uses lists instead of arrays.</para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.BrowseBranches(System.String,System.String,System.String)">
      <summary>Browse for child branches. Specify machine name, and server class.</summary>
      <param name="machineName">Name of the machine (empty string for local computer).</param>
      <param name="serverClass">Contains ProgID of the OPC server to browse.</param>
      <param name="parentItemId">ID of the parent branch to be browsed (empty string for root)</param>
      <returns>The method returns a keyed collection of <see cref="T:OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElement" /> values, each containing information 
            about a particular branch found. The keys of the keyed collection are the names of the branches.</returns>
      <example>
        <h3>COM</h3>
        <code source="..\..\Native\Examples\VBScript\WSH\DocExamples\DataAccess\_EasyDAClient\BrowseBranches.Main.vbs" lang="VBScript" title="VBScript" region="Example" />
      </example>
      <exception cref="T:System.Exception">An error has occurred during application execution.</exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.BrowseLeaves(System.String,System.String,System.String)">
      <summary>Browse for child leaves. Specify machine name, and server class.</summary>
      <param name="machineName">Name of the machine (empty string for local computer).</param>
      <param name="serverClass">Contains ProgID of the OPC server to browse.</param>
      <param name="parentItemId">ID of the parent branch to be browsed (empty string for root)</param>
      <returns>The method returns a keyed collection of <see cref="T:OpcLabs.EasyOpc.DataAccess.AddressSpace.DANodeElement" /> values, each containing information 
            about a particular leaf found. The keys of the keyed collection are the names of the leaves.</returns>
      <example>
        <h3>COM</h3>
        <code source="..\..\Native\Examples\VBScript\WSH\DocExamples\DataAccess\_EasyDAClient\BrowseLeaves.Main.vbs" lang="VBScript" title="VBScript" region="Example" />
      </example>
      <exception cref="T:System.Exception">An error has occurred during application execution.</exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.BrowseNodes(System.Object,System.Object,System.Object)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.BrowseNodes(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DABrowseParameters)" />
      <example>
        <h3>COM</h3>
        <code source="..\..\Native\Examples\OP\DocExamples\DataAccess\_EasyDAClient\BrowseNodes.Main.inc" language="ObjectPascal" lang="Object Pascal" title="Object Pascal" region="Example" />
        <code source="..\..\Native\Examples\PHP\Console\DocExamples\DataAccess\_EasyDAClient\BrowseNodes.Main.php" lang="PHP" title="PHP" region="Example" />
        <code source="..\..\Native\Examples\Python\CPython\Console\DocExamples\DataAccess\_EasyDAClient\Com.BrowseNodes.Main.py" lang="Python" title="Python (COM)" region="Example" />
        <code source="..\..\Native\Examples\PowerScript\PB\Exported\w_docexamples_easydaclient.srw" lang="PowerScript" title="PowerScript" region="Example BrowseNodes.Main" />
        <code source="..\..\Native\Examples\VB\VB60\DocExamples\DataAccess_EasyDAClientForm.frm" language="VB" lang="Visual Basic (VB 6.0)" title="Visual Basic (VB 6.0)" region="Example BrowseNodes.Main" />
        <code source="..\..\Native\Examples\VBScript\WSH\DocExamples\DataAccess\_EasyDAClient\BrowseNodes.Main.vbs" lang="VBScript" title="VBScript" region="Example" />
      </example>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.BrowseProperties(System.Object,System.Object)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.BrowseProperties(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)" />
      <example>
        <h3>COM</h3>
        <code source="..\..\Native\Examples\OP\DocExamples\DataAccess\_EasyDAClient\BrowseProperties.Main.inc" language="ObjectPascal" lang="Object Pascal" title="Object Pascal" region="Example" />
        <code source="..\..\Native\Examples\PHP\Console\DocExamples\DataAccess\_EasyDAClient\BrowseProperties.Main.php" lang="PHP" title="PHP" region="Example" />
        <code source="..\..\Native\Examples\VB\VB60\DocExamples\DataAccess_EasyDAClientForm.frm" language="VB" lang="Visual Basic (VB 6.0)" title="Visual Basic (VB 6.0)" region="Example BrowseProperties.Main" />
        <code source="..\..\Native\Examples\VBScript\WSH\DocExamples\DataAccess\_EasyDAClient\BrowseProperties.Main.vbs" lang="VBScript" title="VBScript" region="Example" />
      </example>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.BrowseServers(System.String)">
      <summary>
            Browses the specified computer and returns information about OPC (Data Access) servers found.
            </summary>
      <param name="location">Name of the machine. Determines the computer to browse for OPC servers. May be an empty 
            string, in which case the local computer will be browsed.</param>
      <returns>The method returns a keyed collection of <see cref="T:OpcLabs.EasyOpc.ServerElement" /> values, each containing information 
            about a particular OPC server found on the specified machine. The keys of the keyed collection are the server's 
            CLSIDs.</returns>
      <example>
        <h3>COM</h3>
        <code source="..\..\Native\Examples\JScript\WSH\DocExamples\_EasyDAClient\BrowseServers.Main.js" lang="JScript" region="Example" />
        <code source="..\..\Native\Examples\PHP\Console\DocExamples\DataAccess\_EasyDAClient\BrowseServers.Main.php" lang="PHP" title="PHP" region="Example" />
        <code source="..\..\Native\Examples\Python\CPython\Console\DocExamples\DataAccess\_EasyDAClient\Com.BrowseServers.Main.py" lang="Python" title="Python (COM)" region="Example" />
        <code source="..\..\Native\Examples\VBScript\WSH\DocExamples\DataAccess\_EasyDAClient\BrowseServers.Main.vbs" lang="VBScript" title="VBScript" region="Example" />
      </example>
      <exception cref="T:System.Exception">An error has occurred during application execution.</exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.ChangeItemSubscription(System.Int32,System.Int32)">
      <summary>Changes parameters of a subscription. Specify handle, and requested update rate.
            </summary>
      <param name="handle">Item subscription handle as returned by the SubscribeItem method</param>
      <param name="requestedUpdateRate">The new requested update rate.</param>
      <remarks>
        <para>It is more efficient to change multiple subscriptions using 
            <see cref="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.ChangeMultipleItemSubscriptions(System.Object)" /> method.</para>
      </remarks>
      <example>
        <h3>COM</h3>
        <code source="..\..\Native\Examples\VBScript\WSH\DocExamples\DataAccess\_EasyDAClient\ChangeItemSubscription.Main.vbs" lang="VBScript" title="VBScript" region="Example" />
      </example>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.ChangeItemSubscriptionList(System.Collections.IList)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.ChangeMultipleItemSubscriptions(OpcLabs.EasyOpc.DataAccess.OperationModel.DAHandleGroupArguments[])" />
      <remarks>
        <para>
            This method uses lists instead of arrays.</para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.ChangeMultipleItemSubscriptions(System.Object)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.ChangeMultipleItemSubscriptions(OpcLabs.EasyOpc.DataAccess.OperationModel.DAHandleGroupArguments[])" />
      <example>
        <h3>COM</h3>
        <code source="..\..\Native\Examples\VBScript\WSH\DocExamples\DataAccess\_EasyDAClient\ChangeMultipleItemSubscriptions.Main.vbs" lang="VBScript" title="VBScript" region="Example" />
      </example>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.GetItemSubscriptionArguments(System.Int32)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.GetItemSubscriptionArguments(System.Int32)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.GetMultiplePropertyValues(System.Object)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.GetMultiplePropertyValues(OpcLabs.EasyOpc.DataAccess.OperationModel.DAPropertyArguments[])" />
      <example>
        <h3>COM</h3>
        <code source="..\..\Native\Examples\OP\DocExamples\DataAccess\_EasyDAClient\GetMultiplePropertyValues.Main.inc" language="ObjectPascal" lang="Object Pascal" title="Object Pascal" region="Example" />
        <code source="..\..\Native\Examples\PHP\Console\DocExamples\DataAccess\_EasyDAClient\GetMultiplePropertyValues.Main.php" lang="PHP" title="PHP" region="Example" />
        <code source="..\..\Native\Examples\VB\VB60\DocExamples\DataAccess_EasyDAClientForm.frm" language="VB" lang="Visual Basic (VB 6.0)" title="Visual Basic (VB 6.0)" region="Example GetMultiplePropertyValues.Main" />
        <code source="..\..\Native\Examples\VBScript\WSH\DocExamples\DataAccess\_EasyDAClient\GetMultiplePropertyValues.Main.vbs" lang="VBScript" title="VBScript" region="Example" />
      </example>
      <example>
        <h3>COM</h3>
        <code source="..\..\Native\Examples\VBScript\WSH\DocExamples\DataAccess\_EasyDAClient\GetMultiplePropertyValues.TimeMeasurements.vbs" lang="VBScript" title="VBScript" region="Example" />
      </example>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.GetPropertyValue(System.String,System.String,System.String,System.Int32)">
      <summary>Gets a value of OPC property, using individual parameters specifying the OPC server, and OPC Item ID.
            </summary>
      <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an 
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
      <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
      <param name="itemId">The Item ID of the OPC item involved in the operation.</param>
      <param name="propertyId">The numerical value of the Property ID of the OPC property being obtained</param>
      <returns>If successful, the function returns the actual value of the OPC property requested.</returns>
      <example>
        <h3>COM</h3>
        <code source="..\..\Native\Examples\VBScript\WSH\DocExamples\DataAccess\_EasyDAClient\GetPropertyValue.Main.vbs" lang="VBScript" title="VBScript" region="Example" />
        <code source="..\..\Native\Examples\PHP\Console\DocExamples\DataAccess\_EasyDAClient\GetPropertyValue.Main.php" lang="PHP" title="PHP" region="Example" />
        <code source="..\..\Native\Examples\Python\CPython\Console\DocExamples\DataAccess\_EasyDAClient\Com.GetPropertyValue.Main.py" lang="Python" title="Python (COM)" region="Example" />
        <code source="..\..\Native\Examples\VBScript\WSH\DocExamples\DataAccess\_EasyDAClient\GetPropertyValue.TimeMeasurements.vbs" lang="VBScript" title="VBScript" region="Example" />
      </example>
      <exception cref="T:System.Exception">An error has occurred during application execution.</exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.GetPropertyValueList(System.Collections.IList)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.GetMultiplePropertyValues(OpcLabs.EasyOpc.DataAccess.OperationModel.DAPropertyArguments[])" />
      <remarks>
        <para>
            This method uses lists instead of arrays.</para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.IsKnownItemSubscriptionHandle(System.Int32)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.IsKnownItemSubscriptionHandle(System.Int32)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.ReadItem(System.String,System.String,System.String)">
      <summary>
            Reads a named item using individual parameters specifying its location, and using server's canonical data type.
            </summary>
      <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an 
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
      <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
      <param name="itemId">Contains OPC item identifier.</param>
      <returns>If successful, the function returns a <see cref="T:OpcLabs.EasyOpc.DataAccess.DAVtq" /> object. The object contains the value, timestamp 
            and quality of the OPC item requested.</returns>
      <example>
        <h3>COM</h3>
        <code source="..\..\Native\Examples\JScript\WSH\DocExamples\_EasyDAClient\ReadItem.Main.js" lang="JScript" region="Example" />
        <code source="..\..\Native\Examples\OP\DocExamples\DataAccess\_EasyDAClient\ReadItem.Main.inc" language="ObjectPascal" lang="Object Pascal" title="Object Pascal" region="Example" />
        <code source="..\..\Native\Examples\PHP\Console\DocExamples\DataAccess\_EasyDAClient\ReadItem.Main.php" lang="PHP" title="PHP" region="Example" />
        <code source="..\..\Native\Examples\PowerScript\PB\Exported\w_docexamples_easydaclient.srw" lang="PowerScript" title="PowerScript" region="Example ReadItem.Main" />
        <code source="..\..\Native\Examples\VB\VB60\DocExamples\DataAccess_EasyDAClientForm.frm" language="VB" lang="Visual Basic (VB 6.0)" title="Visual Basic (VB 6.0)" region="Example ReadItem.Main" />
        <code source="..\..\Native\Examples\VBScript\WSH\DocExamples\DataAccess\_EasyDAClient\ReadItem.Main.vbs" lang="VBScript" title="VBScript" region="Example" />
      </example>
      <exception cref="T:System.Exception">An error has occurred during application execution.</exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.ReadItemList(System.Collections.IList)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.ReadMultipleItems(OpcLabs.EasyOpc.DataAccess.OperationModel.DAReadItemArguments[])" />
      <remarks>
        <para>
            This method uses lists instead of arrays.</para>
      </remarks>
      <example>
        <h3>COM</h3>
        <code source="..\..\Native\Examples\PowerScript\PB\Exported\w_docexamples_easydaclient.srw" lang="PowerScript" title="PowerScript" region="Example ReadItemList.Main" />
      </example>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.ReadItemValue(System.String,System.String,System.String)">
      <summary>
            Reads a value of named item using individual parameters specifying its location, using server's canonical data type. 
            </summary>
      <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an 
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
      <param name="serverClass">Contains ProgID of the OPC server to read from.</param>
      <param name="itemId">Contains OPC item identifier.</param>
      <returns>If successful, the function returns the actual value of OPC item requested.</returns>
      <example>
        <h3>COM</h3>
        <code source="..\..\Native\Examples\JScript\WSH\DocExamples\_EasyDAClient\ReadItemValue.Main.js" lang="JScript" region="Example" />
        <code source="..\..\Native\Examples\OP\DocExamples\DataAccess\_EasyDAClient\ReadItemValue.Main.inc" language="ObjectPascal" lang="Object Pascal" title="Object Pascal" region="Example" />
        <code source="..\..\Native\Examples\PHP\Console\DocExamples\DataAccess\_EasyDAClient\ReadItemValue.Main.php" lang="PHP" title="PHP" region="Example" />
        <code source="..\..\Native\Examples\PowerScript\PB\Exported\w_docexamples_easydaclient.srw" lang="PowerScript" title="PowerScript" region="Example ReadItemValue.Main" />
        <code source="..\..\Native\Examples\Python\CPython\Console\DocExamples\DataAccess\_EasyDAClient\Com.ReadItemValue.Main.py" lang="Python" title="Python (COM)" region="Example" />
        <code source="..\..\Native\Examples\VB\VB60\DocExamples\DataAccess_EasyDAClientForm.frm" language="VB" lang="Visual Basic (VB 6.0)" title="Visual Basic (VB 6.0)" region="Example ReadItemValue.Main" />
        <code source="..\..\Native\Examples\VBScript\WSH\DocExamples\DataAccess\_EasyDAClient\ReadItemValue.Main.vbs" lang="VBScript" title="VBScript" region="Example" />
      </example>
      <example>
        <h3>COM</h3>
        <code source="..\..\Native\Examples\VBScript\WSH\DocExamples\DataAccess\_EasyDAClient\ReadItemValue.CLSID.vbs" lang="VBScript" title="VBScript" region="Example" />
      </example>
      <exception cref="T:System.Exception">An error has occurred during application execution.</exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.ReadItemValueList(System.Collections.IList)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension.ReadMultipleItemValues(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.DataAccess.OperationModel.DAReadItemArguments[])" />
      <remarks>
        <para>
            This method uses lists instead of arrays.</para>
      </remarks>
      <example>
        <h3>COM</h3>
        <code source="..\..\Native\Examples\PowerScript\PB\Exported\w_docexamples_easydaclient.srw" lang="PowerScript" title="PowerScript" region="Example ReadItemValueList.Main" />
      </example>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.ReadMultipleItems(System.Object)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.ReadMultipleItems(OpcLabs.EasyOpc.DataAccess.OperationModel.DAReadItemArguments[])" />
      <example>
        <h3>COM</h3>
        <code source="..\..\Native\Examples\OP\DocExamples\DataAccess\_EasyDAClient\ReadMultipleItems.Main.inc" language="ObjectPascal" lang="Object Pascal" title="Object Pascal" region="Example" />
        <code source="..\..\Native\Examples\PHP\Console\DocExamples\DataAccess\_EasyDAClient\ReadMultipleItems.Main.php" lang="PHP" title="PHP" region="Example" />
        <code source="..\..\Native\Examples\VB\VB60\DocExamples\DataAccess_EasyDAClientForm.frm" language="VB" lang="Visual Basic (VB 6.0)" title="Visual Basic (VB 6.0)" region="Example ReadMultipleItems.Main" />
        <code source="..\..\Native\Examples\VBScript\WSH\DocExamples\DataAccess\_EasyDAClient\ReadMultipleItems.Main.vbs" lang="VBScript" title="VBScript" region="Example" />
      </example>
      <example>
        <h3>COM</h3>
        <code source="..\..\Native\Examples\VBScript\WSH\DocExamples\DataAccess\_EasyDAClient\ReadMultipleItems.ManyRepeat.vbs" lang="VBScript" title="VBScript" region="Example" />
      </example>
      <example>
        <h3>COM</h3>
        <code source="..\..\Native\Examples\VBScript\WSH\DocExamples\DataAccess\_EasyDAClient\ReadMultipleItems.Synchronous.vbs" lang="VBScript" title="VBScript" region="Example" />
      </example>
      <example>
        <h3>COM</h3>
        <code source="..\..\Native\Examples\Python\CPython\Console\DocExamples\DataAccess\_EasyDAClient\Com.ReadMultipleItems.TestSuccess.py" lang="Python" title="Python (COM)" region="Example" />
        <code source="..\..\Native\Examples\VBScript\WSH\DocExamples\DataAccess\_EasyDAClient\ReadMultipleItems.TestSuccess.vbs" lang="VBScript" title="VBScript" region="Example" />
      </example>
      <example>
        <h3>COM</h3>
        <code source="..\..\Native\Examples\VBScript\WSH\DocExamples\DataAccess\_EasyDAClient\ReadMultipleItems.ThrowOnAccess.vbs" lang="VBScript" title="VBScript" region="Example" />
      </example>
      <example>
        <h3>COM</h3>
        <code source="..\..\Native\Examples\VBScript\WSH\DocExamples\DataAccess\_EasyDAClient\ReadMultipleItems.TimeMeasurements.vbs" lang="VBScript" title="VBScript" region="Example" />
      </example>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.ReadMultipleItemValues(System.Object)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension.ReadMultipleItemValues(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.DataAccess.OperationModel.DAReadItemArguments[])" />
      <example>
        <h3>COM</h3>
        <code source="..\..\Native\Examples\OP\DocExamples\DataAccess\_EasyDAClient\ReadMultipleItemValues.Main.inc" language="ObjectPascal" lang="Object Pascal" title="Object Pascal" region="Example" />
        <code source="..\..\Native\Examples\VB\VB60\DocExamples\DataAccess_EasyDAClientForm.frm" language="VB" lang="Visual Basic (VB 6.0)" title="Visual Basic (VB 6.0)" region="Example ReadMultipleItemValues.Main" />
        <code source="..\..\Native\Examples\VBScript\WSH\DocExamples\DataAccess\_EasyDAClient\ReadMultipleItemValues.Main.vbs" lang="VBScript" title="VBScript" region="Example" />
      </example>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.SubscribeItem(System.String,System.String,System.String,System.Int32)">
      <summary>Subscribe to OPC item. Specify machine name, server class, item ID, and requested update rate.
            No state object is specified (this overload is suitable for simple scenarios only).</summary>
      <param name="machineName">Name of the machine (empty string for local computer).</param>
      <param name="serverClass">Contains ProgID of the OPC server.</param>
      <param name="itemId">ID of the item that will be subscribed to.</param>
      <param name="requestedUpdateRate">How often should the updates be received (number of milliseconds)</param>
      <returns>The method returns an integer handle that uniquely identifies the item subscription.</returns>
      <example>
        <h3>COM</h3>
        <code source="..\..\Native\Examples\OP\DocExamples\DataAccess\_EasyDAClient\SubscribeItem.Main.inc" language="ObjectPascal" lang="Object Pascal" title="Object Pascal" region="Example" />
        <code source="..\..\Native\Examples\PHP\Console\DocExamples\DataAccess\_EasyDAClient\SubscribeItem.Main.php" lang="PHP" title="PHP" region="Example" />
        <code source="..\..\Native\Examples\VB\VB60\DocExamples\DataAccess_EasyDAClientForm.frm" language="VB" lang="Visual Basic (VB 6.0)" title="Visual Basic (VB 6.0)" region="Example SubscribeItem.Main" />
        <code source="..\..\Native\Examples\VBScript\WSH\DocExamples\DataAccess\_EasyDAClient\SubscribeItem.Main.vbs" lang="VBScript" title="VBScript" region="Example" />
      </example>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.SubscribeItemList(System.Collections.IList)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.SubscribeMultipleItems(OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemSubscriptionArguments[])" />
      <remarks>
        <para>
            This method uses lists instead of arrays.</para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.SubscribeMultipleItems(System.Object)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.SubscribeMultipleItems(OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemSubscriptionArguments[])" />
      <example>
        <h3>COM</h3>
        <code source="..\..\Native\Examples\OP\DocExamples\DataAccess\_EasyDAClient\SubscribeMultipleItems.Main.inc" language="ObjectPascal" lang="Object Pascal" title="Object Pascal" region="Example" />
        <code source="..\..\Native\Examples\PHP\Console\DocExamples\DataAccess\_EasyDAClient\SubscribeMultipleItems.Main.php" lang="PHP" title="PHP" region="Example" />
        <code source="..\..\Native\Examples\VB\VB60\DocExamples\DataAccess_EasyDAClientForm.frm" language="VB" lang="Visual Basic (VB 6.0)" title="Visual Basic (VB 6.0)" region="Example SubscribeMultipleItems.Main" />
        <code source="..\..\Native\Examples\VBScript\WSH\DocExamples\DataAccess\_EasyDAClient\SubscribeMultipleItems.Main.vbs" lang="VBScript" title="VBScript" region="Example" />
      </example>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.UnsubscribeAllItems">
      <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.UnsubscribeAllItems" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.UnsubscribeItem(System.Int32)">
      <summary>Unsubscribe from OPC item, specifying its handle.
            </summary>
      <param name="handle">Item subscription handle as returned by the SubscribeItem method</param>
      <example>
        <h3>COM</h3>
        <code source="..\..\Native\Examples\VBScript\WSH\DocExamples\DataAccess\_EasyDAClient\UnsubscribeItem.Main.vbs" lang="VBScript" title="VBScript" region="Example" />
      </example>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.UnsubscribeItemList(System.Collections.IList)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.UnsubscribeMultipleItems(System.Collections.Generic.IEnumerable{System.Int32})" />
      <remarks>
        <para>
            This method uses lists instead of arrays.</para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.UnsubscribeMultipleItems(System.Object)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.UnsubscribeMultipleItems(System.Collections.Generic.IEnumerable{System.Int32})" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.WaitForMultipleItemValueList(System.Collections.IList,System.Object,System.Int32)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.WaitForMultipleItemValues(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.Collections.Generic.IReadOnlyList{OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemGroupArguments},OpcLabs.EasyOpc.DataAccess.DAQuality,System.Int32)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.WaitForMultipleItemValues(System.Object,System.Object,System.Int32)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.WaitForMultipleItemValues(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.Collections.Generic.IReadOnlyList{OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemGroupArguments},OpcLabs.EasyOpc.DataAccess.DAQuality,System.Int32)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.WaitForItemValue(System.String,System.String,System.String,System.Int32,System.Int32)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.Extensions.IEasyDAClientExtension2.WaitForItemValue(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.String,System.String,OpcLabs.EasyOpc.DataAccess.DAItemDescriptor,OpcLabs.EasyOpc.DataAccess.DAGroupParameters,System.Int32)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.WriteItem(System.String,System.String,System.String,System.Object,System.DateTime,OpcLabs.EasyOpc.DataAccess.DAQualities)">
      <summary>Writes separately given value, timestamp and quality into a named item using individual parameters 
            specifying its location, and a specific data type.</summary>
      <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
      <param name="serverClass">Contains ProgID of the OPC server to write into.</param>
      <param name="itemId">Contains OPC item identifier.</param>
      <param name="value">The value to be written.</param>
      <param name="timestamp">The timestamp to be written.</param>
      <param name="quality">The numerical value of the quality to be written.</param>
      <example>
        <h3>COM</h3>
        <code source="..\..\Native\Examples\OP\DocExamples\DataAccess\_EasyDAClient\WriteItem.Main.inc" language="ObjectPascal" lang="Object Pascal" title="Object Pascal" region="Example" />
        <code source="..\..\Native\Examples\VB\VB60\DocExamples\DataAccess_EasyDAClientForm.frm" language="VB" lang="Visual Basic (VB 6.0)" title="Visual Basic (VB 6.0)" region="Example WriteItem.Main" />
        <code source="..\..\Native\Examples\VBScript\WSH\DocExamples\DataAccess\_EasyDAClient\WriteItem.Main.vbs" lang="VBScript" title="VBScript" region="Example" />
      </example>
      <exception cref="T:System.Exception">An error has occurred during application execution.</exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.WriteItemList(System.Collections.IList)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.WriteMultipleItems(OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemVtqArguments[])" />
      <remarks>
        <para>
            This method uses lists instead of arrays.</para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.WriteItemValue(System.String,System.String,System.String,System.Object)">
      <summary>Writes a value into a named item using individual parameters specifying its location, and using
            server's canonical data type.</summary>
      <param name="machineName">Name of the machine. Determines the computer on which the OPC server is located. May be an
            empty string, in which case the OPC server is assumed to exist on the local computer or at the computer specified 
            for it by DCOM configuration.</param>
      <param name="serverClass">Contains ProgID of the OPC server to write into.</param>
      <param name="itemId">Contains OPC item identifier.</param>
      <param name="value">The value to be written.</param>
      <example>
        <h3>COM</h3>
        <code source="..\..\Native\Examples\OP\DocExamples\DataAccess\_EasyDAClient\WriteItemValue.Main.inc" language="ObjectPascal" lang="Object Pascal" title="Object Pascal" region="Example" />
        <code source="..\..\Native\Examples\PHP\Console\DocExamples\DataAccess\_EasyDAClient\WriteItemValue.Main.php" lang="PHP" title="PHP" region="Example" />
        <code source="..\..\Native\Examples\PowerScript\PB\Exported\w_docexamples_easydaclient.srw" lang="PowerScript" title="PowerScript" region="Example WriteItemValue.Main" />
        <code source="..\..\Native\Examples\VB\VB60\DocExamples\DataAccess_EasyDAClientForm.frm" language="VB" lang="Visual Basic (VB 6.0)" title="Visual Basic (VB 6.0)" region="Example WriteItemValue.Main" />
        <code source="..\..\Native\Examples\Python\CPython\Console\DocExamples\DataAccess\_EasyDAClient\Com.WriteItemValue.Main.py" lang="Python" title="Python (COM)" region="Example" />
        <code source="..\..\Native\Examples\VBScript\WSH\DocExamples\DataAccess\_EasyDAClient\WriteItemValue.Main.vbs" lang="VBScript" title="VBScript" region="Example" />
      </example>
      <exception cref="T:System.Exception">An error has occurred during application execution.</exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.WriteItemValueList(System.Collections.IList)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.WriteMultipleItems(OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemVtqArguments[])" />
      <remarks>
        <para>
            This method uses lists instead of arrays.</para>
      </remarks>
      <example>
        <h3>COM</h3>
        <code source="..\..\Native\Examples\PowerScript\PB\Exported\w_docexamples_easydaclient.srw" lang="PowerScript" title="PowerScript" region="Example WriteItemValueList.Main" />
      </example>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.WriteMultipleItems(System.Object)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.WriteMultipleItems(OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemVtqArguments[])" />
      <example>
        <h3>COM</h3>
        <code source="..\..\Native\Examples\OP\DocExamples\DataAccess\_EasyDAClient\WriteMultipleItems.Main.inc" language="ObjectPascal" lang="Object Pascal" title="Object Pascal" region="Example" />
        <code source="..\..\Native\Examples\VB\VB60\DocExamples\DataAccess_EasyDAClientForm.frm" language="VB" lang="Visual Basic (VB 6.0)" title="Visual Basic (VB 6.0)" region="Example WriteMultipleItems.Main" />
        <code source="..\..\Native\Examples\VBScript\WSH\DocExamples\DataAccess\_EasyDAClient\WriteMultipleItems.Main.vbs" lang="VBScript" title="VBScript" region="Example" />
      </example>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.WriteMultipleItemValues(System.Object)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.WriteMultipleItemValues(OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemValueArguments[])" />
      <example>
        <h3>COM</h3>
        <code source="..\..\Native\Examples\OP\DocExamples\DataAccess\_EasyDAClient\WriteMultipleItemValues.Main.inc" language="ObjectPascal" lang="Object Pascal" title="Object Pascal" region="Example" />
        <code source="..\..\Native\Examples\PHP\Console\DocExamples\DataAccess\_EasyDAClient\WriteMultipleItemValues.Main.php" lang="PHP" title="PHP" region="Example" />
        <code source="..\..\Native\Examples\VB\VB60\DocExamples\DataAccess_EasyDAClientForm.frm" language="VB" lang="Visual Basic (VB 6.0)" title="Visual Basic (VB 6.0)" region="Example WriteMultipleItemValues.Main" />
        <code source="..\..\Native\Examples\VBScript\WSH\DocExamples\DataAccess\_EasyDAClient\WriteMultipleItemValues.Main.vbs" lang="VBScript" title="VBScript" region="Example" />
      </example>
      <example>
        <h3>COM</h3>
        <code source="..\..\Native\Examples\PHP\Console\DocExamples\DataAccess\_EasyDAClient\WriteMultipleItemValues.TestSuccess.php" lang="PHP" title="PHP" region="Example" />
        <code source="..\..\Native\Examples\VBScript\WSH\DocExamples\DataAccess\_EasyDAClient\WriteMultipleItemValues.TestSuccess.vbs" lang="VBScript" title="VBScript" region="Example" />
      </example>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.PullItemChanged(System.Int32)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClientExtension.PullItemChanged(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,System.Int32)" />
      <example>
        <h3>COM</h3>
        <code source="..\..\Native\Examples\JScript\WSH\DocExamples\_EasyDAClient\PullItemChanged.Main.js" lang="JScript" region="Example" />
        <code source="..\..\Native\Examples\OP\DocExamples\DataAccess\_EasyDAClient\PullItemChanged.Main.inc" language="ObjectPascal" lang="Object Pascal" title="Object Pascal" region="Example" />
        <code source="..\..\Native\Examples\PHP\Console\DocExamples\DataAccess\_EasyDAClient\PullItemChanged.Main.php" lang="PHP" title="PHP" region="Example" />
        <code source="..\..\Native\Examples\PowerScript\PB\Exported\w_docexamples_easydaclient.srw" lang="PowerScript" title="PowerScript" region="Example PullItemChanged.Main" />
        <code source="..\..\Native\Examples\Python\CPython\Console\DocExamples\DataAccess\_EasyDAClient\Com.PullItemChanged.Main.py" lang="Python" title="Python (COM)" region="Example" />
        <code source="..\..\Native\Examples\VB\VB60\DocExamples\DataAccess_EasyDAClientForm.frm" language="VB" lang="Visual Basic (VB 6.0)" title="Visual Basic (VB 6.0)" region="Example PullItemChanged.Main" />
        <code source="..\..\Net\Examples\VBNET\VisualStudio\Console\DocExamples\DataAccess\_EasyDAClient\PullItemChanged.Main1.vb" lang="VB.NET" title="Visual Basic (VB.NET)" region="Example" />
        <code source="..\..\Native\Examples\VBScript\WSH\DocExamples\DataAccess\_EasyDAClient\PullItemChanged.Main.vbs" lang="VBScript" title="VBScript" region="Example" />
      </example>
      <example>
        <h3>COM</h3>
        <code source="..\..\Native\Examples\OP\DocExamples\DataAccess\_EasyDAClient\PullItemChanged.MultipleItems.inc" language="ObjectPascal" lang="Object Pascal" title="Object Pascal" region="Example" />
        <code source="..\..\Native\Examples\Python\CPython\Console\DocExamples\DataAccess\_EasyDAClient\Com.PullItemChanged.MultipleItems.py" lang="Python" title="Python (COM)" region="Example" />
        <code source="..\..\Native\Examples\VB\VB60\DocExamples\DataAccess_EasyDAClientForm.frm" language="VB" lang="Visual Basic (VB 6.0)" title="Visual Basic (VB 6.0)" region="Example PullItemChanged.MultipleItems" />
      </example>
      <example>
        <h3>COM</h3>
        <code source="..\..\Native\Examples\Python\CPython\Console\DocExamples\DataAccess\Xml\Com.PullItemChanged.MultipleItemsXml.py" lang="Python" title="Python (COM)" region="Example" />
      </example>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.PullItemChangeList(System.Int32,System.Int32)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.PullMultipleItemChanges(System.Int32,System.Int32)" />
      <remarks>
        <para>
            This method uses lists instead of arrays.</para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.PullMultipleItemChanges(System.Int32,System.Int32)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.PullMultipleItemChanges(System.Int32,System.Int32)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClient.Reset">
      <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.Reset" />
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClientManagement">
      <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.DataAccess.EasyDAClientManagementCore" /> to COM clients.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClientManagement.ToString">
      <inheritdoc cref="M:System.Object.ToString" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClientManagement.Equals(System.Object)">
      <inheritdoc cref="M:System.Object.Equals(System.Object)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClientManagement.GetHashCode">
      <inheritdoc cref="M:System.Object.GetHashCode" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClientManagement.GetType">
      <inheritdoc cref="M:System.Object.GetType" />
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClientManagement.DisplayString">
      <summary>
            The display string for the current object.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClientManagement.CustomReference">
      <inheritdoc cref="P:OpcLabs.BaseLib.Widgets.Widget.CustomReference" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClientManagement.Clone">
      <inheritdoc cref="M:System.ICloneable.Clone" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClientManagement.GetService(System.Type)">
      <inheritdoc cref="M:System.IServiceProvider.GetService(System.Type)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClientManagement.GetServiceByName(System.String)">
      <inheritdoc cref="M:OpcLabs.BaseLib.Extensions.IServiceProviderExtension.GetServiceByName(System.IServiceProvider,System.String)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClientManagement.ValueEquals(System.Object)">
      <inheritdoc cref="M:OpcLabs.BaseLib.IValueEquatable.ValueEquals(System.Object)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClientManagement.BeginInit">
      <inheritdoc cref="M:System.ComponentModel.ISupportInitialize.BeginInit" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClientManagement.EndInit">
      <inheritdoc cref="M:System.ComponentModel.ISupportInitialize.EndInit" />
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClientManagement.AdaptableParameters">
      <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientManagementCore.AdaptableParameters" />
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClientManagement.ServiceProviderEndpointDescriptor">
      <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientManagementCore.ServiceProviderEndpointDescriptor" />
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClientManagement.SharedInstance">
      <summary>
            A default, shared instance of the client object.
            </summary>
      <remarks>
        <para>
            Use this property with care, as its usability is limited. Its main use is for testing, and for non-library
            application code where just a single instance is sufficient.</para>
        <para>
            The default instance is not suitable for Windows Forms or similar environments, where a specific 
            <see cref="T:System.Threading.SynchronizationContext" /> may be used with each form.</para>
        <para>
            We also do not recommend using the default instance for library code, due to conflicts that may arise if your 
            library sets some instance parameters which may not be the same as what other libraries or the final application 
            expects.
            </para>
      </remarks>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClientManagement.SharedParameters">
      <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientManagementCore.SharedParameters" />
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClientSelector">
      <summary>
            Exposes <see cref="T:OpcLabs.EasyOpc.DataAccess.EasyDAClientSelector" /> to COM clients.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClientSelector.ToString">
      <inheritdoc cref="M:System.Object.ToString" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClientSelector.Equals(System.Object)">
      <inheritdoc cref="M:System.Object.Equals(System.Object)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClientSelector.GetHashCode">
      <inheritdoc cref="M:System.Object.GetHashCode" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClientSelector.GetType">
      <inheritdoc cref="M:System.Object.GetType" />
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClientSelector.DisplayString">
      <summary>
            The display string for the current object.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClientSelector.Clone">
      <inheritdoc cref="M:System.ICloneable.Clone" />
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClientSelector.StandardName">
      <inheritdoc cref="P:OpcLabs.BaseLib.Parameters.StandardName" />
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClientSelector.Differentiator">
      <inheritdoc cref="P:OpcLabs.BaseLib.ParameterizedSelector`2.Differentiator" />
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClientSelector.InstanceParameters">
      <inheritdoc cref="P:OpcLabs.BaseLib.ParameterizedSelector`2.InstanceParameters" />
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClientSelector.Isolated">
      <inheritdoc cref="P:OpcLabs.BaseLib.ParameterizedSelector`2.Isolated" />
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClientSelector.IsolatedParameters">
      <inheritdoc cref="P:OpcLabs.BaseLib.ParameterizedSelector`2.IsolatedParameters" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClientSelector.Reset">
      <inheritdoc cref="M:OpcLabs.BaseLib.ParameterizedSelector`2.Reset" />
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration">
      <summary>
            Configuration data for <see cref="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityCore" />.
            </summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration.DefaultTemplateRequestedUpdateRate">
      <summary>
            The default requested update rate in the subscribe parameters template. Equals to 1000 milliseconds (1 second).
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration.#ctor">
      <summary>
            Initializes a new instance of the class.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration.#ctor(OpcLabs.BaseLib.Connectivity.SelectorConfiguration{OpcLabs.EasyOpc.DataAccess.Engine.EasyDASharedParameters,OpcLabs.EasyOpc.DataAccess.Engine.EasyDAAdaptableParameters,OpcLabs.EasyOpc.DataAccess.Engine.EasyDAInstanceParameters})">
      <summary>Initializes a new instance of the class, copying values from a given object.</summary>
      <param name="selectorConfiguration">The object to be copied from.</param>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration.#ctor(OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration)">
      <summary>Initializes a new instance of the class, copying values from a given object.</summary>
      <param name="connectivityConfiguration">The object to be copied from.</param>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration.#ctor(OpcLabs.EasyOpc.DataAccess.Engine.EasyDASharedParameters,OpcLabs.EasyOpc.DataAccess.Engine.EasyDAAdaptableParameters,OpcLabs.EasyOpc.DataAccess.Engine.EasyDAInstanceParameters)">
      <summary>
            Initializes a new instance of the class with the given parameters.
            </summary>
      <param name="sharedParameters">Shared parameters.</param>
      <param name="isolatedParameters">Isolated parameters.</param>
      <param name="instanceParameters">Instance parameters.</param>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the class with serialized data.</summary>
      <param name="info">The SerializationInfo that holds the serialized object data.</param>
      <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration.Default">
      <summary>
            Default configuration.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration.op_Equality(OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration,OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration)">
      <summary>Determines whether the two objects are equal.</summary>
      <param name="left">First object to be compared.</param>
      <param name="right">Second object to be compared.</param>
      <returns>
        <c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration.op_Inequality(OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration,OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration)">
      <summary>Determines whether the two objects are not equal.</summary>
      <param name="left">First object to be compared.</param>
      <param name="right">Second object to be compared.</param>
      <returns>
        <c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration.ItemReadParametersTemplate">
      <summary>
            Template for OPC item read parameters in newly added bindings.
            </summary>
      <remarks>
            The template is used in design-time to facilitate repetitive use of the same item read parameters.
            </remarks>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration.ItemSubscribeParametersTemplate">
      <summary>
            Template for OPC item subscribe parameters in newly added bindings.
            </summary>
      <remarks>
            The template is used in design-time to facilitate repetitive use of the same item subscribe parameters.
            </remarks>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration.ItemWriteParametersTemplate">
      <summary>
            Template for OPC item write parameters in newly added bindings.
            </summary>
      <remarks>
            The template is used in design-time to facilitate repetitive use of the same item write parameters.
            </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration.Equals(System.Object)">
      <inheritdoc />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration.GetHashCode">
      <inheritdoc cref="M:System.Object.GetHashCode" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration.ToString">
      <inheritdoc cref="M:System.Object.ToString" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration.Clone">
      <inheridoc />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration.ResetItemReadParametersTemplate">
      <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration.ItemReadParametersTemplate" /> back to its default.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration.ShouldSerializeItemReadParametersTemplate">
      <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration.ItemReadParametersTemplate" /> is in its default state.
            </summary>
      <returns>
        <c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration.ResetItemSubscribeParametersTemplate">
      <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration.ItemSubscribeParametersTemplate" /> back to its default.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration.ShouldSerializeItemSubscribeParametersTemplate">
      <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration.ItemSubscribeParametersTemplate" /> is in its default state.
            </summary>
      <returns>
        <c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration.ResetItemWriteParametersTemplate">
      <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration.ItemWriteParametersTemplate" /> back to its default.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration.ShouldSerializeItemWriteParametersTemplate">
      <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration.ItemWriteParametersTemplate" /> is in its default state.
            </summary>
      <returns>
        <c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration.ResetInstanceParameters">
      <summary>
            Reset the <see cref="P:OpcLabs.BaseLib.Connectivity.SelectorConfiguration`3.InstanceParameters" /> property to its default value.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration.ShouldSerializeInstanceParameters">
      <summary>
            Determines whether the <see cref="P:OpcLabs.BaseLib.Connectivity.SelectorConfiguration`3.InstanceParameters" /> property is equal to its default value.
            </summary>
      <returns>
        <c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration.ResetIsolatedParameters">
      <summary>
            Reset the <see cref="P:OpcLabs.BaseLib.Connectivity.SelectorConfiguration`3.IsolatedParameters" /> property to its default value.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration.ShouldSerializeIsolatedParameters">
      <summary>
            Determines whether the <see cref="P:OpcLabs.BaseLib.Connectivity.SelectorConfiguration`3.IsolatedParameters" /> property is equal to its default value.
            </summary>
      <returns>
        <c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration.ResetSharedParameters">
      <summary>
            Reset the <see cref="P:OpcLabs.BaseLib.Connectivity.SelectorConfiguration`3.SharedParameters" /> property to its default value.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration.ShouldSerializeSharedParameters">
      <summary>
            Determines whether the <see cref="P:OpcLabs.BaseLib.Connectivity.SelectorConfiguration`3.SharedParameters" /> property is equal to its default value.
            </summary>
      <returns>
        <c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration.DeepClone">
      <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
      <returns>A new object that is a deep copy of this instance.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration.Equals(OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration)">
      <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration" /> is equal to the current object.
            </summary>
      <param name="other">The <see cref="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityConfiguration" /> to compare with the current object.</param>
      <returns>
        <c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityCore">
      <summary>
            The core part of the <c>DAConnectivity</c> object.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityCore.#ctor">
      <summary>
            Initializes a new instance of the class.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityCore.#ctor(OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityCore)">
      <summary>Initializes a new instance of the class, copying values from a given object.</summary>
      <param name="daConnectivity">The object to be copied from.</param>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityCore.#ctor(System.ComponentModel.IContainer)">
      <summary>
            Initializes an instance of the <see cref="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityCore" /> class with Designer support. 
            </summary>
      <param name="container">The component container to which the new instance will be added.</param>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityCore.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the class with serialized data.</summary>
      <param name="info">The SerializationInfo that holds the serialized object data.</param>
      <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityCore.CreatePointService.Types">
      <inheritdoc cref="P:OpcLabs.BaseLib.Composition.IObjectFactoryService.Types" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityCore.CreatePointService.CreateObject(System.Type)">
      <inheritdoc cref="M:OpcLabs.BaseLib.Composition.IObjectFactoryService.CreateObject(System.Type)" />
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityCore.DefaultConfiguration">
      <summary>
            The default configuration that will be used when new instances of <see cref="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityCore" /> are created. 
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityCore.Configuration">
      <summary>
            The configuration data.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityCore.ItemReadParametersTemplate">
      <summary>
            Template for OPC item read parameters in newly added bindings.
            </summary>
      <remarks>
            The template is used in design-time to facilitate repetitive use of the same item read parameters.
            </remarks>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityCore.ItemSubscribeParametersTemplate">
      <summary>
            Template for OPC item subscribe parameters in newly added bindings.
            </summary>
      <remarks>
            The template is used in design-time to facilitate repetitive use of the same item subscribe parameters.
            </remarks>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityCore.ItemWriteParametersTemplate">
      <summary>
            Template for OPC item write parameters in newly added bindings.
            </summary>
      <remarks>
            The template is used in design-time to facilitate repetitive use of the same item write parameters.
            </remarks>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityCore.ClientInstanceParameters">
      <summary>
            Client instance parameters.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityCore.ClientIsolatedParameters">
      <summary>
            Client isolated parameters.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityCore.ValueEquals(OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityCore)">
      <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityCore" /> is value equal to the current object.
            </summary>
      <param name="other">The <see cref="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityCore" /> to compare with the current object.</param>
      <returns>
        <c>true</c> if the specified object is value equal to the current object; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityCore.ToString">
      <inheritdoc />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityCore.Clone">
      <inheritdoc />
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityCore.OpcLabs#BaseLib#Configuration#Abstract#Internal#IConfigurationService#ConfigurationParts">
      <inheritdoc cref="P:OpcLabs.BaseLib.Configuration.Abstract.Internal.IConfigurationService.ConfigurationParts" />
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityCore.OpcLabs#BaseLib#Configuration#Abstract#Internal#IConfigurationService#PartTypes">
      <inheritdoc cref="P:OpcLabs.BaseLib.Configuration.Abstract.Internal.IConfigurationService.PartTypes" />
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityCore.RestartNeeded">
      <inheritdoc cref="P:OpcLabs.BaseLib.Configuration.Abstract.Internal.IConfigurationService.RestartNeeded" />
    </member>
    <member name="E:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityCore.ConfigurationPartsChanged">
      <inheritdoc cref="E:OpcLabs.BaseLib.Configuration.Abstract.Internal.IConfigurationService.ConfigurationPartsChanged" />
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityCore.LicenseInfo">
      <inheritdoc />
    </member>
    <member name="E:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityCore.LogEntry">
      <inheritdoc cref="E:OpcLabs.BaseLib.Instrumentation.ILoggingHandler.LogEntry" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityCore.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityCore.BeginInit">
      <inheritdoc cref="M:System.ComponentModel.ISupportInitialize.BeginInit" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityCore.EndInit">
      <inheritdoc cref="M:System.ComponentModel.ISupportInitialize.EndInit" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityCore.GetService(System.Type)">
      <inheritdoc cref="M:System.IServiceProvider.GetService(System.Type)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityCore.ValueEquals(System.Object)">
      <inheritdoc />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityCore.GetLicensedClient">
      <exclude />
      <exception cref="T:OpcLabs.BaseLib.Licensing.LicensingException">The component is not licensed for the operation requested.</exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityCore.Construct">
      <inheritdoc cref="M:OpcLabs.BaseLib.Connectivity.ConnectivityBase.Construct" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityCore.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityCore.ReadXmlElement(System.Xml.XmlReader)">
      <inheritdoc cref="M:OpcLabs.BaseLib.Info.ReadXmlElement(System.Xml.XmlReader)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityCore.WriteXmlElement(System.Xml.XmlWriter)">
      <inheritdoc cref="M:OpcLabs.BaseLib.Info.WriteXmlElement(System.Xml.XmlWriter)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityCore.DeepClone">
      <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
      <returns>A new object that is a deep copy of this instance.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityCore.ObtainClient">
      <summary>
            Obtains a client object to be used by this connectivity.
            </summary>
      <returns>Returns the <see cref="T:OpcLabs.EasyOpc.DataAccess.IEasyDAClient" /> according to the current client selector.</returns>
      <exception cref="T:OpcLabs.BaseLib.Licensing.LicensingException">The component is not licensed for the operation requested.</exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityCore.ResetItemReadParametersTemplate">
      <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityCore.ItemReadParametersTemplate" /> back to its default.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityCore.ShouldSerializeItemReadParametersTemplate">
      <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityCore.ItemReadParametersTemplate" /> is in its default state.
            </summary>
      <returns>
        <c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityCore.ResetItemSubscribeParametersTemplate">
      <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityCore.ItemSubscribeParametersTemplate" /> back to its default.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityCore.ShouldSerializeItemSubscribeParametersTemplate">
      <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityCore.ItemSubscribeParametersTemplate" /> is in its default state.
            </summary>
      <returns>
        <c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityCore.ResetItemWriteParametersTemplate">
      <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityCore.ItemWriteParametersTemplate" /> back to its default.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityCore.ShouldSerializeItemWriteParametersTemplate">
      <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityCore.ItemWriteParametersTemplate" /> is in its default state.
            </summary>
      <returns>
        <c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityCore.ResetConfiguration">
      <summary>
            Sets <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityCore.Configuration" /> back to its default value.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityCore.ShouldSerializeConfiguration">
      <summary>
            Determines whether the <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityCore.Configuration" /> is not at its default value.
            </summary>
      <returns>
        <c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityCore.ResetClientInstanceParameters">
      <summary>
            Reset the <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityCore.ClientInstanceParameters" /> property to its default value.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityCore.ShouldSerializeClientInstanceParameters">
      <summary>
            Determines whether the <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityCore.ClientInstanceParameters" /> property is equal to its default value.
            </summary>
      <returns>
        <c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityCore.ResetClientIsolatedParameters">
      <summary>
            Reset the <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityCore.ClientIsolatedParameters" /> property to its default value.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityCore.ShouldSerializeClientIsolatedParameters">
      <summary>
            Determines whether the <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityCore.ClientIsolatedParameters" /> property is equal to its default value.
            </summary>
      <returns>
        <c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointChangedEventArgs">
      <exclude />
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.Connectivity.Implementation.NamespaceDoc">
      <summary>
            This namespace provides implementation classes for OPC Data Access connectivity. 
            </summary>
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.Connectivity.Implementation.Resource1">
      <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.Implementation.Resource1.ResourceManager">
      <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.Implementation.Resource1.Culture">
      <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.Implementation.Resource1.DAItemPointReadParametersTypeConverter_ConvertTo_DAItemPointReadParameters">
      <summary>
              Looks up a localized string similar to The value passed to a type converter is not DAItemPointReadParameters, but a '{0}'..
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.Implementation.Resource1.DAItemPointSubscribeParametersTypeConverter_ConvertTo_DAItemPointSubscribeParameters">
      <summary>
              Looks up a localized string similar to The value passed to a type converter is not DAItemPointSubscribeParameters, but a '{0}'..
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.Implementation.Resource1.DAItemPointTypeConverter_ConvertTo_DAItemPoint">
      <summary>
              Looks up a localized string similar to The value passed to a type converter is not DAItemPoint, but a '{0}'..
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.Implementation.Resource1.DAItemPointWriteParametersTypeConverter_ConvertTo_DAItemPointWriteParameters">
      <summary>
              Looks up a localized string similar to The value passed to a type converter is not DAItemPointWriteParameters, but a '{0}'..
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.Implementation.Resource1.DAPropertyPointTypeConverter_ConvertTo_DAPropertyPoint">
      <summary>
              Looks up a localized string similar to The value passed to a type converter is not DAPropertyPoint, but a '{0}'..
            </summary>
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.Connectivity.Implementation.DAPointReader">
      <exclude />
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.Connectivity.Implementation.DAPointSubscriber">
      <exclude />
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.Connectivity.Implementation.DAPointWriter">
      <exclude />
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.Connectivity.Internal.NamespaceDoc">
      <summary>
            This namespace provides internal classes for OPC Data Access connectivity. 
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.Internal.DABrowsePointService.CreatePointBrowseable(System.Object)">
      <inheritdoc cref="M:OpcLabs.BaseLib.Connectivity.Point.Internal.IBrowsePointService.CreatePointBrowseable(System.Object)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.Internal.DABrowsePointService.IsPointNode(System.Object)">
      <inheritdoc cref="M:OpcLabs.BaseLib.Connectivity.Point.Internal.IBrowsePointService.IsPointNode(System.Object)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.Internal.DABrowsePointService.OpcLabs#BaseLib#Connectivity#Point#Internal#IBrowsePointService#NodePathFromPoint(System.Object)">
      <inheritdoc cref="M:OpcLabs.BaseLib.Connectivity.Point.Internal.IBrowsePointService.NodePathFromPoint(System.Object)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.Internal.DABrowsePointService.PointFromNodePath(System.Collections.Generic.IEnumerable{System.Object})">
      <inheritdoc cref="M:OpcLabs.BaseLib.Connectivity.Point.Internal.IBrowsePointService.PointFromNodePath(System.Collections.Generic.IEnumerable{System.Object})" />
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.Connectivity.NamespaceDoc">
      <summary>
            This namespace provides classes for OPC Data Access connectivity. 
            </summary>
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.Connectivity.Resource1">
      <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.Resource1.ResourceManager">
      <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.Resource1.Culture">
      <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.Resource1.DAConnectivity_Configuration_NotADAConnectivityConfiguration">
      <summary>
              Looks up a localized string similar to A configuration collection passed to OPC DA connectivity must contain an OPC DA connectivity configuration..
            </summary>
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments">
      <summary>
            Arguments common to various operations on OPC-DA item point.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments.#ctor">
      <summary>
            Creates a new instance of the object.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments.#ctor(OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments)">
      <summary>Initializes a new instance of the class, copying values from a given object.</summary>
      <param name="itemPointArguments">The object to be copied from.</param>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the class with serialized data.</summary>
      <param name="info">The SerializationInfo that holds the serialized object data.</param>
      <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments.DefaultQuality">
      <summary>
            Default quality.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments.DefaultTimestamp">
      <summary>
            Default timestamp. In UTC.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments.DefaultTimestampLocal">
      <summary>
            Default timestamp. In local time.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments.DefaultVtq">
      <summary>
            Default value-timestamp-quality.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments.op_Equality(OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments,OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments)">
      <summary>Determines whether the two objects are equal.</summary>
      <param name="left">First object to be compared.</param>
      <param name="right">Second object to be compared.</param>
      <returns>
        <c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments.op_Inequality(OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments,OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments)">
      <summary>Determines whether the two objects are not equal.</summary>
      <param name="left">First object to be compared.</param>
      <param name="right">Second object to be compared.</param>
      <returns>
        <c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments.Quality">
      <summary>Gets or sets the quality.</summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments.Timestamp">
      <summary>Gets or sets the timestamp. In UTC.</summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments.TimestampLocal">
      <summary>Gets or sets the timestamp. In local time.</summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments.Value">
      <summary>Gets or sets the data value.</summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments.Vtq">
      <summary>Gets or sets a <see cref="T:OpcLabs.EasyOpc.DataAccess.DAVtq" /> (value, timestamp and quality).
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to the current object.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with the current object.</param>
      <returns>
        <c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments.GetHashCode">
      <summary>
            Serves as a hash function for a particular type. 
            </summary>
      <returns>A hash code for the current object.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments.ToString">
      <inheritdoc />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments.Assign(OpcLabs.EasyOpc.DataAccess.DAVtq,OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint)">
      <summary>
            Assigns <see cref="T:OpcLabs.EasyOpc.DataAccess.DAVtq" /> to the arguments.
            </summary>
      <param name="vtq">The value/timestamp/quality to be assigned to these arguments.</param>
      <param name="itemPoint">The item point that is the source of the data.</param>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments.AssignInput(System.Object,OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint)">
      <summary>
            Assigns an input to the arguments.
            </summary>
      <param name="input">The input to be assigned to these arguments.</param>
      <param name="itemPoint">The item point that is the source of the data.</param>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments.Equals(OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments)">
      <summary>
            Determines whether the specified <see cref="T:OpcLabs.BaseLib.Transfer.ResultArguments" /> is equal to the current object.
            </summary>
      <param name="other">The <see cref="T:OpcLabs.BaseLib.Transfer.ResultArguments" /> to compare with the current object.</param>
      <returns>
        <c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments.ReadXmlElement(System.Xml.XmlReader)">
      <inheritdoc cref="M:OpcLabs.BaseLib.Info.ReadXmlElement(System.Xml.XmlReader)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments.WriteXmlElement(System.Xml.XmlWriter)">
      <inheritdoc cref="M:OpcLabs.BaseLib.Info.WriteXmlElement(System.Xml.XmlWriter)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments.ResetQuality">
      <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments.Quality" /> back to its default.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments.ShouldSerializeQuality">
      <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments.Quality" /> is in its default state.
            </summary>
      <returns>
        <c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments.ResetTimestamp">
      <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments.Timestamp" /> back to its default.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments.ShouldSerializeTimestamp">
      <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments.Timestamp" /> is in its default state.
            </summary>
      <returns>
        <c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments.ResetTimestampLocal">
      <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments.TimestampLocal" /> back to its default.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments.ShouldSerializeTimestampLocal">
      <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments.TimestampLocal" /> is in its default state.
            </summary>
      <returns>
        <c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments.ResetVtq">
      <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments.Vtq" /> back to its default.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments.ShouldSerializeVtq">
      <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointArguments.Vtq" /> is in its default state.
            </summary>
      <returns>
        <c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments">
      <summary>
            Arguments used when reading OPC-DA item points.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments.#ctor">
      <summary>
            Creates a new instance of the object.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments.#ctor(OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments)">
      <summary>Initializes a new instance of the class, copying values from a given object.</summary>
      <param name="itemPointReadArguments">The object to be copied from.</param>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the class with serialized data.</summary>
      <param name="info">The SerializationInfo that holds the serialized object data.</param>
      <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments.op_Equality(OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments,OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments)">
      <summary>Determines whether the two objects are equal.</summary>
      <param name="left">First object to be compared.</param>
      <param name="right">Second object to be compared.</param>
      <returns>
        <c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments.op_Inequality(OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments,OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments)">
      <summary>Determines whether the two objects are not equal.</summary>
      <param name="left">First object to be compared.</param>
      <param name="right">Second object to be compared.</param>
      <returns>
        <c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments.Quality">
      <summary>Gets or sets the quality.</summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments.StatusInfo">
      <summary>
            Status information.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments.Timestamp">
      <summary>Gets or sets the timestamp. In UTC.</summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments.TimestampLocal">
      <summary>Gets or sets the timestamp. In local time.</summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments.Value">
      <summary>Gets or sets the data value.</summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments.Vtq">
      <summary>Gets or sets a <see cref="T:OpcLabs.EasyOpc.DataAccess.DAVtq" /> (value, timestamp and quality).
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments.Assign(OpcLabs.EasyOpc.DataAccess.OperationModel.DAVtqResult,OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint)">
      <summary>
            Assigns <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.DAVtqResult" /> to the arguments.
            </summary>
      <param name="vtqResult">The VTQ result to be assigned to these arguments.</param>
      <param name="itemPoint">The item point that is the source of the data.</param>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments.Assign(OpcLabs.BaseLib.OperationModel.ValueResult,OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint)">
      <summary>
            Assigns <see cref="T:OpcLabs.BaseLib.OperationModel.ValueResult" /> to the arguments.
            </summary>
      <param name="valueResult">The value result to be assigned to these arguments.</param>
      <param name="itemPoint">The item point that is the source of the data.</param>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments.Equals(OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments)">
      <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments" /> is equal to the current object.
            </summary>
      <param name="other">The <see cref="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments" /> to compare with the current object.</param>
      <returns>
        <c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to the current object.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with the current object.</param>
      <returns>
        <c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments.GetHashCode">
      <summary>
            Serves as a hash function for a particular type. 
            </summary>
      <returns>A hash code for the current object.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments.Clone">
      <inheritdoc cref="M:System.ICloneable.Clone" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments.ReadXmlElement(System.Xml.XmlReader)">
      <inheritdoc cref="M:OpcLabs.BaseLib.Info.ReadXmlElement(System.Xml.XmlReader)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments.WriteXmlElement(System.Xml.XmlWriter)">
      <inheritdoc cref="M:OpcLabs.BaseLib.Info.WriteXmlElement(System.Xml.XmlWriter)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments.DeepClone">
      <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
      <returns>A new object that is a deep copy of this instance.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments.ResetQuality">
      <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments.Quality" /> back to its default.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments.ShouldSerializeQuality">
      <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments.Quality" /> is in its default state.
            </summary>
      <returns>
        <c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments.ResetTimestamp">
      <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments.Timestamp" /> back to its default.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments.ShouldSerializeTimestamp">
      <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments.Timestamp" /> is in its default state.
            </summary>
      <returns>
        <c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments.ResetTimestampLocal">
      <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments.TimestampLocal" /> back to its default.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments.ShouldSerializeTimestampLocal">
      <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments.TimestampLocal" /> is in its default state.
            </summary>
      <returns>
        <c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments.ResetVtq">
      <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments.Vtq" /> back to its default.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments.ShouldSerializeVtq">
      <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments.Vtq" /> is in its default state.
            </summary>
      <returns>
        <c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments">
      <summary>
            Arguments used when subscribing to OPC-DA item points.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments.#ctor">
      <summary>
            Creates a new instance of the object.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments.#ctor(OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments)">
      <summary>Initializes a new instance of the class, copying values from a given object.</summary>
      <param name="itemPointSubscribeArguments">The object to be copied from.</param>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the class with serialized data.</summary>
      <param name="info">The SerializationInfo that holds the serialized object data.</param>
      <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments.op_Equality(OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments,OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments)">
      <summary>Determines whether the two objects are equal.</summary>
      <param name="left">First object to be compared.</param>
      <param name="right">Second object to be compared.</param>
      <returns>
        <c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments.op_Inequality(OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments,OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments)">
      <summary>Determines whether the two objects are not equal.</summary>
      <param name="left">First object to be compared.</param>
      <param name="right">Second object to be compared.</param>
      <returns>
        <c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments.Quality">
      <summary>Gets or sets the quality.</summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments.StatusInfo">
      <summary>
            Status information.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments.Timestamp">
      <summary>Gets or sets the timestamp. In UTC.</summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments.TimestampLocal">
      <summary>Gets or sets the timestamp. In local time.</summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments.Value">
      <summary>Gets or sets the data value.</summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments.Vtq">
      <summary>Gets or sets a <see cref="T:OpcLabs.EasyOpc.DataAccess.DAVtq" /> (value, timestamp and quality).
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments.Assign(OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemChangedEventArgs,OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint)">
      <summary>
            Assigns <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemChangedEventArgs" /> to the arguments.
            </summary>
      <param name="easyDAItemChangedEventArgs">The item changed event arguments to be assigned to these arguments.</param>
      <param name="itemPoint">The item point.</param>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments.Equals(OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments)">
      <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments" /> is equal to the current object.
            </summary>
      <param name="other">The <see cref="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments" /> to compare with the current object.</param>
      <returns>
        <c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to the current object.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with the current object.</param>
      <returns>
        <c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments.GetHashCode">
      <summary>
            Serves as a hash function for a particular type. 
            </summary>
      <returns>A hash code for the current object.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments.Clone">
      <inheritdoc cref="M:System.ICloneable.Clone" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments.ReadXmlElement(System.Xml.XmlReader)">
      <inheritdoc cref="M:OpcLabs.BaseLib.Info.ReadXmlElement(System.Xml.XmlReader)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments.WriteXmlElement(System.Xml.XmlWriter)">
      <inheritdoc cref="M:OpcLabs.BaseLib.Info.WriteXmlElement(System.Xml.XmlWriter)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments.DeepClone">
      <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
      <returns>A new object that is a deep copy of this instance.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments.ResetQuality">
      <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments.Quality" /> back to its default.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments.ShouldSerializeQuality">
      <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments.Quality" /> is in its default state.
            </summary>
      <returns>
        <c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments.ResetTimestamp">
      <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments.Timestamp" /> back to its default.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments.ShouldSerializeTimestamp">
      <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments.Timestamp" /> is in its default state.
            </summary>
      <returns>
        <c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments.ResetTimestampLocal">
      <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments.TimestampLocal" /> back to its default.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments.ShouldSerializeTimestampLocal">
      <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments.TimestampLocal" /> is in its default state.
            </summary>
      <returns>
        <c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments.ResetVtq">
      <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments.Vtq" /> back to its default.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments.ShouldSerializeVtq">
      <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeArguments.Vtq" /> is in its default state.
            </summary>
      <returns>
        <c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments">
      <summary>
            Arguments used when writing OPC-DA item points.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments.#ctor">
      <summary>
            Creates a new instance of the object.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments.#ctor(OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments)">
      <summary>Initializes a new instance of the class, copying values from a given object.</summary>
      <param name="itemPointWriteArguments">The object to be copied from.</param>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the class with serialized data.</summary>
      <param name="info">The SerializationInfo that holds the serialized object data.</param>
      <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments.op_Equality(OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments,OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments)">
      <summary>Determines whether the two objects are equal.</summary>
      <param name="first">First object to be compared.</param>
      <param name="second">Second object to be compared.</param>
      <returns>
        <c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments.op_Inequality(OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments,OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments)">
      <summary>Determines whether the two objects are not equal.</summary>
      <param name="first">First object to be compared.</param>
      <param name="second">Second object to be compared.</param>
      <returns>
        <c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments.Quality">
      <summary>Gets or sets the quality.</summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments.Timestamp">
      <summary>Gets or sets the timestamp. In UTC.</summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments.TimestampLocal">
      <summary>Gets or sets the timestamp. In local time.</summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments.Value">
      <summary>Gets or sets the data value.</summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments.Vtq">
      <summary>Gets or sets a <see cref="T:OpcLabs.EasyOpc.DataAccess.DAVtq" /> (value, timestamp and quality).
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments.Clone">
      <inheritdoc cref="M:System.ICloneable.Clone" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments.Equals(OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments)">
      <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments" /> is equal to the current object.
            </summary>
      <param name="other">The <see cref="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments" /> to compare with the current object.</param>
      <returns>
        <c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments.Equals(System.Object)">
      <inheritdoc cref="M:System.Object.Equals(System.Object)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments.GetHashCode">
      <inheritdoc cref="M:System.Object.GetHashCode" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments.Retrieve(OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemArguments,OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint,System.Object)">
      <summary>
            Retrieves <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemArguments" /> from the arguments.
            </summary>
      <param name="itemArguments">The write arguments base to be retrieved from these arguments.</param>
      <param name="itemPoint">The item point.</param>
      <param name="input">The input retrieved.</param>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments.DeepClone">
      <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
      <returns>A new object that is a deep copy of this instance.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments.ResetQuality">
      <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments.Quality" /> back to its default.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments.ShouldSerializeQuality">
      <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments.Quality" /> is in its default state.
            </summary>
      <returns>
        <c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments.ResetTimestamp">
      <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments.Timestamp" /> back to its default.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments.ShouldSerializeTimestamp">
      <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments.Timestamp" /> is in its default state.
            </summary>
      <returns>
        <c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments.ResetTimestampLocal">
      <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments.TimestampLocal" /> back to its default.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments.ShouldSerializeTimestampLocal">
      <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments.TimestampLocal" /> is in its default state.
            </summary>
      <returns>
        <c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments.ResetVtq">
      <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments.Vtq" /> back to its default.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments.ShouldSerializeVtq">
      <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments.Vtq" /> is in its default state.
            </summary>
      <returns>
        <c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPointReadArguments">
      <summary>
            Arguments used when reading (or subscribing to) OPC-DA property points.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPointReadArguments.#ctor">
      <summary>
            Creates a new instance of the object.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPointReadArguments.#ctor(OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPointReadArguments)">
      <summary>Initializes a new instance of the class, copying values from a given object.</summary>
      <param name="propertyPointReadArguments">The object to be copied from.</param>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPointReadArguments.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the class with serialized data.</summary>
      <param name="info">The SerializationInfo that holds the serialized object data.</param>
      <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPointReadArguments.op_Equality(OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPointReadArguments,OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPointReadArguments)">
      <summary>Determines whether the two objects are equal.</summary>
      <param name="left">First object to be compared.</param>
      <param name="right">Second object to be compared.</param>
      <returns>
        <c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPointReadArguments.op_Inequality(OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPointReadArguments,OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPointReadArguments)">
      <summary>Determines whether the two objects are not equal.</summary>
      <param name="left">First object to be compared.</param>
      <param name="right">Second object to be compared.</param>
      <returns>
        <c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPointReadArguments.Value">
      <summary>
            Gets a generic Object value that is a successful result of the operation.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPointReadArguments.Assign(OpcLabs.BaseLib.OperationModel.ValueResult,OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint)">
      <summary>
            Assigns <see cref="T:OpcLabs.BaseLib.OperationModel.ValueResult" /> to the arguments.
            </summary>
      <param name="valueResult">The value result to be assigned to these arguments.</param>
      <param name="propertyPoint">The property point that is the source of the data.</param>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPointReadArguments.Equals(OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPointReadArguments)">
      <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPointReadArguments" /> is equal to the current object.
            </summary>
      <param name="other">The <see cref="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPointReadArguments" /> to compare with the current object.</param>
      <returns>
        <c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPointReadArguments.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to the current object.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with the current object.</param>
      <returns>
        <c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPointReadArguments.GetHashCode">
      <summary>
            Serves as a hash function for a particular type. 
            </summary>
      <returns>A hash code for the current object.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPointReadArguments.ToString">
      <inheritdoc />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPointReadArguments.Clone">
      <inheritdoc cref="M:System.ICloneable.Clone" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPointReadArguments.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPointReadArguments.ReadXmlElement(System.Xml.XmlReader)">
      <inheritdoc cref="M:OpcLabs.BaseLib.Info.ReadXmlElement(System.Xml.XmlReader)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPointReadArguments.WriteXmlElement(System.Xml.XmlWriter)">
      <inheritdoc cref="M:OpcLabs.BaseLib.Info.WriteXmlElement(System.Xml.XmlWriter)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPointReadArguments.AssignInput(System.Object,OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint)">
      <summary>
            Assigns an input to the arguments.
            </summary>
      <param name="input">The input to be assigned to these arguments.</param>
      <param name="propertyPoint">The property point that is the source of the data.</param>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPointReadArguments.DeepClone">
      <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
      <returns>A new object that is a deep copy of this instance.</returns>
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadParameters">
      <summary>
            Parameters for reading OPC-DA item points.
            </summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadParameters.DefaultAsString">
      <summary>
            Default <see cref="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadParameters" />, expressed as string.
            </summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadParameters.DefaultValueOnly">
      <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadParameters.ValueOnly" /> property. Equals to <c>false</c>.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadParameters.#ctor">
      <summary>
            Creates a new instance of the object.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadParameters.#ctor(OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadParameters)">
      <summary>
            Creates a new instance of the object, from <see cref="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadParameters" />.
            </summary>
      <param name="parameters">The parameters to use.</param>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadParameters.#ctor(OpcLabs.EasyOpc.DataAccess.DAReadParameters)">
      <summary>
            Creates a new instance of the object, from <see cref="T:OpcLabs.EasyOpc.DataAccess.DAReadParameters" />.
            </summary>
      <param name="readParameters">The read parameters to use.</param>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadParameters.#ctor(OpcLabs.EasyOpc.DataAccess.DAReadParameters,System.Boolean)">
      <summary>
            Creates a new instance of the object, from <see cref="T:OpcLabs.EasyOpc.DataAccess.DAReadParameters" />, and "value only" indicator.
            </summary>
      <param name="readParameters">The read parameters to use.</param>
      <param name="valueOnly">Determines whether only the value part will be read; error if the value is not available.</param>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadParameters.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the class with serialized data.</summary>
      <param name="info">The SerializationInfo that holds the serialized object data.</param>
      <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadParameters.CacheSource">
      <summary>
            Item point read parameters that specify the cache data source.
            </summary>
      <remarks>
            OPC reads will be fulfilled from the cache in the OPC server.
            </remarks>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadParameters.Default">
      <summary>
            Default item point read parameters.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadParameters.DeviceSource">
      <summary>
            Item point read parameters that specify the device data source.
            </summary>
      <remarks>
            OPC reads will be fulfilled from the device by the OPC server.
            </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadParameters.op_Equality(OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadParameters,OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadParameters)">
      <summary>Determines whether the two objects are equal.</summary>
      <param name="left">First object to be compared.</param>
      <param name="right">Second object to be compared.</param>
      <returns>
        <c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadParameters.op_Inequality(OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadParameters,OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadParameters)">
      <summary>Determines whether the two objects are not equal.</summary>
      <param name="left">First object to be compared.</param>
      <param name="right">Second object to be compared.</param>
      <returns>
        <c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadParameters.ValueOnly">
      <summary>
            Determines whether only the value part will be read; error if the value is not available.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadParameters.Equals(OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadParameters)">
      <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadParameters" /> is equal to the current object.
            </summary>
      <param name="other">The <see cref="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadParameters" /> to compare with the current object.</param>
      <returns>
        <c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadParameters.Equals(System.Object)">
      <inheritdoc cref="M:System.Object.Equals(System.Object)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadParameters.GetHashCode">
      <inheritdoc cref="M:System.Object.GetHashCode" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadParameters.ToString">
      <inheritdoc cref="M:System.Object.ToString" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadParameters.Clone">
      <inheritdoc />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadParameters.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadParameters.ReadXmlElement(System.Xml.XmlReader)">
      <inheritdoc cref="M:OpcLabs.BaseLib.Info.ReadXmlElement(System.Xml.XmlReader)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadParameters.WriteXmlElement(System.Xml.XmlWriter)">
      <inheritdoc cref="M:OpcLabs.BaseLib.Info.WriteXmlElement(System.Xml.XmlWriter)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadParameters.DeepClone">
      <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
      <returns>A new object that is a deep copy of this instance.</returns>
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeParameters">
      <summary>
            Parameters for subscribing to OPC-DA item points.
            </summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeParameters.DefaultAsString">
      <summary>
            Default <see cref="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeParameters" />, expressed as string.
            </summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeParameters.DefaultRequestedUpdateRate">
      <summary>
            Default requested update rate. Equals to 1 second.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeParameters.Default">
      <summary>
            Default item point subscribe parameters.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeParameters.Fast">
      <summary>
            Fast item point subscribe parameters.
            </summary>
      <remarks>
            The requested update rate is 200 milliseconds.
            </remarks>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeParameters.Inactive">
      <summary>
            Inactive item point subscribe parameters.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeParameters.Slow">
      <summary>
            Slow item point subscribe parameters.
            </summary>
      <remarks>
            The requested update rate is 5 seconds.
            </remarks>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeParameters.VeryFast">
      <summary>
            Very fast item point subscribe parameters.
            </summary>
      <remarks>
            The requested update rate is 50 milliseconds.
            </remarks>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeParameters.VerySlow">
      <summary>
            Very slow item point subscribe parameters.
            </summary>
      <remarks>
            The requested update rate is 20 seconds.
            </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeParameters.op_Equality(OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeParameters,OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeParameters)">
      <summary>Determines whether the two objects are equal.</summary>
      <param name="left">First object to be compared.</param>
      <param name="right">Second object to be compared.</param>
      <returns>
        <c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeParameters.op_Inequality(OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeParameters,OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeParameters)">
      <summary>Determines whether the two objects are not equal.</summary>
      <param name="left">First object to be compared.</param>
      <param name="right">Second object to be compared.</param>
      <returns>
        <c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeParameters.#ctor">
      <summary>
            Creates a new instance of the object.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeParameters.#ctor(OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeParameters)">
      <summary>
            Creates a new instance of the object, from <see cref="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeParameters" />.
            </summary>
      <param name="parameters">The parameters to use.</param>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeParameters.#ctor(OpcLabs.EasyOpc.DataAccess.DAGroupParameters)">
      <summary>
            Creates a new instance of the object, from <see cref="T:OpcLabs.EasyOpc.DataAccess.DAGroupParameters" />.
            </summary>
      <param name="groupParameters">The group parameters to use.</param>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeParameters.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the class with serialized data.</summary>
      <param name="info">The SerializationInfo that holds the serialized object data.</param>
      <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeParameters.RequestedUpdateRate">
      <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.DAGroupParameters.RequestedUpdateRate" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeParameters.Equals(OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeParameters)">
      <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeParameters" /> is equal to the current object.
            </summary>
      <param name="other">The <see cref="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeParameters" /> to compare with the current object.</param>
      <returns>
        <c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeParameters.Equals(System.Object)">
      <inheritdoc cref="M:System.Object.Equals(System.Object)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeParameters.GetHashCode">
      <inheritdoc cref="M:System.Object.GetHashCode" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeParameters.Clone">
      <inheritdoc />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeParameters.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeParameters.DeepClone">
      <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
      <returns>A new object that is a deep copy of this instance.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointSubscribeParameters.GetRequestedUpdateRateDefault">
      <inheritdoc />
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteParameters">
      <summary>
            Parameters for writing OPC-DA item points.
            </summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteParameters.DefaultAsString">
      <summary>
            Default <see cref="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteParameters" />, expressed as string.
            </summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteParameters.DefaultValueOnly">
      <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteParameters.ValueOnly" /> property. Equals to <c>true</c>.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteParameters.#ctor">
      <summary>
            Creates a new instance of the object.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteParameters.#ctor(OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteParameters)">
      <summary>
            Creates a new instance of the object, from <see cref="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteParameters" />.
            </summary>
      <param name="parameters">The parameters to use.</param>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteParameters.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the class with serialized data.</summary>
      <param name="info">The SerializationInfo that holds the serialized object data.</param>
      <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteParameters.Default">
      <summary>
            Default item point write parameters.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteParameters.op_Equality(OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteParameters,OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteParameters)">
      <summary>Determines whether the two objects are equal.</summary>
      <param name="left">First object to be compared.</param>
      <param name="right">Second object to be compared.</param>
      <returns>
        <c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteParameters.op_Inequality(OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteParameters,OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteParameters)">
      <summary>Determines whether the two objects are not equal.</summary>
      <param name="left">First object to be compared.</param>
      <param name="right">Second object to be compared.</param>
      <returns>
        <c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteParameters.ValueOnly">
      <summary>
            Determines whether only the value part will be written.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteParameters.Equals(OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteParameters)">
      <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteParameters" /> is equal to the current object.
            </summary>
      <param name="other">The <see cref="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteParameters" /> to compare with the current object.</param>
      <returns>
        <c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteParameters.Equals(System.Object)">
      <inheritdoc cref="M:System.Object.Equals(System.Object)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteParameters.GetHashCode">
      <inheritdoc cref="M:System.Object.GetHashCode" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteParameters.ToString">
      <inheritdoc cref="M:System.Object.ToString" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteParameters.Clone">
      <inheritdoc />
    </member>
    <member name="E:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteParameters.PropertyChanged">
      <summary>
            Handler for <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteParameters.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteParameters.ReadStringList(System.Collections.Generic.IList{System.String})">
      <inheritdoc />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteParameters.WriteStringList(System.Collections.Generic.IList{System.String},System.Boolean)">
      <inheritdoc />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteParameters.ReadXmlElement(System.Xml.XmlReader)">
      <inheritdoc cref="M:OpcLabs.BaseLib.Info.ReadXmlElement(System.Xml.XmlReader)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteParameters.WriteXmlElement(System.Xml.XmlWriter)">
      <inheritdoc cref="M:OpcLabs.BaseLib.Info.WriteXmlElement(System.Xml.XmlWriter)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteParameters.DeepClone">
      <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
      <returns>A new object that is a deep copy of this instance.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteParameters.OnPropertyChanged(System.String)">
      <summary>
            Infrastructure.
            </summary>
      <param name="propertyName">The name of the property that has changed.</param>
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint">
      <summary>
            A connectivity point that represents an OPC Data Access (OPC-DA) item.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint.#ctor">
      <summary>
            Initializes a new instance of the class, with default data.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint.#ctor(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DAItemDescriptor)">
      <summary>
            Initializes a new instance of the class, with given server and item descriptors.
            </summary>
      <param name="serverDescriptor">The point's server descriptor.</param>
      <param name="itemDescriptor">The point's item descriptor.</param>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint.#ctor(OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint)">
      <summary>Initializes a new instance of the class with a copy of another instance.</summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the class with serialized data.</summary>
      <param name="info">The SerializationInfo that holds the serialized object data.</param>
      <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint.DefaultItemDescriptor">
      <summary>
            Default item descriptor.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint.op_Equality(OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint,OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint)">
      <summary>Determines whether the two objects are equal.</summary>
      <param name="first">First object to be compared.</param>
      <param name="second">Second object to be compared.</param>
      <returns>
        <c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint.op_Inequality(OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint,OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint)">
      <summary>Determines whether the two objects are not equal.</summary>
      <param name="first">First object to be compared.</param>
      <param name="second">Second object to be compared.</param>
      <returns>
        <c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint.op_Explicit(OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint)~OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemArguments">
      <summary>
            Converts item point to corresponding item arguments.
            </summary>
      <param name="itemPoint">The attribute point to be converted.</param>
      <returns>The item arguments that correspond to the item point. <b>null</b> if the item point
            passed in was <b>null</b>.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint.ToDAItemArguments(OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint)">
      <summary>
            Converts item point to corresponding item arguments.
            </summary>
      <param name="itemPoint">The attribute point to be converted.</param>
      <returns>The item arguments that correspond to the item point. <b>null</b> if the item point
            passed in was <b>null</b>.</returns>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint.ItemDescriptor">
      <summary>Gets or sets the OPC item descriptor.</summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint.Equals(OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint)">
      <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint" /> is equal to the current object.
            </summary>
      <param name="other">The <see cref="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint" /> to compare with the current object.</param>
      <returns>
        <c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint.Equals(System.Object)">
      <inheritdoc cref="M:System.Object.Equals(System.Object)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint.GetHashCode">
      <inheritdoc cref="M:System.Object.GetHashCode" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint.ToString">
      <inheritdoc cref="M:System.Object.ToString" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint.Clone">
      <inheritdoc />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint.ToString(System.String,System.IFormatProvider)">
      <inheritdoc />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint.ReadStringList(System.Collections.Generic.IList{System.String})">
      <inheritdoc />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint.WriteStringList(System.Collections.Generic.IList{System.String},System.Boolean)">
      <inheritdoc />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint.ReadXmlElement(System.Xml.XmlReader)">
      <inheritdoc cref="M:OpcLabs.BaseLib.Info.ReadXmlElement(System.Xml.XmlReader)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint.WriteXmlElement(System.Xml.XmlWriter)">
      <inheritdoc cref="M:OpcLabs.BaseLib.Info.WriteXmlElement(System.Xml.XmlWriter)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint.ResetItemDescriptor">
      <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint.ItemDescriptor" /> back to its default.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint.ShouldSerializeItemDescriptor">
      <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint.ItemDescriptor" /> is in its default state.
            </summary>
      <returns>
        <c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint.DeepClone">
      <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
      <returns>A new object that is a deep copy of this instance.</returns>
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPoint">
      <summary>
            Base class for OPC-DA connectivity points.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPoint.#ctor(OpcLabs.EasyOpc.DataAccess.Connectivity.DAPoint)">
      <summary>Initializes a new instance of the class, copying values from a given object.</summary>
      <param name="daPoint">The object to be copied from.</param>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPoint.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the class with serialized data.</summary>
      <param name="info">The SerializationInfo that holds the serialized object data.</param>
      <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPoint.#ctor(OpcLabs.EasyOpc.ServerDescriptor)">
      <summary>
            Initializes a new instance of the class, with given server descriptor.
            </summary>
      <param name="serverDescriptor">The point's server descriptor.</param>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPoint.DefaultServerDescriptor">
      <summary>
            Default server descriptor.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPoint.op_Equality(OpcLabs.EasyOpc.DataAccess.Connectivity.DAPoint,OpcLabs.EasyOpc.DataAccess.Connectivity.DAPoint)">
      <summary>Determines whether the two objects are equal.</summary>
      <param name="first">First object to be compared.</param>
      <param name="second">Second object to be compared.</param>
      <returns>
        <c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPoint.op_Inequality(OpcLabs.EasyOpc.DataAccess.Connectivity.DAPoint,OpcLabs.EasyOpc.DataAccess.Connectivity.DAPoint)">
      <summary>Determines whether the two objects are not equal.</summary>
      <param name="first">First object to be compared.</param>
      <param name="second">Second object to be compared.</param>
      <returns>
        <c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPoint.ServerDescriptor">
      <summary>Gets or sets the OPC server descriptor that is an argument to the operation.</summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPoint.Equals(OpcLabs.EasyOpc.DataAccess.Connectivity.DAPoint)">
      <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPoint" /> is equal to the current object.
            </summary>
      <param name="other">The <see cref="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPoint" /> to compare with the current object.</param>
      <returns>
        <c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPoint.Equals(System.Object)">
      <inheritdoc cref="M:System.Object.Equals(System.Object)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPoint.GetHashCode">
      <inheritdoc cref="M:System.Object.GetHashCode" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPoint.ToString">
      <inheritdoc cref="M:System.Object.ToString" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPoint.ToString(System.String)">
      <summary>
            Converts the value of the current object to its equivalent string representation using the specified format.
            </summary>
      <param name="format">A standard or custom format string (see Remarks).</param>
      <returns>A string representation of value of the current object as specified by <paramref name="format" />.</returns>
      <remarks>
        <para>
            The <paramref name="format" /> parameter should contain either a standard format specifier or a custom format 
            pattern that defines the format of the returned string. If <paramref name="format" /> is <c>null</c> or an empty 
            string, the general format specifier, 'G', is used.</para>
        <para>
            This method uses formatting information derived from the current culture.</para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPoint.ToString(System.String,System.IFormatProvider)">
      <inheritdoc />
    </member>
    <member name="E:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPoint.PropertyChanged">
      <summary>
            Handler for <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPoint.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPoint.ReadStringList(System.Collections.Generic.IList{System.String})">
      <inheritdoc />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPoint.WriteStringList(System.Collections.Generic.IList{System.String},System.Boolean)">
      <inheritdoc />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPoint.OnPropertyChanged(System.String)">
      <summary>
            Infrastructure.
            </summary>
      <param name="propertyName">The name of the property that has changed.</param>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPoint.ReadXmlElement(System.Xml.XmlReader)">
      <inheritdoc cref="M:OpcLabs.BaseLib.Info.ReadXmlElement(System.Xml.XmlReader)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPoint.WriteXmlElement(System.Xml.XmlWriter)">
      <inheritdoc cref="M:OpcLabs.BaseLib.Info.WriteXmlElement(System.Xml.XmlWriter)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPoint.ResetServerDescriptor">
      <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPoint.ServerDescriptor" /> back to its default.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPoint.ShouldSerializeServerDescriptor">
      <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPoint.ServerDescriptor" /> is in its default state.
            </summary>
      <returns>
        <c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint">
      <summary>
            A connectivity point that represents an OPC Data Access (OPC-DA) property.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint.#ctor">
      <summary>
            Initializes a new instance of the class, with default data.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint.#ctor(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor)">
      <summary>
            Initializes a new instance of the class, with given server, node and property descriptors.
            </summary>
      <param name="serverDescriptor">The point's server descriptor.</param>
      <param name="nodeDescriptor">The point's node descriptor.</param>
      <param name="propertyDescriptor">The point's property descriptor.</param>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint.#ctor(OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint)">
      <summary>Initializes a new instance of the class with a copy of another instance.</summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the class with serialized data.</summary>
      <param name="info">The SerializationInfo that holds the serialized object data.</param>
      <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint.DefaultNodeDescriptor">
      <summary>
            Default node descriptor.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint.DefaultPropertyDescriptor">
      <summary>
            Default property descriptor.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint.op_Equality(OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint,OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint)">
      <summary>Determines whether the two objects are equal.</summary>
      <param name="first">First object to be compared.</param>
      <param name="second">Second object to be compared.</param>
      <returns>
        <c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint.op_Inequality(OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint,OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint)">
      <summary>Determines whether the two objects are not equal.</summary>
      <param name="first">First object to be compared.</param>
      <param name="second">Second object to be compared.</param>
      <returns>
        <c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint.AllowReadModifyAndWrite">
      <inheritdoc cref="P:OpcLabs.BaseLib.Connectivity.Point.CommonPoint.AllowReadModifyAndWrite" />
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint.NodeDescriptor">
      <summary>Gets or sets the OPC node descriptor.</summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint.PropertyDescriptor">
      <summary>Gets or sets the OPC property descriptor.</summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint.Equals(OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint)">
      <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint" /> is equal to the current object.
            </summary>
      <param name="other">The <see cref="T:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint" /> to compare with the current object.</param>
      <returns>
        <c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint.Equals(System.Object)">
      <inheritdoc cref="M:System.Object.Equals(System.Object)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint.GetHashCode">
      <inheritdoc cref="M:System.Object.GetHashCode" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint.ToString">
      <inheritdoc cref="M:System.Object.ToString" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint.Clone">
      <inheritdoc />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint.ToString(System.String,System.IFormatProvider)">
      <inheritdoc />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint.ReadStringList(System.Collections.Generic.IList{System.String})">
      <inheritdoc />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint.WriteStringList(System.Collections.Generic.IList{System.String},System.Boolean)">
      <inheritdoc />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint.ReadXmlElement(System.Xml.XmlReader)">
      <inheritdoc cref="M:OpcLabs.BaseLib.Info.ReadXmlElement(System.Xml.XmlReader)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint.WriteXmlElement(System.Xml.XmlWriter)">
      <inheritdoc cref="M:OpcLabs.BaseLib.Info.WriteXmlElement(System.Xml.XmlWriter)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint.ResetNodeDescriptor">
      <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint.NodeDescriptor" /> back to its default.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint.ShouldSerializeNodeDescriptor">
      <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint.NodeDescriptor" /> is in its default state.
            </summary>
      <returns>
        <c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint.ResetPropertyDescriptor">
      <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint.PropertyDescriptor" /> back to its default.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint.ShouldSerializePropertyDescriptor">
      <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint.PropertyDescriptor" /> is in its default state.
            </summary>
      <returns>
        <c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint.DeepClone">
      <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
      <returns>A new object that is a deep copy of this instance.</returns>
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.EasyDAClientManagementCore">
      <summary>
            The core part of the <c>EasyDAClientManagement</c> object.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientManagementCore.#ctor">
      <summary>Initializes a new instance of the class.</summary>
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientManagementCore.#ctor(OpcLabs.EasyOpc.DataAccess.EasyDAClientManagementCore)">
      <param name="clientManagement">Client management object to copy from.</param>
      <exception cref="T:System.ArgumentNullException">
        <para>
             A <c>null</c> reference (<c>Nothing</c> in Visual Basic) is passed to a method that does not accept it as a valid argument.</para>
        <para>
             This is a usage error, i.e. it will never occur (the exception will not be thrown) in a correctly written program. Your code should not catch this exception.</para>
      </exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientManagementCore.#ctor(System.ComponentModel.IContainer)">
      <summary>
            Required for Windows.Forms Class Composition Designer support
            </summary>
      <param name="container">The component container to which the new instance will be added.</param>
      <exception cref="T:System.ArgumentNullException">
        <para>
             A <c>null</c> reference (<c>Nothing</c> in Visual Basic) is passed to a method that does not accept it as a valid argument.</para>
        <para>
             This is a usage error, i.e. it will never occur (the exception will not be thrown) in a correctly written program. Your code should not catch this exception.</para>
      </exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientManagementCore.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the class with serialized data.</summary>
      <param name="info">The SerializationInfo that holds the serialized object data.</param>
      <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
      <exception cref="T:System.ArgumentNullException">
        <para>
             A <c>null</c> reference (<c>Nothing</c> in Visual Basic) is passed to a method that does not accept it as a valid argument.</para>
        <para>
             This is a usage error, i.e. it will never occur (the exception will not be thrown) in a correctly written program. Your code should not catch this exception.</para>
      </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
        <para>
             An error has occurred during serialization or deserialization.</para>
        <para>
             This is an operation error that depends on factors external to your program, and thus cannot be always avoided. Your code must handle it appropriately.</para>
      </exception>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientManagementCore.AdaptableParameters">
      <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.AdaptableParameters" />
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientManagementCore.ServiceProviderEndpointDescriptor">
      <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.ServiceProviderEndpointDescriptor" />
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientManagementCore.SharedParameters">
      <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.SharedParameters" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientManagementCore.Clone">
      <inheritdoc cref="M:System.ICloneable.Clone" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientManagementCore.BeginInit">
      <inheritdoc cref="M:System.ComponentModel.ISupportInitialize.BeginInit" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientManagementCore.EndInit">
      <inheritdoc cref="M:System.ComponentModel.ISupportInitialize.EndInit" />
    </member>
    <member name="E:OpcLabs.EasyOpc.DataAccess.EasyDAClientManagementCore.LogEntry">
      <summary>
            Raised for loggable entries originating in the OPC-DA client engine and the EasyDAClient component.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientManagementCore.DeepClone">
      <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
      <returns>A new object that is a deep copy of this instance.</returns>
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientManagementCore.ResetAdaptableParameters">
      <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientManagementCore.AdaptableParameters" /> back to its default.
            </summary>
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientManagementCore.ShouldSerializeAdaptableParameters">
      <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientManagementCore.AdaptableParameters" /> is in its default state.
            </summary>
      <returns>
        <c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientManagementCore.ResetServiceProviderEndpointDescriptor">
      <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientManagementCore.ServiceProviderEndpointDescriptor" /> back to its default.
            </summary>
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientManagementCore.ShouldSerializeServiceProviderEndpointDescriptor">
      <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientManagementCore.ServiceProviderEndpointDescriptor" /> is in its default state.
            </summary>
      <returns>
        <c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientManagementCore.ResetSharedParameters">
      <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientManagementCore.SharedParameters" /> back to its default.
            </summary>
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientManagementCore.ShouldSerializeSharedParameters">
      <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientManagementCore.SharedParameters" /> is in its default state.
            </summary>
      <returns>
        <c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.EasyDAClientSelector">
      <summary>
            Describes how to select the <see cref="T:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore" /> object.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientSelector.#ctor">
      <overloads>
        <summary>
            Initializes a new instance of the class.
            </summary>
      </overloads>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientSelector.#ctor(OpcLabs.EasyOpc.DataAccess.EasyDAClientSelector)">
      <summary>
            Initializes a new instance of the class.
            </summary>
      <param name="selector">Selector to copy from.</param>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientSelector.#ctor(System.String)">
      <summary>
            Initializes a new instance of the class.
            </summary>
      <param name="differentiator"> An arbitrary string that differentiates the selected client from others with the 
            same parameters.</param>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientSelector.#ctor(System.String,System.Boolean)">
      <summary>
            Initializes a new instance of the class.
            </summary>
      <param name="differentiator"> An arbitrary string that differentiates the selected client from others with the 
            same parameters.</param>
      <param name="isolated">Determines whether the client component selected should operate isolated from other client 
            components.</param>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientSelector.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the class.
            </summary>
      <summary>Initializes a new instance of the class with serialized data.</summary>
      <param name="info">The SerializationInfo that holds the serialized object data.</param>
      <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientSelector.Default">
      <summary>
            Default client selector.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientSelector.op_Equality(OpcLabs.EasyOpc.DataAccess.EasyDAClientSelector,OpcLabs.EasyOpc.DataAccess.EasyDAClientSelector)">
      <summary>Determines whether the two objects are equal.</summary>
      <param name="left">First object to be compared.</param>
      <param name="right">Second object to be compared.</param>
      <returns>
        <c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientSelector.op_Inequality(OpcLabs.EasyOpc.DataAccess.EasyDAClientSelector,OpcLabs.EasyOpc.DataAccess.EasyDAClientSelector)">
      <summary>Determines whether the two objects are not equal.</summary>
      <param name="left">First object to be compared.</param>
      <param name="right">Second object to be compared.</param>
      <returns>
        <c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientSelector.Equals(OpcLabs.EasyOpc.DataAccess.EasyDAClientSelector)">
      <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.DataAccess.EasyDAClientSelector" /> is equal to the current object.
            </summary>
      <param name="other">The <see cref="T:OpcLabs.EasyOpc.DataAccess.EasyDAClientSelector" /> to compare with the current object.</param>
      <returns>
        <c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientSelector.Equals(System.Object)">
      <inheritdoc cref="M:System.Object.Equals(System.Object)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientSelector.GetHashCode">
      <inheritdoc cref="M:System.Object.GetHashCode" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientSelector.ToString">
      <inheritdoc cref="M:System.Object.ToString" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientSelector.Clone">
      <inheritdoc cref="M:System.ICloneable.Clone" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientSelector.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientSelector.OpcLabs#EasyOpc#DataAccess#ComTypes#_EasyDAClientSelector#DisplayString">
      <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClientSelector.DisplayString" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientSelector.DeepClone">
      <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
      <returns>A new object that is a deep copy of this instance.</returns>
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.Internal.EasyDAClientCoreProvider">
      <exclude />
      <summary>
            Provides <see cref="T:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore" /> objects according to specified criteria.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Internal.EasyDAClientCoreProvider.Instance">
      <summary>
            A single instance of the provider.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Internal.EasyDAClientCoreProvider.CreateObject(System.ValueTuple{OpcLabs.EasyOpc.DataAccess.EasyDAClientSelector,OpcLabs.BaseLib.Licensing.LicensingContext,OpcLabs.BaseLib.Aliasing.Internal.IAliasProvider})">
      <inheritdoc cref="M:OpcLabs.BaseLib.Abstract.ParameterizedObjectProvider`2.CreateObject(`1)" />
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.Internal.LicensingEasyDAClient">
      <exclude />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Internal.LicensingEasyDAClient.#ctor(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.DataAccess.IEasyDAClient)">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Internal.LicensingEasyDAClient.ReadMultipleItems(OpcLabs.EasyOpc.DataAccess.OperationModel.DAReadItemArguments[])">
      <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.ReadMultipleItems(OpcLabs.EasyOpc.DataAccess.OperationModel.DAReadItemArguments[])" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Internal.LicensingEasyDAClient.GetMultiplePropertyValues(OpcLabs.EasyOpc.DataAccess.OperationModel.DAPropertyArguments[])">
      <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.GetMultiplePropertyValues(OpcLabs.EasyOpc.DataAccess.OperationModel.DAPropertyArguments[])" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Internal.LicensingEasyDAClient.WriteMultipleItems(OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemVtqArguments[])">
      <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.WriteMultipleItems(OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemVtqArguments[])" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Internal.LicensingEasyDAClient.WriteMultipleItemValues(OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemValueArguments[])">
      <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.WriteMultipleItemValues(OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemValueArguments[])" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Internal.LicensingEasyDAClient.BrowseServers(System.String,OpcLabs.EasyOpc.OpcTechnologies)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.BrowseServers(System.String,OpcLabs.EasyOpc.OpcTechnologies)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Internal.LicensingEasyDAClient.BrowseNodes(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DABrowseParameters)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.BrowseNodes(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DABrowseParameters)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Internal.LicensingEasyDAClient.BrowseAccessPaths(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.BrowseAccessPaths(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Internal.LicensingEasyDAClient.BrowseProperties(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.BrowseProperties(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)" />
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Internal.LicensingEasyDAClient.LicenseInfo">
      <inheritdoc cref="P:OpcLabs.BaseLib.ILicenseInfoProvider.LicenseInfo" />
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.Internal.NamespaceDoc">
      <summary>
            This namespace contains internal classes that facilitate easy work with OPC Data Access.
            </summary>
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemSource">
      <summary>
            A client mapping source that represents OPC Data Access item.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemSource.#ctor(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DAItemDescriptor)">
      <summary>
            Initializes a new instance of the class, with given OPC server and item descriptors.
            </summary>
      <param name="serverDescriptor">The OPC server involved in the operation.</param>
      <param name="itemDescriptor">The OPC item involved in the operation.</param>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemSource.#ctor(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DAItemDescriptor,OpcLabs.EasyOpc.DataAccess.DAGroupParameters)">
      <summary>
            Initializes a new instance of the class, with given OPC server and item descriptors, and subscription (OPC group)
            parameters.
            </summary>
      <param name="serverDescriptor">The OPC server involved in the operation.</param>
      <param name="itemDescriptor">The OPC item involved in the operation.</param>
      <param name="groupParameters">An object containing subscription parameters, such as the requested update rate.
            </param>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemSource.#ctor(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DAItemDescriptor,OpcLabs.EasyOpc.DataAccess.DAReadParameters)">
      <summary>
            Initializes a new instance of the class, with given OPC server and item descriptors, and read parameters.
            </summary>
      <param name="serverDescriptor">The OPC server involved in the operation.</param>
      <param name="itemDescriptor">The OPC item involved in the operation.</param>
      <param name="readParameters">The read parameters (such as data source or value age).</param>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemSource.#ctor(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DAItemDescriptor,OpcLabs.EasyOpc.DataAccess.DAGroupParameters,OpcLabs.EasyOpc.DataAccess.DAReadParameters)">
      <summary>
            Initializes a new instance of the class, with given OPC server and item descriptors, subscription (OPC group) and
            read parameters.
            </summary>
      <param name="serverDescriptor">The OPC server involved in the operation.</param>
      <param name="itemDescriptor">The OPC item involved in the operation.</param>
      <param name="groupParameters">An object containing subscription parameters, such as the requested update rate.
            </param>
      <param name="readParameters">The read parameters (such as data source or value age).</param>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemSource.op_Equality(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemSource,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemSource)">
      <summary>Determines whether the two objects are equal.</summary>
      <param name="left">First object to be compared.</param>
      <param name="right">Second object to be compared.</param>
      <returns>
        <c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemSource.op_Inequality(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemSource,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemSource)">
      <summary>Determines whether the two objects are not equal.</summary>
      <param name="left">First object to be compared.</param>
      <param name="right">Second object to be compared.</param>
      <returns>
        <c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemSource.ItemDescriptor">
      <summary>
            The OPC item involved in the operation.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemSource.GroupParameters">
      <summary>
            An object containing subscription parameters, such as the requested update rate.
            </summary>
      <remarks>Can be null as long as the source does not participate in any subscription operation.</remarks>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemSource.ReadParameters">
      <summary>
            The read parameters (such as data source or value age).
            </summary>
      <remarks>Can be null as long as the source does not participate in any subscription operation.</remarks>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemSource.SubscriptionCount">
      <summary>
            Gets the number of subscriptions tied to this source.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemSource.Equals(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemSource)">
      <summary>
            Determines whether the current object is the same as other object.
            </summary>
      <param name="other">Object to be compared.</param>
      <returns>True if the objects are the same, otherwise false.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemSource.Equals(System.Object)">
      <inheritdoc cref="M:System.Object.Equals(System.Object)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemSource.GetHashCode">
      <inheritdoc cref="M:System.Object.GetHashCode" />
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemSource.Mappings">
      <summary>
            The mappings associated with this mapping source.
            </summary>
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper">
      <summary>
            A client mapper for OPC Data Access specification. Provides a functionality to map an object to entities in 
            OPC Data Access domain.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper.#ctor">
      <summary>
            Initializes a new instance of the class, with all defaults.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper.#ctor(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper)">
      <summary>Initializes a new copy of the <see cref="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper" /> object.</summary>
      <param name="clientMapper">The OPC-DA client mapper object to be copied from.</param>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper.#ctor(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingContext)">
      <summary>
            Initializes a new instance of the class, with given mapping context template.
            </summary>
      <param name="mappingContextTemplate">The mapping context template.</param>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper.#ctor(OpcLabs.EasyOpc.DataAccess.IEasyDAClient)">
      <summary>
            Initializes a new instance of the class, with given client object.
            </summary>
      <param name="client">The client object that this mapper will use to make OPC operations.</param>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper.#ctor(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingContext)">
      <summary>
            Initializes a new instance of the class, with given client object and mapping context template.
            </summary>
      <param name="client">The client object that this mapper will use to make OPC operations.</param>
      <param name="mappingContextTemplate">The mapping context template.</param>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper.#ctor(OpcLabs.EasyOpc.DataAccess.IEasyDAClient,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingProvider,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingContext)">
      <summary>
            Initializes a new instance of the class, with given client object, mapping provider, and mapping context template.
            </summary>
      <param name="client">The client object that this mapper will use to make OPC operations.</param>
      <param name="mappingProvider">The mapping provider to be used by this mapper.</param>
      <param name="mappingContextTemplate">The mapping context template.</param>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper.DefaultClient">
      <summary>
            A default client object.
            </summary>
      <remarks>
        <para>
            The default client object is used when no client object is specified in the constructor of the mapper.</para>
        <para>
            When the default client object is used, it is shared among all client mappers.</para>
      </remarks>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper.SharedInstance">
      <summary>
            A default, shared instance of the mapper object.
            </summary>
      <remarks>
        <para>
            Use this property with care, as its usability is limited. Its main use is for testing, and for non-library
            application code where just a single instance is sufficient.</para>
        <para>
            The default instance is not suitable for Windows Forms or similar environments, where a specific 
            <see cref="T:System.Threading.SynchronizationContext" /> may be used with each form.</para>
        <para>
            We also do not recommend using the default instance for library code, due to conflicts that may arise if your 
            library sets some instance parameters which may not be the same as what other libraries or the final application 
            expects.
            </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper.ObtainItemValueArguments(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemSource,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMapping,System.Object)">
      <summary>
            Obtains <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemValueArguments" /> for an item source, given an item mapping of a value member.
            </summary>
      <param name="itemSource">The item source for which the arguments will be assembled.</param>
      <param name="valueMapping">An item mapping of a value member.</param>
      <param name="state">An arbitrary state object for be used within the arguments.</param>
      <returns>The arguments assembled from the item source and the item mapping.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper.ObtainItemVtqArguments(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemSource,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMapping,System.Object)">
      <summary>
            Obtains <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemVtqArguments" /> for an item source, given an item mapping of a VTQ member.
            </summary>
      <param name="itemSource">The item source for which the arguments will be assembled.</param>
      <param name="vtqMapping">An item mapping of a VTQ member.</param>
      <param name="state">An arbitrary state object for be used within the arguments.</param>
      <returns>The arguments assembled from the item source and the item mapping.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper.ObtainItemVtqArguments(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemSource,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMapping,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMapping,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMapping,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMapping,System.Object)">
      <summary>
            Obtains <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemVtqArguments" /> for an item source, given item mappings for a value, timestamp and 
            quality members.
            </summary>
      <param name="itemSource">The item source for which the arguments will be assembled.</param>
      <param name="valueMapping">An item mapping of the value member.</param>
      <param name="timestampMapping">An item mapping of the timestamp member (in UTC).</param>
      <param name="timestampLocalMapping">An item mapping of the timestamp member (in local time).</param>
      <param name="qualityMapping">An item mapping of the quality member.</param>
      <param name="state">An arbitrary state object for be used within the arguments.</param>
      <returns>The arguments assembled from the item source and the item mappings.</returns>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper.Client">
      <summary>
            The client object that this mapper uses to make OPC operations.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper.ClientMappings">
      <summary>
            The client mappings in this mapper.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper.SubscribedItemCount">
      <summary>
            Number of OPC items currently subscribed to by this mapper.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper.Get">
      <summary>
            Executes the "Get" operation on all mappings in this mapper.
            </summary>
      <remarks>
            The "Get" operation obtains value of an OPC property and stores it into the mapping source.
            Only mappings of type <see cref="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientPropertyMapping" /> are affected; other mappings are ignored.
            </remarks>
      <exception cref="T:OpcLabs.BaseLib.Licensing.LicensingException">The component is not licensed for the operation requested.</exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper.Get(System.Collections.Generic.IEnumerable{OpcLabs.EasyOpc.DataAccess.LiveMapping.IDAClientMapping})">
      <summary>
            Executes the "Get" operation on given mappings.
            </summary>
      <param name="mappings">The mappings to be operated upon.</param>
      <remarks>
            The "Get" operation obtains value of an OPC property and stores it into the mapping source.
            Only mappings of type <see cref="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientPropertyMapping" /> are affected; other mappings are ignored.
            </remarks>
      <exception cref="T:System.ArgumentNullException">
        <para>
             A <c>null</c> reference (<c>Nothing</c> in Visual Basic) is passed to a method that does not accept it as a valid argument.</para>
        <para>
             This is a usage error, i.e. it will never occur (the exception will not be thrown) in a correctly written program. Your code should not catch this exception.</para>
      </exception>
      <exception cref="T:OpcLabs.BaseLib.Licensing.LicensingException">The component is not licensed for the operation requested.</exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper.Read">
      <summary>
            Executes the "Read" operation on all mappings in this mapper.
            </summary>
      <remarks>
            The "Read" operation reads a value of an OPC item and stores it into the mapping source.
            Only mappings of type <see cref="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemMapping" /> that include <see cref="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingOperations.Read" />
            in their <see cref="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemMapping.Operations" /> are affected; other mappings are ignored.
            </remarks>
      <exception cref="T:OpcLabs.BaseLib.Licensing.LicensingException">The component is not licensed for the operation requested.</exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper.Read(System.Collections.Generic.IEnumerable{OpcLabs.EasyOpc.DataAccess.LiveMapping.IDAClientMapping})">
      <summary>
            Executes the "Read" operation on given mappings.
            </summary>
      <param name="mappings">The mappings to be operated upon.</param>
      <remarks>
            The "Read" operation reads a value of an OPC item and stores it into the mapping source.
            Only mappings of type <see cref="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemMapping" /> that include <see cref="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingOperations.Read" />
            in their <see cref="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemMapping.Operations" /> are affected; other mappings are ignored.
            </remarks>
      <exception cref="T:System.ArgumentNullException">
        <para>
             A <c>null</c> reference (<c>Nothing</c> in Visual Basic) is passed to a method that does not accept it as a valid argument.</para>
        <para>
             This is a usage error, i.e. it will never occur (the exception will not be thrown) in a correctly written program. Your code should not catch this exception.</para>
      </exception>
      <exception cref="T:OpcLabs.BaseLib.Licensing.LicensingException">The component is not licensed for the operation requested.</exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper.Subscribe(System.Boolean)">
      <summary>
            Executes the "Subscribe" operation on all mappings in this mapper.
            </summary>
      <param name="active">
        <c>true</c> to subscribe; <c>false</c> to unsubscribe.</param>
      <remarks>
            The "Subscribe" operation subscribes to or unsubscribes from changes of an OPC item.
            Only mappings of type <see cref="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemMapping" /> that include <see cref="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingOperations.Subscribe" />
            in their <see cref="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemMapping.Operations" /> are affected; other mappings are ignored.
            </remarks>
      <exception cref="T:OpcLabs.BaseLib.Licensing.LicensingException">The component is not licensed for the operation requested.</exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper.Subscribe(System.Boolean,System.Collections.Generic.IEnumerable{OpcLabs.EasyOpc.DataAccess.LiveMapping.IDAClientMapping})">
      <summary>
            Executes the "Subscribe" operation on given mappings.
            </summary>
      <param name="active">
        <c>true</c> to subscribe; <c>false</c> to unsubscribe.</param>
      <param name="mappings">The mappings to be operated upon.</param>
      <remarks>
            The "Subscribe" operation subscribes to or unsubscribes from changes of an OPC item.
            Only mappings of type <see cref="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemMapping" /> that include <see cref="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingOperations.Subscribe" />
            in their <see cref="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemMapping.Operations" /> are affected; other mappings are ignored.
            </remarks>
      <exception cref="T:OpcLabs.BaseLib.Licensing.LicensingException">The component is not licensed for the operation requested.</exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper.Write">
      <summary>
            Executes the "Write" operation on all mappings in this mapper.
            </summary>
      <remarks>
            The "Write" operation writes a value from the mapping source into an OPC item.
            Only mappings of type <see cref="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemMapping" /> that include <see cref="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingOperations.Write" />
            in their <see cref="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemMapping.Operations" /> are affected; other mappings are ignored.
            </remarks>
      <exception cref="T:OpcLabs.BaseLib.Licensing.LicensingException">The component is not licensed for the operation requested.</exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper.Write(System.Collections.Generic.IEnumerable{OpcLabs.EasyOpc.DataAccess.LiveMapping.IDAClientMapping})">
      <summary>
            Executes the "Write" operation on given mappings.
            </summary>
      <param name="mappings">The mappings to be operated upon.</param>
      <remarks>
            The "Write" operation writes a value from the mapping source into an OPC item.
            Only mappings of type <see cref="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemMapping" /> that include <see cref="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingOperations.Write" />
            in their <see cref="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemMapping.Operations" /> are affected; other mappings are ignored.
            </remarks>
      <exception cref="T:System.ArgumentNullException">
        <para>
             A <c>null</c> reference (<c>Nothing</c> in Visual Basic) is passed to a method that does not accept it as a valid argument.</para>
        <para>
             This is a usage error, i.e. it will never occur (the exception will not be thrown) in a correctly written program. Your code should not catch this exception.</para>
      </exception>
      <exception cref="T:OpcLabs.BaseLib.Licensing.LicensingException">The component is not licensed for the operation requested.</exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper.Clone">
      <inheritdoc />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper.CreateFolderMapping(OpcLabs.BaseLib.LiveMapping.AbstractMapping,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAFolderAttribute)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMapper.CreateFolderMapping(OpcLabs.BaseLib.LiveMapping.AbstractMapping,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAFolderAttribute)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper.CreateFolderSource(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingContext,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMemberMappingDefinition)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMapper.CreateFolderSource(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingContext,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMemberMappingDefinition)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper.CreateItemMapping(OpcLabs.BaseLib.LiveMapping.AbstractMapping,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemAttribute)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMapper.CreateItemMapping(OpcLabs.BaseLib.LiveMapping.AbstractMapping,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemAttribute)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper.CreateItemSource(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingContext,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMemberMappingDefinition)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMapper.CreateItemSource(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingContext,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMemberMappingDefinition)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper.CreatePropertyMapping(OpcLabs.BaseLib.LiveMapping.AbstractMapping,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertyAttribute)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMapper.CreatePropertyMapping(OpcLabs.BaseLib.LiveMapping.AbstractMapping,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertyAttribute)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper.CreatePropertySource(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingContext,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMemberMappingDefinition)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMapper.CreatePropertySource(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingContext,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMemberMappingDefinition)" />
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper.Serialize">
      <summary>
            Synchronizes access to subscription counts.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper.DeepClone">
      <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
      <returns>A new object that is a deep copy of this instance.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper.GetLicensedClient">
      <exclude />
      <exception cref="T:OpcLabs.BaseLib.Licensing.LicensingException">The component is not licensed for the operation requested.</exception>
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientOperationContext">
      <summary>
            A context for OPC-DA client operations.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientOperationContext.#ctor(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper)">
      <summary>
            Initializes a new instance of the operation context for a given client mapper.
            </summary>
      <param name="clientMapper">The client mapper to which this operation context belongs.</param>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientOperationContext.ClientMapper">
      <summary>
            The client mapper to which this operation context belongs.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientOperationContext.GetPropertyDictionary">
      <summary>
            A dictionary of OPC-DA property mappings registered to the Get operation.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientOperationContext.ReadItemDictionary">
      <summary>
            A dictionary of OPC-DA item mappings registered to the Read operation.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientOperationContext.SubscribeItemDictionary">
      <summary>
            A dictionary of OPC-DA item mappings registered to the Subscribe operation.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientOperationContext.UnsubscribeItemDictionary">
      <summary>
            A dictionary of OPC-DA item mappings registered to the Unsubscribe operation.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientOperationContext.WriteItemDictionary">
      <summary>
            A dictionary of OPC-DA item mappings registered to the Write operation.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientOperationContext.RegisterGetProperty(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientPropertyMapping)">
      <summary>
            Registers a given OPC-DA property mapping to a Get operation.
            </summary>
      <param name="clientPropertyMapping">A client mapping for an OPC Data Access property.</param>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientOperationContext.RegisterReadItem(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemMapping)">
      <summary>
            Registers a given OPC-DA item mapping to a Read operation.
            </summary>
      <param name="clientItemMapping">A client mapping for an OPC Data Access item.</param>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientOperationContext.RegisterSubscribeItem(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemMapping)">
      <summary>
            Registers a given OPC-DA item mapping to a Subscribe operation.
            </summary>
      <param name="clientItemMapping">A client mapping for an OPC Data Access item.</param>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientOperationContext.RegisterUnsubscribeItem(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemMapping)">
      <summary>
            Registers a given OPC-DA item mapping to a Unsubscribe operation.
            </summary>
      <param name="clientItemMapping">A client mapping for an OPC Data Access item.</param>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientOperationContext.RegisterWriteItem(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemMapping)">
      <summary>
            Registers a given OPC-DA item mapping to a Write operation.
            </summary>
      <param name="clientItemMapping">A client mapping for an OPC Data Access item.</param>
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappedNode">
      <summary>
            A pre-made base class for mapping OPC Data Access nodes.
            </summary>
      <remarks>
            You may (but do not have to) use this class as a base class for your objects that you map to OPC Data Access nodes.
            The class is already annotated with the <see cref="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DATypeAttribute" />, and contains properties that are mapped to
            useful meta-members, such as the <see cref="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappedNode.NodeDescriptor" />.
            </remarks>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappedNode.GroupParameters">
      <summary>
            An object containing subscription parameters, such as the requested update rate.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappedNode.ItemMappings">
      <summary>
            An enumeration of OPC-DA item mappings defined directly on the target object.
            </summary>
      <remarks>
            This property intentionally returns an enumerable of <see cref="T:OpcLabs.BaseLib.LiveMapping.AbstractMapping" /> and not 
            <see cref="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMapping" />, because that's what methods on <see cref="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMapper" /> can accept directly.
            </remarks>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappedNode.NodeDescriptor">
      <summary>
            The descriptor of the OPC node involved in the operation.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappedNode.PropertyMappings">
      <summary>
            An enumeration of OPC-DA property mappings defined directly on the target object.
            </summary>
      <remarks>
            This property intentionally returns an enumerable of <see cref="T:OpcLabs.BaseLib.LiveMapping.AbstractMapping" /> and not 
            <see cref="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertyMapping" />, because that's what methods on <see cref="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMapper" /> can accept directly.
            </remarks>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappedNode.ReadParameters">
      <summary>
            The read parameters (such as data source or value age).
            </summary>
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMapper">
      <summary>
            An abstract mapper for OPC Data Access specification. Provides a functionality to map an object to entities in 
            OPC Data Access domain.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMapper.#ctor(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMapper)">
      <summary>Initializes a new copy of the <see cref="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMapper" /> object.</summary>
      <param name="mapper">The OPC-DA mapper object to be copied from.</param>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMapper.#ctor(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingProvider,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingContext)">
      <summary>
            Initializes a new instance of the class, with given client object, mapping provider, and mapping context template.
            </summary>
      <param name="mappingProvider">The mapping provider to be used by this mapper.</param>
      <param name="mappingContextTemplate">The mapping context template.</param>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMapper.#ctor(System.ComponentModel.IContainer,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingProvider,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingContext)">
      <summary>
            Initializes an instance of the <see cref="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMapper" /> class with Designer support. 
            </summary>
      <param name="container">The component container to which the new instance will be added.</param>
      <param name="mappingProvider">The mapping provider to be used by this mapper.</param>
      <param name="mappingContextTemplate">The mapping context template.</param>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMapper.DefaultMappingProvider">
      <summary>
            A default mapping provider.
            </summary>
      <remarks>
        <para>
            The default mapping provider is used when no mapping provider is specified in the constructor of the mapper.</para>
        <para>
            The initial value is equal to <see cref="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingProvider.SharedInstance" />; all its limitations apply. </para>
      </remarks>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMapper.DefaultMappingContextTemplate">
      <summary>
            A default mapping context template. May be <c>null</c>.
            </summary>
      <remarks>
        <para>
            The default mapping context template is used when no template is specified in the constructor of the mapper.</para>
        <para>
            The initial value is <c>null</c>.</para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMapper.ObtainItemVtq(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMapping)">
      <summary>
            Obtains <see cref="T:OpcLabs.EasyOpc.DataAccess.DAVtq" /> for an item source, given an item mapping of a VTQ member.
            </summary>
      <param name="vtqMapping">An item mapping of a VTQ member.</param>
      <returns>The arguments assembled from the item source and the item mapping.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMapper.ObtainItemVtq(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMapping,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMapping,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMapping,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMapping)">
      <summary>
            Obtains <see cref="T:OpcLabs.EasyOpc.DataAccess.DAVtq" /> for an item source, given item mappings for a value, timestamp and 
            quality members.
            </summary>
      <param name="valueMapping">An item mapping of the value member.</param>
      <param name="timestampMapping">An item mapping of the timestamp member (in UTC).</param>
      <param name="timestampLocalMapping">An item mapping of the timestamp member (in local time).</param>
      <param name="qualityMapping">An item mapping of the quality member.</param>
      <returns>The arguments assembled from the item source and the item mappings.</returns>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMapper.DeferredMapNodeFunction">
      <summary>
            A function that returns the deferred mapping function for a given mapping context.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMapper.FastestUpdateRate">
      <summary>
            The fastest update rate allowed by this mapper. 
            </summary>
      <remarks>
            When not equal to zero (the default), all mappings that specify faster update rate will use this value.
            </remarks>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMapper.LowestPercentDeadband">
      <summary>
            The lowest percent deadband allowed by this mapper.
            </summary>
      <remarks>
            When not equal to zero (the default), all mappings that specify lower percent deadband will use this value.
            </remarks>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMapper.MappingContextTemplate">
      <summary>
            The mapping context template to be used by the mapping provider.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMapper.MappingProvider">
      <summary>
            The mapping provider to be used by this mapper.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMapper.ValueEquals(System.Object)">
      <inheritdoc />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMapper.CreateFolderMapping(OpcLabs.BaseLib.LiveMapping.AbstractMapping,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAFolderAttribute)">
      <summary>
            Creates a folder mapping.
            </summary>
      <param name="parent">A parent mapping.</param>
      <param name="folderAttribute">Gives information about OPC Data Access folder.</param>
      <returns>The folder mapping created.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMapper.CreateFolderSource(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingContext,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMemberMappingDefinition)">
      <summary>
            Creates a folder source.
            </summary>
      <param name="mappingContext">A mapping context for OPC Data Access.</param>
      <param name="memberMappingDefinition">Member mapping definition for members involved in OPC Data Access mapping.</param>
      <returns>The folder source created.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMapper.CreateItemMapping(OpcLabs.BaseLib.LiveMapping.AbstractMapping,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemAttribute)">
      <summary>
            Creates an item mapping.
            </summary>
      <param name="parent">A parent mapping.</param>
      <param name="itemAttribute">Gives information about OPC Data Access item.</param>
      <returns>The item mapping created.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMapper.CreateItemSource(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingContext,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMemberMappingDefinition)">
      <summary>
            Creates an item source.
            </summary>
      <param name="mappingContext">A mapping context for OPC Data Access.</param>
      <param name="memberMappingDefinition">Member mapping definition for members involved in OPC Data Access mapping.</param>
      <returns>The item source created.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMapper.CreatePropertyMapping(OpcLabs.BaseLib.LiveMapping.AbstractMapping,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertyAttribute)">
      <summary>
            Creates a property mapping.
            </summary>
      <param name="parent">A parent mapping.</param>
      <param name="propertyAttribute">Gives information about OPC Data Access property (on some OPC item).</param>
      <returns>The property mapping created.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMapper.CreatePropertySource(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingContext,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMemberMappingDefinition)">
      <summary>
            Creates a property source.
            </summary>
      <param name="mappingContext">A mapping context for OPC Data Access.</param>
      <param name="memberMappingDefinition">Member mapping definition for members involved in OPC Data Access mapping.</param>
      <returns>The property source created.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMapper.ValueEquals(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMapper)">
      <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMapper" /> is value equal to the current object.
            </summary>
      <param name="other">The <see cref="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMapper" /> to compare with the current object.</param>
      <returns>
        <c>true</c> if the specified object is value equal to the current object; otherwise, <c>false</c>.</returns>
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingContext">
      <summary>
            A mapping context for OPC Data Access.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingContext.#ctor">
      <summary>
            Initializes a new instance of the class, with all defaults.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingContext.#ctor(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingContext)">
      <summary>
            Initializes a new instance of the class, based on a given mapping context template.
            </summary>
      <param name="template">The mapping context that is used as a template for creating a new instance.</param>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingContext.#ctor(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DAGroupParameters,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DAReadParameters)">
      <summary>
            Initializes a new instance of the class, with a given OPC server descriptor, OPC group parameters, OPC node
            descriptor, and read parameters.
            </summary>
      <param name="serverDescriptor">The OPC server involved in the operation.</param>
      <param name="groupParameters">An object containing subscription parameters, such as the requested update rate.
            </param>
      <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
      <param name="readParameters">The read parameters (such as data source or value age).</param>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingContext.#ctor(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DAGroupParameters,System.String,System.String,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DAReadParameters)">
      <summary>
            Initializes a new instance of the class, given all its properties.
            </summary>
      <param name="serverDescriptor">The OPC server involved in the operation.</param>
      <param name="groupParameters">An object containing subscription parameters, such as the requested update rate.
            </param>
      <param name="itemIdTemplateString">The template string for OPC item IDs.</param>
      <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
      <param name="readParameters">The read parameters (such as data source or value age).</param>
      <param name="nodePathTemplateString">The template string for OPC node paths.</param>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingContext.op_Equality(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingContext,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingContext)">
      <summary>Determines whether the two objects are equal.</summary>
      <param name="left">First object to be compared.</param>
      <param name="right">Second object to be compared.</param>
      <returns>
        <c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingContext.op_Inequality(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingContext,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingContext)">
      <summary>Determines whether the two objects are not equal.</summary>
      <param name="left">First object to be compared.</param>
      <param name="right">Second object to be compared.</param>
      <returns>
        <c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingContext.GroupParameters">
      <summary>
            An object containing subscription parameters, such as the requested update rate.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingContext.ItemIdTemplateString">
      <summary>
            The template string for OPC item IDs.
            </summary>
      <remarks>
        <para>
            Following macros can be used in template strings:
            <ul><li><c>$(ParentNodePath)    </c>The OPC node path of the parent node. Only used with OPC XML.</li><li><c>$(ParentItemId)      </c>The OPC Item Id of parent node.</li><li><c>$(BrowseName)        </c>The browse name of current node.</li></ul></para>
      </remarks>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingContext.NodeDescriptor">
      <summary>
            The descriptor of the OPC node involved in the operation.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingContext.NodePathTemplateString">
      <summary>
            The template string for OPC node paths.
            </summary>
      <remarks>
        <para>
            Following macros can be used in template strings:
            <ul><li><c>$(ParentNodePath)    </c>The OPC node path of the parent node. Only used with OPC XML.</li><li><c>$(ParentItemId)      </c>The OPC Item Id of parent node.</li><li><c>$(BrowseName)        </c>The browse name of current node.</li></ul></para>
      </remarks>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingContext.ReadParameters">
      <summary>
            The read parameters (such as data source or value age).
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingContext.ApplyMemberMappingDefinition(OpcLabs.BaseLib.LiveMapping.AbstractMemberMappingDefinition)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.LiveMapping.CommonMappingContext.ApplyMemberMappingDefinition(OpcLabs.BaseLib.LiveMapping.AbstractMemberMappingDefinition)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingContext.ApplyTypeMappingDefinition(OpcLabs.BaseLib.LiveMapping.AbstractTypeMappingDefinition)">
      <inheritdoc cref="M:OpcLabs.BaseLib.LiveMapping.AbstractMappingContext.ApplyTypeMappingDefinition(OpcLabs.BaseLib.LiveMapping.AbstractTypeMappingDefinition)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingContext.Equals(System.Object)">
      <inheritdoc cref="M:System.Object.Equals(System.Object)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingContext.GetHashCode">
      <inheritdoc cref="M:System.Object.GetHashCode" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingContext.Clone">
      <inheritdoc />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingContext.DeepClone">
      <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
      <returns>A new object that is a deep copy of this instance.</returns>
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingProvider">
      <summary>
            A mapping provider for OPC Data Access specification. 
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingProvider.SharedInstance">
      <summary>
            A default, shared instance of the mapping provider object.
            </summary>
      <remarks>
        <para>
            Use this property with care, as its usability is limited. Its main use is for testing, and for non-library
            application code where just a single instance is sufficient.</para>
        <para>
            The default instance is not suitable for Windows Forms or similar environments, where a specific 
            <see cref="T:System.Threading.SynchronizationContext" /> may be used with each form.</para>
        <para>
            We also do not recommend using the default instance for library code, due to conflicts that may arise if your 
            library sets some instance parameters which may not be the same as what other libraries or the final application 
            expects.
            </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingProvider.CreateMappingContext(OpcLabs.BaseLib.LiveMapping.AbstractMappingContext)">
      <inheritdoc cref="M:OpcLabs.BaseLib.LiveMapping.AbstractMappingProvider.CreateMappingContext(OpcLabs.BaseLib.LiveMapping.AbstractMappingContext)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingProvider.GetTypeMappingDefinition(System.Type)">
      <summary>
            Obtains a type mapping definition for a given type, either by looking up an already loaded definition,
            or loading it, if not known to the provider yet.
            </summary>
      <param name="type">The type for which the type mapping definition should be obtained.</param>
      <returns>The existing or newly loaded type mapping definition; <c>null</c> if the type is not for mapping.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingProvider.NewTypeMappingDefinition">
      <inheritdoc cref="M:OpcLabs.BaseLib.LiveMapping.AbstractMappingProvider.NewTypeMappingDefinition" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingProvider.CollectMemberMappings(OpcLabs.BaseLib.LiveMapping.AbstractMemberMappingDefinition,System.Type,System.Object,System.Reflection.MemberInfo,OpcLabs.BaseLib.LiveMapping.AbstractMappingContext,OpcLabs.BaseLib.LiveMapping.AbstractMapper)">
      <inheritdoc cref="M:OpcLabs.BaseLib.LiveMapping.AbstractMappingProvider.CollectMemberMappings(OpcLabs.BaseLib.LiveMapping.AbstractMemberMappingDefinition,System.Type,System.Object,System.Reflection.MemberInfo,OpcLabs.BaseLib.LiveMapping.AbstractMappingContext,OpcLabs.BaseLib.LiveMapping.AbstractMapper)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingProvider.GetMetaValue(System.String,System.Object,OpcLabs.BaseLib.LiveMapping.AbstractMappingContext,OpcLabs.BaseLib.LiveMapping.AbstractMapper)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.LiveMapping.CommonMappingProvider.GetMetaValue(System.String,System.Object,OpcLabs.BaseLib.LiveMapping.AbstractMappingContext,OpcLabs.BaseLib.LiveMapping.AbstractMapper)" />
      <remarks>
        <para>
          <see cref="T:OpcLabs.EasyOpc.LiveMapping.CommonMappingProvider" /> supports following meta-members:
            <ul><li><c>GroupParameters</c>: <see cref="T:OpcLabs.EasyOpc.DataAccess.DAGroupParameters" />, an object containing subscription parameters, such as the requested update rate.</li><li><c>NodeDescriptor</c>:  <see cref="T:OpcLabs.EasyOpc.DataAccess.DANodeDescriptor" />, the descriptor of the OPC node involved in the operation.</li><li><c>ReadParameters</c>:  <see cref="T:OpcLabs.EasyOpc.DataAccess.DAReadParameters" />, the read parameters (such as data source or value age).</li></ul></para>
      </remarks>
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.Extensions.DAClientMapperExtension">
      <summary>
            Extension methods on <see cref="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper" /> objects. A static class.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.Extensions.DAClientMapperExtension.GetTarget(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper,System.Object,System.String,System.Boolean)">
      <overloads>
        <summary>
             Executes the "Get" operation on members of given target object.
             </summary>
        <remarks>
             The "Get" operation obtains value of an OPC property and stores it into the mapping source.
             Only mappings of type <see cref="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertyMapping" /> are affected; other mappings are ignored.
             </remarks>
      </overloads>
      <param name="clientMapper">The client mapper object that will perform the operation.</param>
      <param name="targetObject">The object being targeted.</param>
      <param name="mappingTag">The operation will be performed only on mappings tagged with this mapping tag.</param>
      <param name="recurse">
        <c>true</c> to operate on sub-targets (mapped members of the target) recursively; 
             <c>false</c> otherwise.</param>
      <exception cref="T:System.ArgumentException">
        <para>
             One of the arguments provided to a method is not valid.</para>
        <para>
             This is a usage error, i.e. it will never occur (the exception will not be thrown) in a correctly written program. Your code should not catch this exception.</para>
      </exception>
      <exception cref="T:System.ArgumentNullException">
        <para>
             A <c>null</c> reference (<c>Nothing</c> in Visual Basic) is passed to a method that does not accept it as a valid argument.</para>
        <para>
             This is a usage error, i.e. it will never occur (the exception will not be thrown) in a correctly written program. Your code should not catch this exception.</para>
      </exception>
      <exception cref="T:OpcLabs.BaseLib.Licensing.LicensingException">The component is not licensed for the operation requested.</exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.Extensions.DAClientMapperExtension.GetTarget(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper,System.Object,System.Predicate{System.Collections.Generic.IEnumerable{System.String}},System.Boolean)">
      <summary>
             Executes the "Get" operation on members of given target object.
             </summary>
      <remarks>
             The "Get" operation obtains value of an OPC property and stores it into the mapping source.
             Only mappings of type <see cref="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertyMapping" /> are affected; other mappings are ignored.
             </remarks>
      <param name="clientMapper">The client mapper object that will perform the operation.</param>
      <param name="targetObject">The object being targeted.</param>
      <param name="mappingTagsPredicate">The operation will be performed only on mappings whose mapping tags satisfy this 
            predicate.</param>
      <param name="recurse">
        <c>true</c> to operate on sub-targets (mapped members of the target) recursively; 
            <c>false</c> otherwise.</param>
      <exception cref="T:System.ArgumentNullException">
        <para>
             A <c>null</c> reference (<c>Nothing</c> in Visual Basic) is passed to a method that does not accept it as a valid argument.</para>
        <para>
             This is a usage error, i.e. it will never occur (the exception will not be thrown) in a correctly written program. Your code should not catch this exception.</para>
      </exception>
      <exception cref="T:OpcLabs.BaseLib.Licensing.LicensingException">The component is not licensed for the operation requested.</exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.Extensions.DAClientMapperExtension.GetTarget(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper,System.Object,System.Boolean)">
      <summary>
             Executes the "Get" operation on members of given target object.
             </summary>
      <remarks>
             The "Get" operation obtains value of an OPC property and stores it into the mapping source.
             Only mappings of type <see cref="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertyMapping" /> are affected; other mappings are ignored.
             </remarks>
      <param name="clientMapper">The client mapper object that will perform the operation.</param>
      <param name="targetObject">The object being targeted.</param>
      <param name="recurse">
        <c>true</c> to operate on sub-targets (mapped members of the target) recursively; 
            <c>false</c> otherwise.</param>
      <exception cref="T:System.ArgumentNullException">
        <para>
             A <c>null</c> reference (<c>Nothing</c> in Visual Basic) is passed to a method that does not accept it as a valid argument.</para>
        <para>
             This is a usage error, i.e. it will never occur (the exception will not be thrown) in a correctly written program. Your code should not catch this exception.</para>
      </exception>
      <exception cref="T:OpcLabs.BaseLib.Licensing.LicensingException">The component is not licensed for the operation requested.</exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.Extensions.DAClientMapperExtension.ReadTarget(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper,System.Object,System.String,System.Boolean)">
      <overloads>
        <summary>
             Executes the "Read" operation on members of given target object.
             </summary>
        <remarks>
             The "Read" operation reads a value of an OPC item and stores it into the mapping source.
             Only mappings of type <see cref="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMapping" /> that include <see cref="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingOperations.Read" />
             in their <see cref="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemMapping.Operations" /> are affected; other mappings are ignored.
             </remarks>
      </overloads>
      <param name="clientMapper">The client mapper object that will perform the operation.</param>
      <param name="targetObject">The object being targeted.</param>
      <param name="mappingTag">The operation will be performed only on mappings tagged with this mapping tag.</param>
      <param name="recurse">
        <c>true</c> to operate on sub-targets (mapped members of the target) recursively; 
             <c>false</c> otherwise.</param>
      <exception cref="T:System.ArgumentException">
        <para>
             One of the arguments provided to a method is not valid.</para>
        <para>
             This is a usage error, i.e. it will never occur (the exception will not be thrown) in a correctly written program. Your code should not catch this exception.</para>
      </exception>
      <exception cref="T:System.ArgumentNullException">
        <para>
             A <c>null</c> reference (<c>Nothing</c> in Visual Basic) is passed to a method that does not accept it as a valid argument.</para>
        <para>
             This is a usage error, i.e. it will never occur (the exception will not be thrown) in a correctly written program. Your code should not catch this exception.</para>
      </exception>
      <exception cref="T:OpcLabs.BaseLib.Licensing.LicensingException">The component is not licensed for the operation requested.</exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.Extensions.DAClientMapperExtension.ReadTarget(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper,System.Object,System.Predicate{System.Collections.Generic.IEnumerable{System.String}},System.Boolean)">
      <summary>
             Executes the "Read" operation on members of given target object.
             </summary>
      <remarks>
             The "Read" operation reads a value of an OPC item and stores it into the mapping source.
             Only mappings of type <see cref="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMapping" /> that include <see cref="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingOperations.Read" />
             in their <see cref="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemMapping.Operations" /> are affected; other mappings are ignored.
             </remarks>
      <param name="clientMapper">The client mapper object that will perform the operation.</param>
      <param name="targetObject">The object being targeted.</param>
      <param name="mappingTagsPredicate">The operation will be performed only on mappings whose mapping tags satisfy this 
            predicate.</param>
      <param name="recurse">
        <c>true</c> to operate on sub-targets (mapped members of the target) recursively; 
            <c>false</c> otherwise.</param>
      <exception cref="T:System.ArgumentNullException">
        <para>
             A <c>null</c> reference (<c>Nothing</c> in Visual Basic) is passed to a method that does not accept it as a valid argument.</para>
        <para>
             This is a usage error, i.e. it will never occur (the exception will not be thrown) in a correctly written program. Your code should not catch this exception.</para>
      </exception>
      <exception cref="T:OpcLabs.BaseLib.Licensing.LicensingException">The component is not licensed for the operation requested.</exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.Extensions.DAClientMapperExtension.ReadTarget(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper,System.Object,System.Boolean)">
      <summary>
             Executes the "Read" operation on members of given target object.
             </summary>
      <remarks>
             The "Read" operation reads a value of an OPC item and stores it into the mapping source.
             Only mappings of type <see cref="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMapping" /> that include <see cref="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingOperations.Read" />
             in their <see cref="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemMapping.Operations" /> are affected; other mappings are ignored.
             </remarks>
      <param name="clientMapper">The client mapper object that will perform the operation.</param>
      <param name="targetObject">The object being targeted.</param>
      <param name="recurse">
        <c>true</c> to operate on sub-targets (mapped members of the target) recursively; 
            <c>false</c> otherwise.</param>
      <exception cref="T:System.ArgumentNullException">
        <para>
             A <c>null</c> reference (<c>Nothing</c> in Visual Basic) is passed to a method that does not accept it as a valid argument.</para>
        <para>
             This is a usage error, i.e. it will never occur (the exception will not be thrown) in a correctly written program. Your code should not catch this exception.</para>
      </exception>
      <exception cref="T:OpcLabs.BaseLib.Licensing.LicensingException">The component is not licensed for the operation requested.</exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.Extensions.DAClientMapperExtension.SubscribeTarget(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper,System.Boolean,System.String,System.Object,System.Boolean)">
      <overloads>
        <summary>
             Executes the "Subscribe" operation on members of given target object.
             </summary>
        <remarks>
             The "Subscribe" operation subscribes to or unsubscribes from changes of an OPC item.
             Only mappings of type <see cref="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMapping" /> that include <see cref="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingOperations.Subscribe" />
             in their <see cref="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemMapping.Operations" /> are affected; other mappings are ignored.
             </remarks>
      </overloads>
      <param name="clientMapper">The client mapper object that will perform the operation.</param>
      <param name="active">
        <c>true</c> to subscribe; <c>false</c> to unsubscribe.</param>
      <param name="targetObject">The object being targeted.</param>
      <param name="mappingTag">The operation will be performed only on mappings tagged with this mapping tag.</param>
      <param name="recurse">
        <c>true</c> to operate on sub-targets (mapped members of the target) recursively; 
             <c>false</c> otherwise.</param>
      <exception cref="T:System.ArgumentException">
        <para>
             One of the arguments provided to a method is not valid.</para>
        <para>
             This is a usage error, i.e. it will never occur (the exception will not be thrown) in a correctly written program. Your code should not catch this exception.</para>
      </exception>
      <exception cref="T:System.ArgumentNullException">
        <para>
             A <c>null</c> reference (<c>Nothing</c> in Visual Basic) is passed to a method that does not accept it as a valid argument.</para>
        <para>
             This is a usage error, i.e. it will never occur (the exception will not be thrown) in a correctly written program. Your code should not catch this exception.</para>
      </exception>
      <exception cref="T:OpcLabs.BaseLib.Licensing.LicensingException">The component is not licensed for the operation requested.</exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.Extensions.DAClientMapperExtension.SubscribeTarget(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper,System.Boolean,System.Predicate{System.Collections.Generic.IEnumerable{System.String}},System.Object,System.Boolean)">
      <summary>
             Executes the "Subscribe" operation on members of given target object.
             </summary>
      <remarks>
             The "Subscribe" operation subscribes to or unsubscribes from changes of an OPC item.
             Only mappings of type <see cref="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMapping" /> that include <see cref="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingOperations.Subscribe" />
             in their <see cref="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemMapping.Operations" /> are affected; other mappings are ignored.
             </remarks>
      <param name="clientMapper">The client mapper object that will perform the operation.</param>
      <param name="active">
        <c>true</c> to subscribe; <c>false</c> to unsubscribe.</param>
      <param name="mappingTagsPredicate">The operation will be performed only on mappings whose mapping tags satisfy this 
            predicate.</param>
      <param name="targetObject">The object being targeted.</param>
      <param name="recurse">
        <c>true</c> to operate on sub-targets (mapped members of the target) recursively; 
            <c>false</c> otherwise.</param>
      <exception cref="T:System.ArgumentNullException">
        <para>
             A <c>null</c> reference (<c>Nothing</c> in Visual Basic) is passed to a method that does not accept it as a valid argument.</para>
        <para>
             This is a usage error, i.e. it will never occur (the exception will not be thrown) in a correctly written program. Your code should not catch this exception.</para>
      </exception>
      <exception cref="T:OpcLabs.BaseLib.Licensing.LicensingException">The component is not licensed for the operation requested.</exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.Extensions.DAClientMapperExtension.SubscribeTarget(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper,System.Boolean,System.Object,System.Boolean)">
      <summary>
             Executes the "Subscribe" operation on members of given target object.
             </summary>
      <remarks>
             The "Subscribe" operation subscribes to or unsubscribes from changes of an OPC item.
             Only mappings of type <see cref="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMapping" /> that include <see cref="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingOperations.Subscribe" />
             in their <see cref="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemMapping.Operations" /> are affected; other mappings are ignored.
             </remarks>
      <param name="clientMapper">The client mapper object that will perform the operation.</param>
      <param name="active">
        <c>true</c> to subscribe; <c>false</c> to unsubscribe.</param>
      <param name="targetObject">The object being targeted.</param>
      <param name="recurse">
        <c>true</c> to operate on sub-targets (mapped members of the target) recursively; 
            <c>false</c> otherwise.</param>
      <exception cref="T:System.ArgumentNullException">
        <para>
             A <c>null</c> reference (<c>Nothing</c> in Visual Basic) is passed to a method that does not accept it as a valid argument.</para>
        <para>
             This is a usage error, i.e. it will never occur (the exception will not be thrown) in a correctly written program. Your code should not catch this exception.</para>
      </exception>
      <exception cref="T:OpcLabs.BaseLib.Licensing.LicensingException">The component is not licensed for the operation requested.</exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.Extensions.DAClientMapperExtension.WriteTarget(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper,System.Object,System.String,System.Boolean)">
      <overloads>
        <summary>
             Executes the "Write" operation on members of given target object.
             </summary>
        <remarks>
             The "Write" operation writes a value from the mapping source into an OPC item.
             Only mappings of type <see cref="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMapping" /> that include <see cref="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingOperations.Write" />
             in their <see cref="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemMapping.Operations" /> are affected; other mappings are ignored.
             </remarks>
      </overloads>
      <param name="clientMapper">The client mapper object that will perform the operation.</param>
      <param name="targetObject">The object being targeted.</param>
      <param name="mappingTag">The operation will be performed only on mappings tagged with this mapping tag.</param>
      <param name="recurse">
        <c>true</c> to operate on sub-targets (mapped members of the target) recursively; 
             <c>false</c> otherwise.</param>
      <exception cref="T:System.ArgumentException">
        <para>
             One of the arguments provided to a method is not valid.</para>
        <para>
             This is a usage error, i.e. it will never occur (the exception will not be thrown) in a correctly written program. Your code should not catch this exception.</para>
      </exception>
      <exception cref="T:System.ArgumentNullException">
        <para>
             A <c>null</c> reference (<c>Nothing</c> in Visual Basic) is passed to a method that does not accept it as a valid argument.</para>
        <para>
             This is a usage error, i.e. it will never occur (the exception will not be thrown) in a correctly written program. Your code should not catch this exception.</para>
      </exception>
      <exception cref="T:OpcLabs.BaseLib.Licensing.LicensingException">The component is not licensed for the operation requested.</exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.Extensions.DAClientMapperExtension.WriteTarget(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper,System.Object,System.Predicate{System.Collections.Generic.IEnumerable{System.String}},System.Boolean)">
      <summary>
             Executes the "Write" operation on members of given target object.
             </summary>
      <remarks>
             The "Write" operation writes a value from the mapping source into an OPC item.
             Only mappings of type <see cref="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMapping" /> that include <see cref="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingOperations.Write" />
             in their <see cref="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemMapping.Operations" /> are affected; other mappings are ignored.
             </remarks>
      <param name="clientMapper">The client mapper object that will perform the operation.</param>
      <param name="targetObject">The object being targeted.</param>
      <param name="mappingTagsPredicate">The operation will be performed only on mappings whose mapping tags satisfy this 
            predicate.</param>
      <param name="recurse">
        <c>true</c> to operate on sub-targets (mapped members of the target) recursively; 
            <c>false</c> otherwise.</param>
      <exception cref="T:System.ArgumentNullException">
        <para>
             A <c>null</c> reference (<c>Nothing</c> in Visual Basic) is passed to a method that does not accept it as a valid argument.</para>
        <para>
             This is a usage error, i.e. it will never occur (the exception will not be thrown) in a correctly written program. Your code should not catch this exception.</para>
      </exception>
      <exception cref="T:OpcLabs.BaseLib.Licensing.LicensingException">The component is not licensed for the operation requested.</exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.Extensions.DAClientMapperExtension.WriteTarget(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper,System.Object,System.Boolean)">
      <summary>
             Executes the "Write" operation on members of given target object.
             </summary>
      <remarks>
             The "Write" operation writes a value from the mapping source into an OPC item.
             Only mappings of type <see cref="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMapping" /> that include <see cref="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingOperations.Write" />
             in their <see cref="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemMapping.Operations" /> are affected; other mappings are ignored.
             </remarks>
      <param name="clientMapper">The client mapper object that will perform the operation.</param>
      <param name="targetObject">The object being targeted.</param>
      <param name="recurse">
        <c>true</c> to operate on sub-targets (mapped members of the target) recursively; 
            <c>false</c> otherwise.</param>
      <exception cref="T:System.ArgumentNullException">
        <para>
             A <c>null</c> reference (<c>Nothing</c> in Visual Basic) is passed to a method that does not accept it as a valid argument.</para>
        <para>
             This is a usage error, i.e. it will never occur (the exception will not be thrown) in a correctly written program. Your code should not catch this exception.</para>
      </exception>
      <exception cref="T:OpcLabs.BaseLib.Licensing.LicensingException">The component is not licensed for the operation requested.</exception>
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.Extensions.NamespaceDoc">
      <summary>
            This namespace contains extension classes used for live mapping of OPC Data Access sources to targets.
            </summary>
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.NamespaceDoc">
      <summary>
            This namespace contains classes used for live mapping of OPC Data Access sources to targets.
            </summary>
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.Resource1">
      <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.Resource1.ResourceManager">
      <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.Resource1.Culture">
      <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.Resource1.DAClientItemMapping_MappingSource_CurrentlySubscribed">
      <summary>
              Looks up a localized string similar to Cannot change the mapping source of the OPC Data Access item mapping when currently subscribed..
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.Resource1.DAClientMapper_ItemMissingGroupParameters">
      <summary>
              Looks up a localized string similar to The data access item mapping cannot participate in Subscribe operation, because it contains no group parameters. If you are using attribute-based mapping, you might be missing DASubscriptionAttribute. If you do not want the mapping participate in Subscribe operation, you can exclude it using the Operations member of the mapping (or Operations argument of DAItemAttribute). This error should not happen unless you explicitly specify the values in mapping context, because the default mapping context contains de [rest of string was truncated]";.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.Resource1.DAClientMapper_ItemMissingNodeDescriptor">
      <summary>
              Looks up a localized string similar to The member cannot be mapped as OPC data access item, because no node descriptor has been specified in the mapping context. You might be missing the DANodeAttribute..
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.Resource1.DAClientMapper_ItemMissingReadParameters">
      <summary>
              Looks up a localized string similar to The data access item mapping cannot participate in Read operation, because it contains no read parameters. If you are using attribute-based mapping, you might be missing DAReadAttribute. If you do not want the mapping participate in Read operation, you can exclude it using the Operations member of the mapping (or Operations argument of DAItemAttribute). This error should not happen unless you explicitly specify the values in mapping context, because the default mapping context contains default read paramete [rest of string was truncated]";.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.Resource1.DAClientMapper_ItemMissingServerDescriptor">
      <summary>
              Looks up a localized string similar to The member cannot be mapped as OPC data access item, because no server descriptor has been specified in the mapping context. You might be missing the ServerAttribute, or forgot to specify the server descriptor in the mapping context template in the mapper..
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.Resource1.DAClientMapper_PropertyMissingNodeDescriptor">
      <summary>
              Looks up a localized string similar to The member cannot be mapped as OPC data access property, because no node descriptor has been specified in the mapping context. You might be missing the NodeAttribute, or forgot to specify the node descriptor in the mapping context template in the mapper..
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.Resource1.DAClientMapper_PropertyMissingServerDescriptor">
      <summary>
              Looks up a localized string similar to The member cannot be mapped as OPC data access property, because no server descriptor has been specified in the mapping context. You might be missing the ServerAttribute, or forgot to specify the server descriptor in the mapping context template in the mapper..
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.Resource1.DAClientMapper_Write_ImproperCombinationOfMappings">
      <summary>
              Looks up a localized string similar to The OPC-DA client mapper has encountered an improper combination of Vtq, Value, Timestamp and Quality mappings for a Write operation on an item source..
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.Resource1.DAClientMapper_Write_MoreThanOneQualityMapping">
      <summary>
              Looks up a localized string similar to The OPC-DA client mapper has encountered more than one mapping of Quality kind for a Write operation on an item source..
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.Resource1.DAClientMapper_Write_MoreThanOneTimestampMapping">
      <summary>
              Looks up a localized string similar to The OPC-DA client mapper has encountered more than one mapping of Timestamp or TimestampLocal kind for a Write operation on an item source..
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.Resource1.DAClientMapper_Write_MoreThanOneValueMapping">
      <summary>
              Looks up a localized string similar to The OPC-DA client mapper has encountered more than one mapping of Value kind for a Write operation on an item source..
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.Resource1.DAClientMapper_Write_MoreThanOneVtqMapping">
      <summary>
              Looks up a localized string similar to The OPC-DA client mapper has encountered more than one mapping of Vtq kind for a Write operation on an item source..
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.Resource1.DAItemMapping_SetResult_DAVtqResult_LinkingTarget_Null">
      <summary>
              Looks up a localized string similar to Internal error. Null linking target while setting VTQ result in OPC-DA item mapping..
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.Resource1.DAItemMapping_SetResult_OperationResult_LinkingTarget_Null">
      <summary>
              Looks up a localized string similar to Internal error. Null linking target while setting operation result in OPC-DA item mapping..
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.Resource1.DAMapper_DeferredMapNode_NotConfigured">
      <summary>
              Looks up a localized string similar to The current OPC-DA mapper is not configured to support deferred node mapping..
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.Resource1.DAMapper_ObtainItemVtq_QualityIsNull">
      <summary>
              Looks up a localized string similar to The Quality mapping has given a null reference. In client mapping, this error is issued during the Write operation. In server mapping, this error is issued during the Read operation..
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.Resource1.DAMapper_ObtainItemVtq_TimestampIsNull">
      <summary>
              Looks up a localized string similar to The Timestamp mapping has given a null reference. In client mapping, this error is issued during the Write operation. In server mapping, this error is issued during the Read operation..
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.Resource1.DAMapper_ObtainItemVtq_TimestampLocalIsNull">
      <summary>
              Looks up a localized string similar to The TimestampLocal mapping has given a null reference. In client mapping, this error is issued during the Write operation. In server mapping, this error is issued during the Read operation..
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.Resource1.DAMapper_ObtainVtq_VtqIsNull">
      <summary>
              Looks up a localized string similar to The Vtq mapping has given a null reference. In client mapping, this error is issued during the Write operation. In server mapping, this error is issued during the Read operation..
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.Resource1.DAMappingProvider_DAFolderAttribute_Precludes_DAItemAttribute">
      <summary>
              Looks up a localized string similar to DAFolderAttribute cannot be combined with DAItemAttribute..
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.Resource1.DAMappingProvider_DAFolderAttribute_Precludes_DAMemberAttribute">
      <summary>
              Looks up a localized string similar to DAFolderAttribute cannot be combined with DAMemberAttribute..
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.Resource1.DAMappingProvider_DAFolderAttribute_Precludes_DAPropertyAttribute">
      <summary>
              Looks up a localized string similar to DAFolderAttribute cannot be combined with DAPropertyAttribute..
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.Resource1.DAMappingProvider_DAFolderAttribute_Precludes_MetaMemberAttribute">
      <summary>
              Looks up a localized string similar to DAFolderAttribute cannot be combined with MetaMemberAttribute..
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.Resource1.DAMappingProvider_DAItemAttribute_Precludes_DAMemberAttribute">
      <summary>
              Looks up a localized string similar to DAItemAttribute cannot be combined with DAMemberAttribute..
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.Resource1.DAMappingProvider_DAItemAttribute_Precludes_DAPropertyAttribute">
      <summary>
              Looks up a localized string similar to DAItemAttribute cannot be combined with DAPropertyAttribute..
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.Resource1.DAMappingProvider_DAItemAttribute_Precludes_MetaMemberAttribute">
      <summary>
              Looks up a localized string similar to DAItemAttribute cannot be combined with MetaMemberAttribute..
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.Resource1.DAMappingProvider_DAMemberAttribute_Precludes_MetaMemberAttribute">
      <summary>
              Looks up a localized string similar to DAMemberAttribute cannot be combined with MetaMemberAttribute..
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.Resource1.DAMappingProvider_DANodeAttribute_Precludes_DAMemberAttribute">
      <summary>
              Looks up a localized string similar to DANodeAttribute cannot be combined with DAMemberAttribute..
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.Resource1.DAMappingProvider_DANodeAttribute_Precludes_MetaMemberAttribute">
      <summary>
              Looks up a localized string similar to DANodeAttribute cannot be combined with MetaMemberAttribute..
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.Resource1.DAMappingProvider_DAPropertyAttribute_Precludes_DAMemberAttribute">
      <summary>
              Looks up a localized string similar to DAPropertyAttribute cannot be combined with DAMemberAttribute..
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.Resource1.DAMappingProvider_DAPropertyAttribute_Precludes_MetaMemberAttribute">
      <summary>
              Looks up a localized string similar to DAPropertyAttribute cannot be combined with MetaMemberAttribute..
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.Resource1.DAPropertyMapping_SetResult_ValueResult_LinkingTarget_Null">
      <summary>
              Looks up a localized string similar to Internal error. Null linking target while setting value result in OPC-DA property mapping..
            </summary>
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAFolderAttribute">
      <summary>
            Gives information about OPC Data Access folder.
            </summary>
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemAttribute">
      <summary>
            Gives information about OPC Data Access item.
            </summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemAttribute.DefaultAccessPath">
      <summary>
            Default access path. An empty string.
            </summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemAttribute.DefaultCanonicalDataType">
      <summary>
            Default canonical data type. Corresponds to <see cref="F:OpcLabs.BaseLib.ComInterop.VarTypes.Empty" />.
            </summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemAttribute.DefaultRequestedDataType">
      <summary>
            Default requested data type. Corresponds to <see cref="F:OpcLabs.BaseLib.ComInterop.VarTypes.Empty" />.
            </summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemAttribute.DefaultKind">
      <summary>
            Default item mapping kind. Equals to <see cref="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingKind.Value" />.
            </summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemAttribute.DefaultOperations">
      <summary>
            Default item mapping operations. Equals to <see cref="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingOperations.All" />.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemAttribute.#ctor">
      <summary>Initializes a new instance of the class with default data.</summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemAttribute.DefaultItemType">
      <summary>
            Default type (of OPC item). Corresponds to a type of <see cref="T:System.Object" />.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemAttribute.AccessPath">
      <summary>
            An optional data path suggestion to the server.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemAttribute.CanonicalDataType">
      <summary>
            Specifies the canonical data type.
            </summary>
      <remarks>This property is only used in server mapping. It is ignored in client mapping.
            </remarks>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemAttribute.RequestedDataType">
      <summary>
            Specifies the data type requested. Passing <see cref="F:OpcLabs.BaseLib.ComInterop.VarTypes.Empty" /> means that 
            the server's canonical data type should be used.
            </summary>
      <remarks>This property is only used in client mapping. It is ignored in server mapping.
            </remarks>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemAttribute.Kind">
      <summary>
            Specifies how the OPC Data Access item will be mapped.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemAttribute.Operations">
      <summary>
            OPC-DA item mapping operations in which the attributed target should participate.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemAttribute.ItemType">
      <summary>
            The type of OPC item.
            </summary>
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemIdTemplateAttribute">
      <summary>
            Describes how to construct OPC item IDs.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemIdTemplateAttribute.#ctor(System.String)">
      <summary>
            Initializes a new instance of the class with given template string for item Id.
            </summary>
      <param name="itemIdTemplateString">The template string for item Id.</param>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemIdTemplateAttribute.#ctor(System.String,System.String)">
      <summary>
            Initializes a new instance of the class with given template strings for node path and item Id.
            </summary>
      <param name="nodePathTemplateString">The template string for node path.</param>
      <param name="itemIdTemplateString">The template string for item Id.</param>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemIdTemplateAttribute.ItemIdTemplateString">
      <summary>
            The template string for item Id.
            </summary>
      <remarks>
        <para>
          <c>Null</c> is allowed, because it allows to disable the template use from certain level onwards.</para>
        <para>
            Following macros can be used in template strings:
            <ul><li><c>$(ParentNodePath)    </c>The OPC node path of the parent node. Only used with OPC XML.</li><li><c>$(ParentItemId)      </c>The OPC Item Id of parent node.</li><li><c>$(BrowseName)        </c>The browse name of current node.</li></ul></para>
      </remarks>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemIdTemplateAttribute.NodePathTemplateString">
      <summary>
            The template string for node path. Only used with OPC XML.
            </summary>
      <remarks>
        <para>
          <c>Null</c> is allowed, because it allows to disable the template use from certain level onwards.</para>
        <para>
            Following macros can be used in template strings:
            <ul><li><c>$(ParentNodePath)    </c>The OPC node path of the parent node. Only used with OPC XML.</li><li><c>$(ParentItemId)      </c>The OPC Item Id of parent node.</li><li><c>$(BrowseName)        </c>The browse name of current node.</li></ul></para>
      </remarks>
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMemberAttribute">
      <summary>
            Denotes that the member should be involved in OPC Data Access mapping.
            </summary>
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DANodeAttribute">
      <summary>
            Gives information about OPC Data Access node.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DANodeAttribute.BrowsePath">
      <summary>
            Specifies the browse path for the OPC node.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DANodeAttribute.Deferred">
      <summary>
            Determines whether the node will be mapped in a deferred manner.
            </summary>
      <remarks>
            When <c>false, the member will be set to the mapped object itself; when </c><c>true</c>, the member will be set to 
            a function that returns the mapped object (deferred mapping). The <see cref="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMapper.DeferredMapNodeFunction" />
            must be set to provide the deferred mapping function for the given mapping context.
            </remarks>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DANodeAttribute.ItemId">
      <summary>
            Contains OPC item identifier (empty string for the root, null reference if unknown).
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DANodeAttribute.NodePath">
      <summary>
            Contains node path (empty string for the root, null reference if unknown). Only used with OPC XML.
            </summary>
      <remarks>
        <para>
            Not to be confused with the <see cref="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DANodeAttribute.BrowsePath" />, or the access path (only in OPC-DA 1.0, and quite rare). </para>
      </remarks>
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertyAttribute">
      <summary>
            Gives information about OPC Data Access property (on some OPC item).
            </summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertyAttribute.DefaultKind">
      <summary>
            Default property mapping kind. Equals to <see cref="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertyMappingKind.Value" />.
            </summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertyAttribute.DefaultQualifiedName">
      <summary>
            Default qualified name of the property. An empty string.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertyAttribute.#ctor(OpcLabs.EasyOpc.DataAccess.DAPropertyIds)">
      <summary>Initializes a new instance of the class with given enumerated OPC property Id.</summary>
      <param name="propertyIds">Enumerated Id of the OPC property.</param>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertyAttribute.#ctor(System.Int64)">
      <summary>Initializes a new instance of the class with given numerical OPC property Id.</summary>
      <param name="propertyId">Numerical Id of the OPC property.</param>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertyAttribute.DefaultType">
      <summary>
            Default type (of OPC property ). Corresponds to a type of <see cref="T:System.Object" />.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertyAttribute.Kind">
      <summary>
            Specifies how the OPC Data Access property will be mapped.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertyAttribute.PropertyId">
      <summary>
            Numerical Id of the OPC property.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertyAttribute.PropertyType">
      <summary>
            The type of OPC property.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertyAttribute.QualifiedName">
      <summary>
            The qualified name of the OPC property.
            </summary>
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAReadAttribute">
      <summary>
            Gives information about how OPC Data Access reading should be performed.
            </summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAReadAttribute.DefaultDataSource">
      <summary>
            Default data source.
            </summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAReadAttribute.DefaultValueAge">
      <summary>
            Default value age.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAReadAttribute.#ctor">
      <summary>Initializes a new instance of the class with default data.</summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAReadAttribute.DataSource">
      <summary>Selects the data source for OPC reads (from device, from OPC cache, or dynamically determined).</summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAReadAttribute.ValueAge">
      <summary>Determines the age of value you would like to obtain (in milliseconds).</summary>
      <remarks>
        <para>This value is significant only when the <see cref="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAReadAttribute.DataSource" /> property is set to 
            ByValueAge. </para>
        <para>The value must be greater than or equal to zero, or it must be equal to 
            <see cref="F:System.Threading.Timeout.Infinite" />.</para>
        <para>When the value is <see cref="F:System.Threading.Timeout.Infinite" />, the value will always be provided from 
            the memory, i.e. without actually accessing the OPC server.</para>
      </remarks>
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DASubscriptionAttribute">
      <summary>
            Gives information about how the OPC Data Access subscription should be performed, such as the requested update rate.
            </summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DASubscriptionAttribute.DefaultLocale">
      <summary>
            Default locale. Equals to zero.
            </summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DASubscriptionAttribute.DefaultPercentDeadband">
      <summary>
            Default percent deadband. Equals to zero (0.0).
            </summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DASubscriptionAttribute.DefaultRequestedUpdateRate">
      <summary>
            Default requested update rate. Equals to <see cref="F:System.Threading.Timeout.Infinite" />, i.e. no implicit updates.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DASubscriptionAttribute.#ctor">
      <summary>Initializes a new instance of the class with default data.</summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DASubscriptionAttribute.Locale">
      <summary>Gets or sets the language to be used by the server when returning values.</summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DASubscriptionAttribute.RequestedUpdateRate">
      <summary>Gets or sets the requested update rate</summary>
      <remarks>
        <para>How often should the updates be received (number of milliseconds).</para>
        <para>The value must be greater than zero, or it must be equal to 
            <see cref="F:System.Threading.Timeout.Infinite" />.</para>
      </remarks>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DASubscriptionAttribute.PercentDeadband">
      <summary>Gets or sets the percent change in an item value that will cause an update.</summary>
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DATypeAttribute">
      <summary>
            Denotes that the type should be involved in OPC Data Access mapping.
            </summary>
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingKind">
      <summary>
            Specifies how the OPC Data Access item will be mapped.
            </summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingKind.Result">
      <summary>
            Map the operation result, as <see cref="T:OpcLabs.BaseLib.OperationModel.OperationResult" /> or a derived type specific for the operation.
            </summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingKind.ErrorId">
      <summary>
            Map the error ID, as <see cref="T:System.String" />.
            </summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingKind.Exception">
      <summary>
            Map the exception, as <see cref="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingKind.Exception" /> or a derived type. <c>null</c> if the operation has been successful.
            </summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingKind.ErrorMessage">
      <summary>
            Map the error message, as <see cref="T:System.String" />. An empty string if the operation has been successful.
            </summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingKind.StatusInfo">
      <summary>
            Map the status information, as <see cref="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingKind.StatusInfo" />.
            </summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingKind.Vtq">
      <summary>
            Map the item value/timestamp/quality combination, as <see cref="T:OpcLabs.EasyOpc.DataAccess.DAVtq" /> or a generic <c>DAVtq</c>.
            <para><b>Remarks:</b></para><para>
            The linking target value is not changed if the operation resulted in an exception.
            </para></summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingKind.Value">
      <summary>
            Map the item value, as <see cref="T:System.Object" /> or a specific type. This is the default mapping kind.
            <para><b>Remarks:</b></para><para>
            The linking target value is not changed if the operation resulted in an exception.
            </para></summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingKind.Timestamp">
      <summary>
            Map the timestamp, as <see cref="T:System.DateTime" />. In UTC.
            <para><b>Remarks:</b></para><para>
            The linking target value is not changed if the operation resulted in an exception.
            </para></summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingKind.TimestampLocal">
      <summary>
            Map the timestamp, as <see cref="T:System.DateTime" />. In local time.
            <para><b>Remarks:</b></para><para>
            The linking target value is not changed if the operation resulted in an exception.
            </para></summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingKind.Quality">
      <summary>
            Map the OPC quality, as <see cref="T:OpcLabs.EasyOpc.DataAccess.DAQuality" />.
            <para><b>Remarks:</b></para><para>
            The linking target value is not changed if the operation resulted in an exception.
            </para></summary>
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingOperations">
      <summary>
            Possible mapping operations on OPC Data Access items.
            </summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingOperations.None">
      <summary>
            No operation.
            </summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingOperations.Read">
      <summary>
            A Read operation.
            </summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingOperations.Write">
      <summary>
            A Write operation.
            </summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingOperations.Subscribe">
      <summary>
            A Subscribe operation.
            </summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingOperations.ReadAndWrite">
      <summary>
            Read and Write operations.
            </summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingOperations.ReadAndSubscribe">
      <summary>
            Read and Subscribe operations.
            </summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingOperations.WriteAndSubscribe">
      <summary>
            Write and Subscribe operations.
            </summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingOperations.All">
      <summary>
            All operations (Read, Write, Subscribe).
            </summary>
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertyMappingKind">
      <summary>
            Specifies how the OPC Data Access property will be mapped.
            </summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertyMappingKind.Result">
      <summary>
            Map the operation results, as <see cref="T:OpcLabs.BaseLib.OperationModel.OperationResult" /> or a derived type specific for the operation.
            </summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertyMappingKind.ErrorId">
      <summary>
            Map the error ID, as <see cref="T:System.String" />.
            </summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertyMappingKind.Exception">
      <summary>
            Map the exception, as <see cref="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertyMappingKind.Exception" /> or a derived type. <c>null</c> if the operation has been successful.
            </summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertyMappingKind.ErrorMessage">
      <summary>
            Map the error message, as <see cref="T:System.String" />. An empty string if the operation has been successful.
            </summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertyMappingKind.StatusInfo">
      <summary>
            Map the status information, as <see cref="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertyMappingKind.StatusInfo" />.
            </summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertyMappingKind.Value">
      <summary>
            Map the property value, as <see cref="T:System.Object" /> or a specific type. This is the default mapping kind.
            <para><b>Remarks:</b></para><para>
            The linking target value is not changed if the operation resulted in an exception.
            </para></summary>
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMemberMappingDefinition">
      <summary>
            Member mapping definition for members involved in OPC Data Access mapping.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMemberMappingDefinition.#ctor(System.String)">
      <inheritdoc cref="T:OpcLabs.EasyOpc.LiveMapping.CommonMemberMappingDefinition" />
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMemberMappingDefinition.FolderAttribute">
      <summary>
            Contains the <c>DAFolder</c> attribute, if present for this member.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMemberMappingDefinition.MemberAttribute">
      <summary>
            Contains the <c>DAMember</c> attribute, if present for this member.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMemberMappingDefinition.NodeAttribute">
      <summary>
            Contains the <c>DANode</c> attribute, if present for this member.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMemberMappingDefinition.ItemAttribute">
      <summary>
            Contains the <c>DAItem</c> attribute, if present for this member.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMemberMappingDefinition.SubscriptionAttribute">
      <summary>
            Contains the <c>DASubscription</c> attribute, if present for this member.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMemberMappingDefinition.PropertyAttribute">
      <summary>
            Contains the <c>DAProperty</c> attribute, if present for this member.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMemberMappingDefinition.ReadAttribute">
      <summary>
            Contains the <c>DARead</c> attribute, if present for this member.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMemberMappingDefinition.LoadFromMemberInfo(System.Reflection.MemberInfo,OpcLabs.BaseLib.LiveMapping.AbstractMappingProvider)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.LiveMapping.CommonMemberMappingDefinition.LoadFromMemberInfo(System.Reflection.MemberInfo,OpcLabs.BaseLib.LiveMapping.AbstractMappingProvider)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMemberMappingDefinition.ShouldLoadFromMemberInfo(System.Reflection.MemberInfo)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.LiveMapping.CommonMemberMappingDefinition.ShouldLoadFromMemberInfo(System.Reflection.MemberInfo)" />
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DATypeMappingDefinition">
      <summary>
            Type mapping definitions for a type that is mapped to OPC Data Access.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DATypeMappingDefinition.ItemIdTemplateAttribute">
      <summary>
            Contains the <c>DAItemIdTemplate</c> attribute, if present for this member.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DATypeMappingDefinition.ReadAttribute">
      <summary>
            Contains the <c>DARead</c> attribute, if present for this member.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DATypeMappingDefinition.SubscriptionAttribute">
      <summary>
            Contains the <c>DASubscription</c> attribute, if present for this member.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DATypeMappingDefinition.LoadFromType(System.Type,OpcLabs.BaseLib.LiveMapping.AbstractMappingProvider)">
      <inheritdoc cref="M:OpcLabs.BaseLib.LiveMapping.AbstractTypeMappingDefinition.LoadFromType(System.Type,OpcLabs.BaseLib.LiveMapping.AbstractMappingProvider)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DATypeMappingDefinition.ShouldLoadFromType(System.Type)">
      <inheritdoc cref="M:OpcLabs.BaseLib.LiveMapping.AbstractTypeMappingDefinition.ShouldLoadFromType(System.Type)" />
      <remarks>The type must be marked with <see cref="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DATypeAttribute" /> should it be loaded.</remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DATypeMappingDefinition.NewMemberMappingDefinition(System.String)">
      <inheritdoc cref="M:OpcLabs.BaseLib.LiveMapping.AbstractTypeMappingDefinition.NewMemberMappingDefinition(System.String)" />
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientPropertySource">
      <summary>
            A client mapping source that represents OPC Data Access property (on an OPC item).
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientPropertySource.#ctor(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor)">
      <summary>
            Initializes a new instance of the class, with given OPC server and property descriptors.
            </summary>
      <param name="serverDescriptor">The OPC server involved in the operation.</param>
      <param name="nodeDescriptor">The OPC node involved in the operation.</param>
      <param name="propertyDescriptor">The descriptor of the OPC property involved in the operation.</param>
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAFolderSource">
      <summary>
            An abstract mapping source that represents OPC Data Access folder.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAFolderSource.#ctor(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
      <summary>
            Initializes a new instance of the class, with given OPC server and node descriptors.
            </summary>
      <param name="serverDescriptor">The OPC server involved in the operation.</param>
      <param name="nodeDescriptor">The OPC item involved in the operation.</param>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAFolderSource.Mappings">
      <summary>
            The mappings associated with this mapping source.
            </summary>
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemSource">
      <summary>
            An abstract mapping source that represents OPC Data Access item.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemSource.#ctor(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DAItemDescriptor)">
      <summary>
            Initializes a new instance of the class, with given OPC server and item descriptors.
            </summary>
      <param name="serverDescriptor">The OPC server involved in the operation.</param>
      <param name="itemDescriptor">The OPC item involved in the operation.</param>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemSource.Mappings">
      <summary>
            The mappings associated with this mapping source.
            </summary>
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingSource">
      <summary>
            A mapping source for OPC Data Access specification.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingSource.#ctor(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
      <summary>
            Initializes a new instance of the class, with given OPC server and node descriptors.
            </summary>
      <param name="serverDescriptor">The OPC server involved in the operation.</param>
      <param name="nodeDescriptor">The descriptor of the OPC node involved in the operation.</param>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingSource.op_Equality(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingSource,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingSource)">
      <summary>Determines whether the two objects are equal.</summary>
      <param name="left">First object to be compared.</param>
      <param name="right">Second object to be compared.</param>
      <returns>
        <c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingSource.op_Inequality(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingSource,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingSource)">
      <summary>Determines whether the two objects are not equal.</summary>
      <param name="left">First object to be compared.</param>
      <param name="right">Second object to be compared.</param>
      <returns>
        <c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingSource.NodeDescriptor">
      <summary>
            The descriptor of the OPC node involved in the operation.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingSource.Equals(System.Object)">
      <inheritdoc cref="M:System.Object.Equals(System.Object)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingSource.GetHashCode">
      <inheritdoc cref="M:System.Object.GetHashCode" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingSource.Equals(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAMappingSource)">
      <summary>
            Determines whether the current object is the same as other object.
            </summary>
      <param name="other">Object to be compared.</param>
      <returns>True if the objects are the same, otherwise false.</returns>
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertySource">
      <summary>
            An abstract mapping source that represents OPC Data Access property (on an OPC item).
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertySource.#ctor(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DAPropertyDescriptor)">
      <summary>
            Initializes a new instance of the class, with given OPC server, node and property descriptors.
            </summary>
      <param name="serverDescriptor">The OPC server involved in the operation.</param>
      <param name="nodeDescriptor">The OPC node involved in the operation.</param>
      <param name="propertyDescriptor">The descriptor of the OPC property involved in the operation.</param>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertySource.op_Equality(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertySource,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertySource)">
      <summary>Determines whether the two objects are equal.</summary>
      <param name="left">First object to be compared.</param>
      <param name="right">Second object to be compared.</param>
      <returns>
        <c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertySource.op_Inequality(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertySource,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertySource)">
      <summary>Determines whether the two objects are not equal.</summary>
      <param name="left">First object to be compared.</param>
      <param name="right">Second object to be compared.</param>
      <returns>
        <c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertySource.Kind">
      <summary>
            Specifies how the OPC Data Access property will be mapped.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertySource.PropertyDescriptor">
      <summary>
            The descriptor of the OPC property involved in the operation.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertySource.Equals(System.Object)">
      <inheritdoc cref="M:System.Object.Equals(System.Object)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertySource.GetHashCode">
      <inheritdoc cref="M:System.Object.GetHashCode" />
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertySource.Mappings">
      <summary>
            The mappings associated with this mapping source.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertySource.Equals(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertySource)">
      <summary>
            Determines whether the current object is the same as other object.
            </summary>
      <param name="other">Object to be compared.</param>
      <returns>True if the objects are the same, otherwise false.</returns>
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemMapping">
      <summary>
            A client mapping for OPC Data Access items.
            </summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemMapping.DefaultOperations">
      <summary>
            The default item mapping operations. Equals to <see cref="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingOperations.All" />'
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemMapping.#ctor(OpcLabs.BaseLib.LiveMapping.AbstractMapping,System.Type,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingKind,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingOperations)">
      <summary>
            Initializes a new instance of the class, with given parent mapping, OPC item type, mapping kind, and mapping 
            operations in which this mapping should participate.
            </summary>
      <param name="parent">The parent of the newly created mapping. May be <c>null</c>.</param>
      <param name="itemType">The type of OPC item.</param>
      <param name="kind">Specifies how the OPC Data Access item will be mapped.</param>
      <param name="operations">The mapping operations in which this mapping will participate.</param>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemMapping.#ctor(System.Type,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingKind,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingOperations)">
      <summary>
            Initializes a new instance of the class, with given OPC item type, mapping kind, and mapping operations
            in which this mapping should participate.
            </summary>
      <param name="itemType">The type of OPC item.</param>
      <param name="kind">Specifies how the OPC Data Access item will be mapped.</param>
      <param name="operations">The mapping operations in which this mapping will participate.</param>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemMapping.#ctor(System.Type,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingKind)">
      <summary>
            Initializes a new instance of the class, with given OPC item type, and mapping kind.
            </summary>
      <param name="itemType">The type of OPC item.</param>
      <param name="kind">Specifies how the OPC Data Access item will be mapped.</param>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemMapping.#ctor(System.Type)">
      <summary>
            Initializes a new instance of the class, with given OPC item type.
            </summary>
      <param name="itemType">The type of OPC item.</param>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemMapping.MappingSource">
      <inheritdoc cref="P:OpcLabs.BaseLib.LiveMapping.AbstractMapping.MappingSource" />
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemMapping.Operations">
      <summary>
            The mapping operations in which this mapping will participate.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemMapping.Subscribed">
      <summary>
            Determines whether this mapping is currently subscribed.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemMapping.Get(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientOperationContext)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.IDAClientMapping.Get(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientOperationContext)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemMapping.Read(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientOperationContext)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.IDAClientMapping.Read(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientOperationContext)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemMapping.Subscribe(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientOperationContext,System.Boolean)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.IDAClientMapping.Subscribe(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientOperationContext,System.Boolean)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientItemMapping.Write(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientOperationContext)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.IDAClientMapping.Write(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientOperationContext)" />
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientPropertyMapping">
      <summary>
            A client mapping for OPC Data Access properties.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientPropertyMapping.#ctor(OpcLabs.BaseLib.LiveMapping.AbstractMapping,System.Type,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertyMappingKind)">
      <summary>
            Initializes a new instance of the class, with given parent mapping, OPC property type, and mapping kind.
            </summary>
      <param name="parent">The parent of the newly created mapping. May be <c>null</c>.</param>
      <param name="propertyType">The type of OPC property.</param>
      <param name="kind">Specifies how the OPC Data Access property will be mapped.</param>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientPropertyMapping.#ctor(System.Type,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertyMappingKind)">
      <summary>
            Initializes a new instance of the class, with given OPC property type, and mapping kind.
            </summary>
      <param name="propertyType">The type of OPC property.</param>
      <param name="kind">Specifies how the OPC Data Access property will be mapped.</param>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientPropertyMapping.#ctor(System.Type)">
      <summary>
            Initializes a new instance of the class, with given OPC property type.
            </summary>
      <param name="propertyType">The type of OPC property.</param>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientPropertyMapping.Get(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientOperationContext)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.IDAClientMapping.Get(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientOperationContext)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientPropertyMapping.Read(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientOperationContext)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.IDAClientMapping.Read(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientOperationContext)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientPropertyMapping.Subscribe(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientOperationContext,System.Boolean)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.IDAClientMapping.Subscribe(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientOperationContext,System.Boolean)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientPropertyMapping.Write(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientOperationContext)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.IDAClientMapping.Write(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientOperationContext)" />
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAFolderMapping">
      <summary>
            An abstract mapping for OPC Data Access folders.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAFolderMapping.#ctor(OpcLabs.BaseLib.LiveMapping.AbstractMapping)">
      <summary>
            Initializes a new instance of the class, with given parent mapping.
            </summary>
      <param name="parent">The parent of the newly created mapping. May be <c>null</c>.</param>
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMapping">
      <summary>
            An abstract mapping for OPC Data Access items.
            </summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMapping.DefaultKind">
      <summary>
            The default item mapping kind. Equals to <see cref="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingKind.Value" />.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMapping.#ctor(OpcLabs.BaseLib.LiveMapping.AbstractMapping,System.Type,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMappingKind)">
      <summary>
            Initializes a new instance of the class, with given parent mapping, OPC item type, and mapping kind.
            </summary>
      <param name="parent">The parent of the newly created mapping. May be <c>null</c>.</param>
      <param name="itemType">The type of OPC item.</param>
      <param name="kind">Specifies how the OPC Data Access item will be mapped.</param>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMapping.ItemType">
      <summary>
            The type of OPC item.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMapping.Kind">
      <summary>
            Specifies how the OPC Data Access item will be mapped.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMapping.SetResult(OpcLabs.EasyOpc.DataAccess.OperationModel.DAVtqResult)">
      <summary>
            Uses the given <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.DAVtqResult" /> object to set the value of the linking target.
            </summary>
      <param name="vtqResult">The result object that contains the data for the target.</param>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMapping.SetResult(OpcLabs.BaseLib.OperationModel.OperationResult)">
      <summary>
            Uses the given <see cref="T:OpcLabs.BaseLib.OperationModel.OperationResult" /> object to set the value of the linking target.
            </summary>
      <param name="operationResult">The result object that contains the data for the target.</param>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMapping.ShouldSerializeItemType">
      <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAItemMapping.ItemType" /> is in its default state.
            </summary>
      <returns>
        <c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertyMapping">
      <summary>
            An abstract mapping for OPC Data Access properties.
            </summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertyMapping.DefaultKind">
      <summary>
            The default property mapping kind. Equals to <see cref="F:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertyMappingKind.Value" />.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertyMapping.#ctor(OpcLabs.BaseLib.LiveMapping.AbstractMapping,System.Type,OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertyMappingKind)">
      <summary>
            Initializes a new instance of the class, with given parent mapping, OPC property type, and mapping kind.
            </summary>
      <param name="parent">The parent of the newly created mapping. May be <c>null</c>.</param>
      <param name="propertyType">The type of OPC property.</param>
      <param name="kind">Specifies how the OPC Data Access property will be mapped.</param>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertyMapping.Kind">
      <summary>
            Specifies how the OPC Data Access property will be mapped.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertyMapping.MappingSource">
      <inheritdoc cref="P:OpcLabs.BaseLib.LiveMapping.AbstractMapping.MappingSource" />
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertyMapping.PropertyType">
      <summary>
            The type of OPC property.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertyMapping.SetResult(OpcLabs.BaseLib.OperationModel.ValueResult)">
      <summary>
            Uses the given <see cref="T:OpcLabs.BaseLib.OperationModel.ValueResult" /> object to set the value of the linking target.
            </summary>
      <param name="valueResult">The result object that contains the data for the target.</param>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertyMapping.ShouldSerializePropertyType">
      <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAPropertyMapping.PropertyType" /> is in its default state.
            </summary>
      <returns>
        <c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.LiveMapping.IDAClientMapping">
      <exclude />
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.NamespaceDoc">
      <summary>
            This namespace contains classes that facilitate easy work with OPC Data Access.
            </summary>
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.Reactive.DAItemChangedObservable">
      <summary>
             Static class with methods to create <see cref="T:OpcLabs.EasyOpc.DataAccess.Reactive.DAItemChangedObservable`1" /> in various ways.
             </summary>
      <example>
        <h3>.NET</h3>
        <code source="..\..\Net\Examples\CSharp\VisualStudio\Console\ReactiveDocExamples\DataAccess\_DAItemChangedObservable\Subscribe.Main1.cs" lang="CSharp" title="C#" region="Example" />
      </example>
      <example>
        <h3>.NET</h3>
        <code source="..\..\Net\Examples\CSharp\VisualStudio\Console\ReactiveDocExamples\DataAccess\_DAItemChangedObservable\Subscribe.PercentDeadband.cs" lang="CSharp" title="C#" region="Example" />
      </example>
      <example>
        <h3>.NET</h3>
        <code source="..\..\Net\Examples\CSharp\VisualStudio\Console\ReactiveDocExamples\DataAccess\_DAReactive\Composition.Pipeline.cs" lang="CSharp" title="C#" region="Example" />
      </example>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAItemChangedObservable.Create``1(OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemGroupArguments)">
      <summary>
            Creates a new item change observable for OPC item given by <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemGroupArguments" /> object.
            </summary>
      <param name="args">Contains an OPC server and item descriptors, and OPC group parameters.</param>
      <returns>Returns an observable for changes in the given OPC item.</returns>
      <remarks>
            The <see cref="P:OpcLabs.EasyOpc.DataAccess.Reactive.DAReactive.DefaultClientSelector" /> selector will be used for OPC Data Access operations.
            </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAItemChangedObservable.Create``1(System.Collections.Generic.IEnumerable{OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemGroupArguments})">
      <summary>
            Creates a new item change observable for multiple OPC items given by <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemGroupArguments" /> objects.
            </summary>
      <param name="arguments">For each OPC item, contains its OPC server and item descriptors, and OPC group parameters.
            </param>
      <returns>Returns an observable for changes in the given OPC item.</returns>
      <remarks>
            The <see cref="P:OpcLabs.EasyOpc.DataAccess.Reactive.DAReactive.DefaultClientSelector" /> selector will be used for OPC Data Access operations.
            </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAItemChangedObservable.Create``1(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DAItemDescriptor,OpcLabs.EasyOpc.DataAccess.DAGroupParameters,System.Object)">
      <summary>
            Creates a new item change observable for OPC item given by OPC server and item descriptors, and OPC group parameters
            object.
            </summary>
      <param name="serverDescriptor">The OPC server involved in the operation.</param>
      <param name="itemDescriptor">The OPC item to be subscribed to.</param>
      <param name="groupParameters">An object containing subscription parameters, such as the requested update rate.
            </param>
      <param name="state">The state object (can be any object supplied by your code); available in notifications. </param>
      <returns>Returns an observable for changes in the given OPC item.</returns>
      <remarks>
            The <see cref="P:OpcLabs.EasyOpc.DataAccess.Reactive.DAReactive.DefaultClientSelector" /> selector will be used for OPC Data Access operations.
            </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAItemChangedObservable.Create``1(System.String,System.String,System.String,System.Int32)">
      <summary>
            Creates a new item change observable for OPC item, specifying machine name, server class, item ID, requested update 
            rate, and percent deadband.
            </summary>
      <param name="machineName">Name of the machine (empty string for local computer).</param>
      <param name="serverClass">Contains ProgID of the OPC server.</param>
      <param name="itemId">ID of the item that will be subscribed to.</param>
      <param name="requestedUpdateRate">How often should the updates be received (number of milliseconds)</param>
      <returns>Returns an observable for changes in the given OPC item.</returns>
      <remarks>
            The <see cref="P:OpcLabs.EasyOpc.DataAccess.Reactive.DAReactive.DefaultClientSelector" /> selector will be used for OPC Data Access operations.
            </remarks>
      <example>
        <h3>.NET</h3>
        <code source="..\..\Net\Examples\CSharp\VisualStudio\Console\ReactiveDocExamples\DataAccess\_DAItemChangedObservable\Subscribe.Main1.cs" lang="CSharp" title="C#" region="Example" />
      </example>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAItemChangedObservable.Create``1(System.String,System.String,System.String,System.Int32,System.Single)">
      <summary>
            Creates a new item change observable for OPC item, specifying machine name, server class, item ID, requested update 
            rate, and percent deadband.
            </summary>
      <param name="machineName">Name of the machine (empty string for local computer).</param>
      <param name="serverClass">Contains ProgID of the OPC server.</param>
      <param name="itemId">ID of the item that will be subscribed to.</param>
      <param name="requestedUpdateRate">How often should the updates be received (number of milliseconds)</param>
      <param name="percentDeadband">The percent change in an item value that will cause an update</param>
      <returns>Returns an observable for changes in the given OPC item.</returns>
      <remarks>
            The <see cref="P:OpcLabs.EasyOpc.DataAccess.Reactive.DAReactive.DefaultClientSelector" /> selector will be used for OPC Data Access operations.
            </remarks>
      <example>
        <h3>.NET</h3>
        <code source="..\..\Net\Examples\CSharp\VisualStudio\Console\ReactiveDocExamples\DataAccess\_DAItemChangedObservable\Subscribe.PercentDeadband.cs" lang="CSharp" title="C#" region="Example" />
      </example>
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.Reactive.DAItemChangedObservable`1">
      <summary>
             Push-based notification provider (observable) for changes in OPC Data Access item(s).
             </summary>
      <typeparam name="TValue">The type of OPC values provided.</typeparam>
      <remarks>
             The notifications will contain <see cref="T:OpcLabs.EasyOpc.DataAccess.Generic.DAVtq`1" /> for each OPC item change. All OPC items in one
             <see cref="T:OpcLabs.EasyOpc.DataAccess.Reactive.DAItemChangedObservable`1" /> must be assignable to the <typeparamref name="TValue" /> type.
             Typically, you will create the observable for items of the same type. You can also choose a common denominator type;
             for example, if you use <see cref="T:System.Object" /> for <typeparamref name="TValue" />, you can use it in a type-less manner).
             </remarks>
      <example>
        <h3>.NET</h3>
        <code source="..\..\Net\Examples\CSharp\VisualStudio\Console\ReactiveDocExamples\DataAccess\_DAItemChangedObservable\Subscribe.Main1.cs" lang="CSharp" title="C#" region="Example" />
      </example>
      <example>
        <h3>.NET</h3>
        <code source="..\..\Net\Examples\CSharp\VisualStudio\Console\ReactiveDocExamples\DataAccess\_DAItemChangedObservable\Subscribe.PercentDeadband.cs" lang="CSharp" title="C#" region="Example" />
      </example>
      <example>
        <h3>.NET</h3>
        <code source="..\..\Net\Examples\CSharp\VisualStudio\Console\ReactiveDocExamples\DataAccess\_DAReactive\Composition.Pipeline.cs" lang="CSharp" title="C#" region="Example" />
      </example>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAItemChangedObservable`1.#ctor">
      <overloads>
        <summary>
            Create a new instance of the item change observable.
            </summary>
      </overloads>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAItemChangedObservable`1.#ctor(OpcLabs.EasyOpc.DataAccess.EasyDAClientSelector,OpcLabs.BaseLib.Aliasing.Internal.IAliasProvider,System.Collections.Generic.IEnumerable{OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemGroupArguments})">
      <summary>
            Create a new instance of the item change observable.
            </summary>
      <summary>
            Create a new instance of the item change observable, with specified client object selector, alias provider, and an enumerable
            containing the OPC items to be observed, and their OPC group parameters.
            </summary>
      <param name="clientSelector">The selector of client object that is used for OPC Data Access operations.</param>
      <param name="aliasProvider">The alias provider to be used for resolving aliases by this reactive object.</param>
      <param name="arguments">For each OPC item, contains its OPC server and item descriptors, and OPC group parameters.
            </param>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAItemChangedObservable`1.#ctor(OpcLabs.EasyOpc.DataAccess.Reactive.DAItemChangedObservable{`0})">
      <summary>Initializes a new instance of the class, copying values from a given object.</summary>
      <param name="itemChangedObservable">The object to be copied from.</param>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAItemChangedObservable`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Create a new instance of the item change observable.
            </summary>
      <summary>Initializes a new instance of the class with serialized data.</summary>
      <param name="info">The SerializationInfo that holds the serialized object data.</param>
      <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAItemChangedObservable`1.op_Equality(OpcLabs.EasyOpc.DataAccess.Reactive.DAItemChangedObservable{`0},OpcLabs.EasyOpc.DataAccess.Reactive.DAItemChangedObservable{`0})">
      <summary>Determines whether the two objects are equal.</summary>
      <param name="left">First object to be compared.</param>
      <param name="right">Second object to be compared.</param>
      <returns>
        <c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAItemChangedObservable`1.op_Inequality(OpcLabs.EasyOpc.DataAccess.Reactive.DAItemChangedObservable{`0},OpcLabs.EasyOpc.DataAccess.Reactive.DAItemChangedObservable{`0})">
      <summary>Determines whether the two objects are not equal.</summary>
      <param name="left">First object to be compared.</param>
      <param name="right">Second object to be compared.</param>
      <returns>
        <c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Reactive.DAItemChangedObservable`1.Arguments">
      <summary>
            For each OPC item, contains its OPC server and item descriptors, and OPC group parameters.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAItemChangedObservable`1.Equals(OpcLabs.EasyOpc.DataAccess.Reactive.DAItemChangedObservable{`0})">
      <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.DataAccess.Reactive.DAItemChangedObservable`1" /> is equal to the current object.
            </summary>
      <param name="other">The <see cref="T:OpcLabs.EasyOpc.DataAccess.Reactive.DAItemChangedObservable`1" /> to compare with the current object.</param>
      <returns>
        <c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAItemChangedObservable`1.Equals(System.Object)">
      <inheritdoc cref="M:System.Object.Equals(System.Object)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAItemChangedObservable`1.GetHashCode">
      <inheritdoc cref="M:System.Object.GetHashCode" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAItemChangedObservable`1.Clone">
      <inheritdoc />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAItemChangedObservable`1.Subscribe(System.IObserver{OpcLabs.EasyOpc.DataAccess.Generic.EasyDAItemChangedEventArgs{`0}})">
      <inheritdoc cref="M:System.IObservable`1.Subscribe(System.IObserver{`0})" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAItemChangedObservable`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAItemChangedObservable`1.ReadXmlElement(System.Xml.XmlReader)">
      <inheritdoc cref="M:OpcLabs.BaseLib.Info.ReadXmlElement(System.Xml.XmlReader)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAItemChangedObservable`1.WriteXmlElement(System.Xml.XmlWriter)">
      <inheritdoc cref="M:OpcLabs.BaseLib.Info.WriteXmlElement(System.Xml.XmlWriter)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAItemChangedObservable`1.DeepClone">
      <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
      <returns>A new object that is a deep copy of this instance.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAItemChangedObservable`1.CreateItemSubscriptionArguments(System.IObserver{OpcLabs.EasyOpc.DataAccess.Generic.EasyDAItemChangedEventArgs{`0}},OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemGroupArguments)">
      <summary>
            Infrastructure.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAItemChangedObservable`1.ShouldSerializeArguments">
      <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.Reactive.DAItemChangedObservable`1.Arguments" /> is in its default state.
            </summary>
      <returns>
        <c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.Reactive.DAReactive">
      <summary>
            Base class for OPC Data Access push-based notification providers (observables) and receivers (observers).
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAReactive.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the class with serialized data.</summary>
      <param name="info">The SerializationInfo that holds the serialized object data.</param>
      <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Reactive.DAReactive.DefaultAliasProvider">
      <summary>
            The default alias provider  that will be used when new instances of <see cref="T:OpcLabs.EasyOpc.DataAccess.Reactive.DAReactive" /> are created, and no
            alias provider is specified. 
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Reactive.DAReactive.DefaultClientSelector">
      <summary>
            The default client selector that will be used when new instances of <see cref="T:OpcLabs.EasyOpc.DataAccess.Reactive.DAReactive" /> are created, and no
            client selector is specified. 
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAReactive.op_Equality(OpcLabs.EasyOpc.DataAccess.Reactive.DAReactive,OpcLabs.EasyOpc.DataAccess.Reactive.DAReactive)">
      <summary>Determines whether the two objects are equal.</summary>
      <param name="left">First object to be compared.</param>
      <param name="right">Second object to be compared.</param>
      <returns>
        <c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAReactive.op_Inequality(OpcLabs.EasyOpc.DataAccess.Reactive.DAReactive,OpcLabs.EasyOpc.DataAccess.Reactive.DAReactive)">
      <summary>Determines whether the two objects are not equal.</summary>
      <param name="left">First object to be compared.</param>
      <param name="right">Second object to be compared.</param>
      <returns>
        <c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Reactive.DAReactive.AliasProvider">
      <summary>
            The alias provider to be used for resolving aliases by this reactive object.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Reactive.DAReactive.ClientSelector">
      <summary>
            The selector of the client object that is used for OPC Data Access operations.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAReactive.Equals(System.Object)">
      <inheritdoc cref="M:System.Object.Equals(System.Object)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAReactive.GetHashCode">
      <inheritdoc cref="M:System.Object.GetHashCode" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAReactive.Clone">
      <inheritdoc />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAReactive.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAReactive.Equals(OpcLabs.EasyOpc.DataAccess.Reactive.DAReactive)">
      <summary>
            Infrastructure.
            </summary>
      <param name="other">The object to compare members to.</param>
      <returns>Returns <c>true</c> iff the member values equal.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAReactive.ObtainClient">
      <summary>
            Obtains a client object to be used by this reactive object.
            </summary>
      <returns>Returns the <see cref="T:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore" /> according to the current client selector.</returns>
      <exception cref="T:OpcLabs.BaseLib.Licensing.LicensingException">The component is not licensed for the operation requested.</exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAReactive.ReadXmlElement(System.Xml.XmlReader)">
      <inheritdoc cref="M:OpcLabs.BaseLib.Info.ReadXmlElement(System.Xml.XmlReader)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAReactive.WriteXmlElement(System.Xml.XmlWriter)">
      <inheritdoc cref="M:OpcLabs.BaseLib.Info.WriteXmlElement(System.Xml.XmlWriter)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAReactive.DeepClone">
      <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
      <returns>A new object that is a deep copy of this instance.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAReactive.ShouldSerializeAliasProvider">
      <summary>
            Determines whether the <see cref="P:OpcLabs.EasyOpc.DataAccess.Reactive.DAReactive.AliasProvider" /> is not at its default value.
            </summary>
      <returns>
        <c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAReactive.ShouldSerializeClientSelector">
      <summary>
            Determines whether the <see cref="P:OpcLabs.EasyOpc.DataAccess.Reactive.DAReactive.ClientSelector" /> is not at its default value.
            </summary>
      <returns>
        <c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.Reactive.DAWriteItemValueObserver">
      <summary>
             Static class with methods to create <see cref="T:OpcLabs.EasyOpc.DataAccess.Reactive.DAWriteItemValueObserver`1" /> in various ways.
             </summary>
      <example>
        <h3>.NET</h3>
        <code source="..\..\Net\Examples\CSharp\VisualStudio\Console\ReactiveDocExamples\DataAccess\_DAWriteItemValueObserver\OnNext.Main1.cs" lang="CSharp" title="C#" region="Example" />
      </example>
      <example>
        <h3>.NET</h3>
        <code source="..\..\Net\Examples\CSharp\VisualStudio\Console\ReactiveDocExamples\DataAccess\_DAReactive\Composition.Pipeline.cs" lang="CSharp" title="C#" region="Example" />
      </example>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAWriteItemValueObserver.Create``1(OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemArguments)">
      <summary>
            Creates a new observer that writes values into an OPC item given by <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemArguments" /> object.
            </summary>
      <param name="itemArguments">Contains an OPC server and item descriptors.</param>
      <returns>Returns an observer that writes values into the given OPC item.</returns>
      <remarks>
            The <see cref="P:OpcLabs.EasyOpc.DataAccess.Reactive.DAReactive.DefaultClientSelector" /> selector will be used for OPC Data Access operations.
            </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAWriteItemValueObserver.Create``1(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DAItemDescriptor)">
      <summary>
            Creates a new observer that writes values into an OPC item given by OPC server and item descriptors.
            </summary>
      <param name="serverDescriptor">The OPC server involved in the operation.</param>
      <param name="itemDescriptor">The OPC item to be written into.</param>
      <returns>Returns an observer that writes values into the given OPC item.</returns>
      <remarks>
            The <see cref="P:OpcLabs.EasyOpc.DataAccess.Reactive.DAReactive.DefaultClientSelector" /> selector will be used for OPC Data Access operations.
            </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAWriteItemValueObserver.Create``1(System.String,System.String,System.String)">
      <summary>
            Creates a new observer that writes values into an OPC item, specifying machine name, server class, and item ID.
            </summary>
      <param name="machineName">Name of the machine (empty string for local computer).</param>
      <param name="serverClass">Contains ProgID of the OPC server.</param>
      <param name="itemId">ID of the item that will be written into.</param>
      <returns>Returns an observer that writes values into the given OPC item.</returns>
      <remarks>
            The <see cref="P:OpcLabs.EasyOpc.DataAccess.Reactive.DAReactive.DefaultClientSelector" /> selector will be used for OPC Data Access operations.
            </remarks>
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.Reactive.DAWriteItemValueObserver`1">
      <summary>
             Push-based notification receiver (observer) that writes incoming values into an OPC Data Access item.
             </summary>
      <typeparam name="TValue">The type of OPC values received.</typeparam>
      <example>
        <h3>.NET</h3>
        <code source="..\..\Net\Examples\CSharp\VisualStudio\Console\ReactiveDocExamples\DataAccess\_DAWriteItemValueObserver\OnNext.Main1.cs" lang="CSharp" title="C#" region="Example" />
      </example>
      <example>
        <h3>.NET</h3>
        <code source="..\..\Net\Examples\CSharp\VisualStudio\Console\ReactiveDocExamples\DataAccess\_DAReactive\Composition.Pipeline.cs" lang="CSharp" title="C#" region="Example" />
      </example>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAWriteItemValueObserver`1.#ctor">
      <overloads>
        <summary>
            Create a new instance of the observer that writes values into an OPC item.
            </summary>
      </overloads>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAWriteItemValueObserver`1.#ctor(OpcLabs.EasyOpc.DataAccess.EasyDAClientSelector,OpcLabs.BaseLib.Aliasing.Internal.IAliasProvider,OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemArguments)">
      <summary>
            Create a new instance of the observer that writes values into an OPC item.
            </summary>
      <summary>
            Create a new instance of the observer that writes values into an OPC item given by <see cref="T:OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemArguments" /> 
            object.
            </summary>
      <param name="clientSelector">The selector of the client object that is used for OPC Data Access operations.</param>
      <param name="aliasProvider">The alias provider to be used for resolving aliases by this reactive object.</param>
      <param name="itemArguments">Contains an OPC server and item descriptors.</param>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAWriteItemValueObserver`1.#ctor(OpcLabs.EasyOpc.DataAccess.Reactive.DAWriteItemValueObserver{`0})">
      <summary>Initializes a new instance of the class, copying values from a given object.</summary>
      <param name="writeItemValueObserver">The object to be copied from.</param>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAWriteItemValueObserver`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Create a new instance of the observer that writes values into an OPC item.
            </summary>
      <summary>Initializes a new instance of the class with serialized data.</summary>
      <param name="info">The SerializationInfo that holds the serialized object data.</param>
      <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAWriteItemValueObserver`1.op_Equality(OpcLabs.EasyOpc.DataAccess.Reactive.DAWriteItemValueObserver{`0},OpcLabs.EasyOpc.DataAccess.Reactive.DAWriteItemValueObserver{`0})">
      <summary>Determines whether the two objects are equal.</summary>
      <param name="left">First object to be compared.</param>
      <param name="right">Second object to be compared.</param>
      <returns>
        <c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAWriteItemValueObserver`1.op_Inequality(OpcLabs.EasyOpc.DataAccess.Reactive.DAWriteItemValueObserver{`0},OpcLabs.EasyOpc.DataAccess.Reactive.DAWriteItemValueObserver{`0})">
      <summary>Determines whether the two objects are not equal.</summary>
      <param name="left">First object to be compared.</param>
      <param name="right">Second object to be compared.</param>
      <returns>
        <c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Reactive.DAWriteItemValueObserver`1.ItemArguments">
      <summary>
            Contains an OPC server and item descriptors.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAWriteItemValueObserver`1.Equals(OpcLabs.EasyOpc.DataAccess.Reactive.DAWriteItemValueObserver{`0})">
      <summary>
            Determines whether the current object is the same as other object.
            </summary>
      <param name="other">Object to be compared.</param>
      <returns>True if the objects are the same, otherwise false.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAWriteItemValueObserver`1.Equals(System.Object)">
      <inheritdoc cref="M:System.Object.Equals(System.Object)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAWriteItemValueObserver`1.GetHashCode">
      <inheritdoc cref="M:System.Object.GetHashCode" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAWriteItemValueObserver`1.Clone">
      <inheritdoc />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAWriteItemValueObserver`1.OnNext(`0)">
      <inheritdoc cref="M:System.IObserver`1.OnNext(`0)" />
      <remarks>
            Writes the incoming value into the OPC-DA item.
            </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAWriteItemValueObserver`1.OnError(System.Exception)">
      <inheritdoc cref="M:System.IObserver`1.OnError(System.Exception)" />
      <remarks>No operation.</remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAWriteItemValueObserver`1.OnCompleted">
      <inheritdoc cref="M:System.IObserver`1.OnCompleted" />
      <remarks>No operation.</remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAWriteItemValueObserver`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAWriteItemValueObserver`1.DeepClone">
      <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
      <returns>A new object that is a deep copy of this instance.</returns>
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.Reactive.NamespaceDoc">
      <summary>
            This namespace contains reactive extensions (Rx) classes for OPC Data Access.
            </summary>
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.Resource1">
      <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Resource1.ResourceManager">
      <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.Resource1.Culture">
      <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
    </member>
    <member name="T:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore">
      <summary>
            The core part of the <c>EasyDAClient</c> object.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.#ctor">
      <summary>Initializes a new instance of the class.</summary>
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.#ctor(OpcLabs.EasyOpc.DataAccess.EasyDAClientCore)">
      <param name="client">Client object to copy from.</param>
      <exception cref="T:System.ArgumentNullException">
        <para>
             A <c>null</c> reference (<c>Nothing</c> in Visual Basic) is passed to a method that does not accept it as a valid argument.</para>
        <para>
             This is a usage error, i.e. it will never occur (the exception will not be thrown) in a correctly written program. Your code should not catch this exception.</para>
      </exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
      <param name="configuration">Configuration to bind to.</param>
      <exception cref="T:System.ArgumentNullException">
        <para>
             A <c>null</c> reference (<c>Nothing</c> in Visual Basic) is passed to a method that does not accept it as a valid argument.</para>
        <para>
             This is a usage error, i.e. it will never occur (the exception will not be thrown) in a correctly written program. Your code should not catch this exception.</para>
      </exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.#ctor(System.ComponentModel.IContainer)">
      <summary>
            Required for Windows.Forms Class Composition Designer support
            </summary>
      <param name="container">The component container to which the new instance will be added.</param>
      <exception cref="T:System.ArgumentNullException">
        <para>
             A <c>null</c> reference (<c>Nothing</c> in Visual Basic) is passed to a method that does not accept it as a valid argument.</para>
        <para>
             This is a usage error, i.e. it will never occur (the exception will not be thrown) in a correctly written program. Your code should not catch this exception.</para>
      </exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the class with serialized data.</summary>
      <param name="info">The SerializationInfo that holds the serialized object data.</param>
      <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
      <exception cref="T:System.ArgumentNullException">
        <para>
             A <c>null</c> reference (<c>Nothing</c> in Visual Basic) is passed to a method that does not accept it as a valid argument.</para>
        <para>
             This is a usage error, i.e. it will never occur (the exception will not be thrown) in a correctly written program. Your code should not catch this exception.</para>
      </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
        <para>
             An error has occurred during serialization or deserialization.</para>
        <para>
             This is an operation error that depends on factors external to your program, and thus cannot be always avoided. Your code must handle it appropriately.</para>
      </exception>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.AliasProvider">
      <summary>
            The alias provider to be used for resolving aliases by this component.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.Reset">
      <summary>
            Sets the object properties back to their defaults.
            </summary>
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.ToString">
      <inheritdoc cref="M:System.Object.ToString" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.ValueEquals(OpcLabs.EasyOpc.DataAccess.EasyDAClientCore)">
      <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore" /> is value equal to the current object.
            </summary>
      <param name="other">The <see cref="T:OpcLabs.BaseLib.Widgets.NotifyingWidget" /> to compare with the current object.</param>
      <returns>
        <c>true</c> if the specified object is value equal to the current object; otherwise, <c>false</c>.</returns>
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.Clone">
      <inheritdoc cref="M:System.ICloneable.Clone" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.ValueEquals(System.Object)">
      <inheritdoc cref="M:OpcLabs.BaseLib.IValueEquatable.ValueEquals(System.Object)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.CallbackError(System.String,System.Exception)">
      <inheritdoc cref="M:OpcLabs.BaseLib.Widgets.NotifyingWidget.CallbackError(System.String,System.Exception)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.OnCallbackEnqueuerOverflow(System.Int32)">
      <inheritdoc />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.OnCallbackEnqueuerOverflowClearing(System.Int64)">
      <inheritdoc />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.ReadXmlElement(System.Xml.XmlReader)">
      <inheritdoc cref="M:OpcLabs.BaseLib.Info.ReadXmlElement(System.Xml.XmlReader)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.SendCallbackError(System.String,System.Exception)">
      <inheritdoc cref="M:OpcLabs.BaseLib.Widgets.NotifyingWidget.CallbackError(System.String,System.Exception)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.WriteXmlElement(System.Xml.XmlWriter)">
      <inheritdoc cref="M:OpcLabs.BaseLib.Info.WriteXmlElement(System.Xml.XmlWriter)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.DeepClone">
      <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
      <returns>A new object that is a deep copy of this instance.</returns>
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.CreateInnerClient">
      <summary>
            Infrastructure
            </summary>
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.ResetAliasProvider">
      <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.AliasProvider" /> to a default.
            </summary>
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.ShouldSerializeAliasProvider">
      <summary>
            Determines whether the <see cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.AliasProvider" /> is not empty.
            </summary>
      <returns>
        <c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.GetService(System.Type)">
      <inheritdoc cref="M:OpcLabs.BaseLib.Widgets.Widget.GetService(System.Type)" />
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.PullItemChangedQueueCapacity">
      <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.PullItemChangedQueueCapacity" />
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.SupportedTechnologies">
      <inheritdoc cref="P:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.SupportedTechnologies" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.GetItemSubscriptionArguments(System.Int32)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.GetItemSubscriptionArguments(System.Int32)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.IsKnownItemSubscriptionHandle(System.Int32)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.IsKnownItemSubscriptionHandle(System.Int32)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.ReadMultipleItems(OpcLabs.EasyOpc.DataAccess.OperationModel.DAReadItemArguments[])">
      <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.ReadMultipleItems(OpcLabs.EasyOpc.DataAccess.OperationModel.DAReadItemArguments[])" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.GetMultiplePropertyValues(OpcLabs.EasyOpc.DataAccess.OperationModel.DAPropertyArguments[])">
      <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.GetMultiplePropertyValues(OpcLabs.EasyOpc.DataAccess.OperationModel.DAPropertyArguments[])" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.WriteMultipleItems(OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemVtqArguments[])">
      <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.WriteMultipleItems(OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemVtqArguments[])" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.WriteMultipleItemValues(OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemValueArguments[])">
      <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.WriteMultipleItemValues(OpcLabs.EasyOpc.DataAccess.OperationModel.DAItemValueArguments[])" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.BrowseServers(System.String,OpcLabs.EasyOpc.OpcTechnologies)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.BrowseServers(System.String,OpcLabs.EasyOpc.OpcTechnologies)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.BrowseNodes(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DABrowseParameters)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.BrowseNodes(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor,OpcLabs.EasyOpc.DataAccess.DABrowseParameters)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.BrowseAccessPaths(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.BrowseAccessPaths(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.BrowseProperties(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.BrowseProperties(OpcLabs.EasyOpc.ServerDescriptor,OpcLabs.EasyOpc.DataAccess.DANodeDescriptor)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.SubscribeMultipleItems(OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemSubscriptionArguments[])">
      <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.SubscribeMultipleItems(OpcLabs.EasyOpc.DataAccess.OperationModel.EasyDAItemSubscriptionArguments[])" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.ChangeMultipleItemSubscriptions(OpcLabs.EasyOpc.DataAccess.OperationModel.DAHandleGroupArguments[])">
      <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.ChangeMultipleItemSubscriptions(OpcLabs.EasyOpc.DataAccess.OperationModel.DAHandleGroupArguments[])" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.UnsubscribeMultipleItems(System.Collections.Generic.IEnumerable{System.Int32})">
      <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.UnsubscribeMultipleItems(System.Collections.Generic.IEnumerable{System.Int32})" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.UnsubscribeAllItems">
      <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.UnsubscribeAllItems" />
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.PullMultipleItemChanges(System.Int32,System.Int32)">
      <inheritdoc cref="M:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.PullMultipleItemChanges(System.Int32,System.Int32)" />
    </member>
    <member name="E:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.EventingFailure">
      <inheritdoc cref="E:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.EventingFailure" />
    </member>
    <member name="E:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.ItemChanged">
      <inheritdoc cref="E:OpcLabs.EasyOpc.DataAccess.IEasyDAClient.ItemChanged" />
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.InnerClient">
      <summary>
            Inner client to which the functionality is forwarded.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.InstanceParameters">
      <summary>
            Contains parameters that influence the behavior of just this instance of the component.
            </summary>
      <remarks>
        <para>
            The initial value can be changed by configuration and can differ from the default.</para>
      </remarks>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.Isolated">
      <summary>Specifies that you wish that the <see cref="T:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore" /> object instance works with an "isolated" 
            connection to the OPC server, i.e. one that is not shared with other instances.</summary>
      <example>
        <h3>.NET</h3>
        <code source="..\..\Net\Examples\CSharp\VisualStudio\Console\DocExamples\DataAccess\_EasyDAClient\Isolated.Main1.cs" lang="CSharp" title="C#" region="Example" />
        <code source="..\..\Net\Examples\Python\CPython\Console\DocExamples\DataAccess\_EasyDAClient\Net.Isolated.Main1.py" lang="Python" title="Python (.NET)" region="Example" />
      </example>
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.IsolatedParameters">
      <summary>
            Contains parameters that influence the behavior of the component when it is isolated.
            </summary>
      <remarks>
        <para>
            Parameters in this property only apply to instances of <see cref="T:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore" /> that have their
            <see cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.Isolated" /> property equal to <c>true</c></para>.
            <para>
            The initial value can be changed by configuration and can differ from the default.</para></remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.ResetIsolated">
      <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.Isolated" /> back to its default.
            </summary>
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.ShouldSerializeIsolated">
      <summary>
            Determines whether <see cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.Isolated" /> is in its default state.
            </summary>
      <returns>
        <c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.ResetInstanceParameters">
      <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.InstanceParameters" /> to a default.
            </summary>
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.ShouldSerializeInstanceParameters">
      <summary>
            Determines whether the <see cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.InstanceParameters" /> is not empty.
            </summary>
      <returns>
        <c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.ResetIsolatedParameters">
      <summary>
            Sets the <see cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.IsolatedParameters" /> to a default.
            </summary>
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.ShouldSerializeIsolatedParameters">
      <summary>
            Determines whether the <see cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.IsolatedParameters" /> is not empty.
            </summary>
      <returns>
        <c>true</c> if the property has changed from its default value; <c>false</c> otherwise.</returns>
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.LicenseInfo">
      <inheritdoc cref="P:OpcLabs.BaseLib.ILicenseInfoProvider.LicenseInfo" />
    </member>
    <member name="F:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.DefaultIsolated">
      <summary>
            Default value of the <see cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.Isolated" /> property. Equals to <c>false</c>.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.#cctor">
      <summary>
            Initializes the class statically.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.AdaptableParameters">
      <summary>
            Adaptable parameters for non-isolated client objects.
            </summary>
      <remarks>
        <para>
            When the <see cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.Isolated" /> property of the <see cref="T:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore" /> is <c>false</c> (the default), these 
            adaptable parameters are used. When the <see cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.Isolated" /> property is <c>true</c>, each such instance has 
            its own set of adaptable parameters, taken from the <see cref="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.IsolatedParameters" /> property instead.
            </para>
        <para>
            The initial value can be changed by configuration and can differ from the default.</para>
      </remarks>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.ServiceProviderEndpointDescriptor">
      <summary>
            Provider endpoint descriptor.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.SharedParameters">
      <summary>
            Parameters that are always shared by all instances of the component.
            </summary>
      <remarks>
        <para>
            The initial value can be changed by configuration and can differ from the default.</para>
      </remarks>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.SharedServiceContainer">
      <summary>
            Container for services that are shared by all instances of the component.
            </summary>
      <remarks>
        <para>
            Use this property to add additional shared services, before the component has been statically activated.</para>
      </remarks>
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.SharedServiceProvider">
      <summary>
            Provides services that are shared by all instances of the component.
            </summary>
      <remarks>
        <para>
            Use this property to retrieve shared services. Getting the property triggers static activation of the component,
            if it has not been activated yet.</para>
      </remarks>
    </member>
    <member name="E:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.LogEntry">
      <summary>
            Raised for loggable entries originating in the OPC-DA client engine and the EasyDAClient component.
            </summary>
    </member>
    <member name="T:OpcLabs.EasyOpc.Engine.NamespaceDoc">
      <summary>
            This namespace contains classes that are used by the engine for OPC "Classic" specifications (COM/DCOM, and XML based). 
            </summary>
    </member>
    <member name="T:OpcLabs.EasyOpc.Engine.NetApiException">
            IMPROVE: better summary
            <summary>
            Indicates that the OPC NET API returned invalid response or an exception occurred during processing the request.
            </summary></member>
    <member name="M:OpcLabs.EasyOpc.Engine.NetApiException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the class with a specified message.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:OpcLabs.EasyOpc.Engine.NetApiException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the class with a specified error message and a reference to the inner exception 
            that is the cause of this exception.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="inner">The exception that is the cause of the current exception.
            </param>
    </member>
    <member name="M:OpcLabs.EasyOpc.Engine.NetApiException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <inheritdoc cref="T:System.Exception" />
    </member>
    <member name="T:OpcLabs.EasyOpc.Engine.NetApiResultException">
            IMPROVE: better summary
            <summary>
            Indicates that OPC NET API has returned a failure result.
            </summary></member>
    <member name="M:OpcLabs.EasyOpc.Engine.NetApiResultException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <inheritdoc cref="T:System.Exception" />
    </member>
    <member name="M:OpcLabs.EasyOpc.Engine.NetApiResultException.#ctor(Opc.IResult)">
      <summary>
            Initializes a new instance of the class with a specified result.
            </summary>
      <param name="result">
      </param>
    </member>
    <member name="P:OpcLabs.EasyOpc.Engine.NetApiResultException.DiagnosticInfo">
      <summary>
            Represents vendor specific diagnostic information (not the localized error text).
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.Engine.NetApiResultException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <inheritdoc cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
    </member>
    <member name="T:OpcLabs.EasyOpc.Implementation.ErrorEnhancingEasyAEClient">
      <exclude />
    </member>
    <member name="T:OpcLabs.EasyOpc.Implementation.ErrorEnhancingEasyDAClient">
      <exclude />
    </member>
    <member name="T:OpcLabs.EasyOpc.Implementation.ImplementationUtilities">
      <exclude />
    </member>
    <member name="T:OpcLabs.EasyOpc.Implementation.NamespaceDoc">
      <summary>
            This namespace contains classes that implement OPC "Classic".
            </summary>
    </member>
    <member name="T:OpcLabs.EasyOpc.Implementation.Native.AlarmsAndEvents.ErrorHarmonizingNativeEasyAEClient">
      <exclude />
    </member>
    <member name="T:OpcLabs.EasyOpc.Implementation.Native.AlarmsAndEvents.NamespaceDoc">
      <summary>
            This namespace contains implementation classes for OPC Alarms&amp;Events using native code.
            </summary>
    </member>
    <member name="T:OpcLabs.EasyOpc.Implementation.Native.AlarmsAndEvents.NativeEasyAEClient">
      <exclude />
    </member>
    <member name="P:OpcLabs.EasyOpc.Implementation.Native.AlarmsAndEvents.NativeEasyAEClient.AdaptableParameters">
      <summary>
            Adaptable parameters for non-isolated client objects.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.Implementation.Native.AlarmsAndEvents.NativeEasyAEClient.SharedParameters">
      <summary>
            Parameters that are always shared by all instances of the component.
            </summary>
    </member>
    <member name="T:OpcLabs.EasyOpc.Implementation.Native.DataAccess.ErrorHarmonizingNativeEasyDAClient">
      <exclude />
    </member>
    <member name="T:OpcLabs.EasyOpc.Implementation.Native.DataAccess.NamespaceDoc">
      <summary>
            This namespace contains implementation classes for OPC Data Access using native code.
            </summary>
    </member>
    <member name="T:OpcLabs.EasyOpc.Implementation.Native.DataAccess.NativeEasyDAClient">
      <exclude />
    </member>
    <member name="P:OpcLabs.EasyOpc.Implementation.Native.DataAccess.NativeEasyDAClient.AdaptableParameters">
      <summary>
            Adaptable parameters for non-isolated client objects.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.Implementation.Native.DataAccess.NativeEasyDAClient.SharedParameters">
      <summary>
            Parameters that are always shared by all instances of the component.
            </summary>
    </member>
    <member name="T:OpcLabs.EasyOpc.Implementation.Native.NamespaceDoc">
      <summary>
            This namespace contains classes that implement OPC "Classic" using native code.
            </summary>
    </member>
    <member name="T:OpcLabs.EasyOpc.Implementation.NetApi.AlarmsAndEvents.ErrorHarmonizingNetApiEasyAEClient">
      <exclude />
    </member>
    <member name="T:OpcLabs.EasyOpc.Implementation.NetApi.AlarmsAndEvents.NamespaceDoc">
      <summary>
            This namespace contains classes that implement OPC Alarms&amp;Events using OPC NET API code.
            </summary>
    </member>
    <member name="T:OpcLabs.EasyOpc.Implementation.NetApi.AlarmsAndEvents.NetApiAeEventsSubscriptionArguments">
      <exclude />
    </member>
    <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.AlarmsAndEvents.NetApiAeEventsSubscriptionArguments.Equals(System.Object)">
      <inheritdoc cref="M:System.Object.Equals(System.Object)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.AlarmsAndEvents.NetApiAeEventsSubscriptionArguments.GetHashCode">
      <inheritdoc cref="M:System.Object.GetHashCode" />
    </member>
    <member name="T:OpcLabs.EasyOpc.Implementation.NetApi.AlarmsAndEvents.NetApiAeSubscriptionGlobalParameters">
      <exclude />
    </member>
    <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.AlarmsAndEvents.NetApiAeSubscriptionGlobalParameters.Equals(System.Object)">
      <inheritdoc cref="M:System.Object.Equals(System.Object)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.AlarmsAndEvents.NetApiAeSubscriptionGlobalParameters.GetHashCode">
      <inheritdoc cref="M:System.Object.GetHashCode" />
    </member>
    <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.AlarmsAndEvents.NetApiAeSubscriptionGlobalParameters.Equals(OpcLabs.EasyOpc.Implementation.NetApi.AlarmsAndEvents.NetApiAeSubscriptionGlobalParameters)">
      <summary>
            Determines whether this object is equal to the other.
            </summary>
      <param name="other">The other object to be tested for equality with this one.</param>
      <returns>Returns <c>true</c> if the objects are equal; otherwise, returns <c>false</c>.</returns>
    </member>
    <member name="T:OpcLabs.EasyOpc.Implementation.NetApi.AlarmsAndEvents.NetApiAeSubscriptions">
      <exclude />
    </member>
    <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.AlarmsAndEvents.NetApiAeSubscriptions.Equals(System.Object)">
      <inheritdoc cref="M:System.Object.Equals(System.Object)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.AlarmsAndEvents.NetApiAeSubscriptions.GetHashCode">
      <inheritdoc cref="M:System.Object.GetHashCode" />
    </member>
    <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.AlarmsAndEvents.NetApiAeSubscriptions.Equals(OpcLabs.EasyOpc.Implementation.NetApi.AlarmsAndEvents.NetApiAeSubscriptions)">
      <summary>
            Determines whether this object is equal to the other.
            </summary>
      <param name="other">The other object to be tested for equality with this one.</param>
      <returns>Returns <c>true</c> if the objects are equal; otherwise, returns <c>false</c>.</returns>
    </member>
    <member name="T:OpcLabs.EasyOpc.Implementation.NetApi.AlarmsAndEvents.NetApiEasyAEClient">
      <exclude />
    </member>
    <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.AlarmsAndEvents.NetApiEasyAEClient.AdaptableParameters">
      <summary>
            Adaptable parameters for non-isolated client objects.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.AlarmsAndEvents.NetApiEasyAEClient.SharedParameters">
      <summary>
            Parameters that are always shared by all instances of the component.
            </summary>
    </member>
    <member name="T:OpcLabs.EasyOpc.Implementation.NetApi.AlarmsAndEvents.NetApiEasyToOpcNetApiAe">
      <exclude />
    </member>
    <member name="T:OpcLabs.EasyOpc.Implementation.NetApi.AlarmsAndEvents.NetApiOpcAeEventNotifications">
      <exclude />
    </member>
    <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.AlarmsAndEvents.NetApiOpcAeEventNotifications.Equals(System.Object)">
      <inheritdoc cref="M:System.Object.Equals(System.Object)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.AlarmsAndEvents.NetApiOpcAeEventNotifications.GetHashCode">
      <inheritdoc cref="M:System.Object.GetHashCode" />
    </member>
    <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.AlarmsAndEvents.NetApiOpcAeEventNotifications.Equals(OpcLabs.EasyOpc.Implementation.NetApi.AlarmsAndEvents.NetApiOpcAeEventNotifications)">
      <summary>
            Determines whether this object is equal to the other.
            </summary>
      <param name="other">The other object to be tested for equality with this one.</param>
      <returns>Returns <c>true</c> if the objects are equal; otherwise, returns <c>false</c>.</returns>
    </member>
    <member name="T:OpcLabs.EasyOpc.Implementation.NetApi.AlarmsAndEvents.NetApiOpcAeEventNotificationsQueue">
      <exclude />
    </member>
    <member name="T:OpcLabs.EasyOpc.Implementation.NetApi.AlarmsAndEvents.NetApiOpcAeServer">
      <exclude />
    </member>
    <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.AlarmsAndEvents.NetApiOpcAeServer.CreateServerForURL(Opc.URL,OpcLabs.EasyOpc.OpcTechnologies@)">
      <summary>
            Creates a server object for the specified URL.
            </summary>
    </member>
    <member name="T:OpcLabs.EasyOpc.Implementation.NetApi.AlarmsAndEvents.NetApiOpcAeSubscription">
      <exclude />
    </member>
    <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.AlarmsAndEvents.NetApiOpcAeSubscription.Equals(System.Object)">
      <inheritdoc cref="M:System.Object.Equals(System.Object)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.AlarmsAndEvents.NetApiOpcAeSubscription.GetHashCode">
      <inheritdoc cref="M:System.Object.GetHashCode" />
    </member>
    <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.AlarmsAndEvents.NetApiOpcAeSubscription.Equals(OpcLabs.EasyOpc.Implementation.NetApi.AlarmsAndEvents.NetApiOpcAeSubscription)">
      <summary>
            Determines whether this object is equal to the other.
            </summary>
      <param name="other">The other object to be tested for equality with this one.</param>
      <returns>Returns <c>true</c> if the objects are equal; otherwise, returns <c>false</c>.</returns>
    </member>
    <member name="T:OpcLabs.EasyOpc.Implementation.NetApi.AlarmsAndEvents.Resource1">
      <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.AlarmsAndEvents.Resource1.ResourceManager">
      <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.AlarmsAndEvents.Resource1.Culture">
      <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.AlarmsAndEvents.Resource1.NetApiEasyAEClient_ChangeEventSubscription_UnknownHandle_TextFormat">
      <summary>
              Looks up a localized string similar to Attempt to change an event subscription using an unknown handle {1} in NET API OPC {0} client..
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.AlarmsAndEvents.Resource1.NetApiEasyAEClient_CheckNodeDescriptor_QualifiedNameIsNull_Text">
      <summary>
              Looks up a localized string similar to The qualified name of the A&amp;E node descriptor must be set. Browse paths for OPC-A&amp;E are not yet supported in NET API OPC Alarms and Events client..
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.AlarmsAndEvents.Resource1.NetApiEasyAEClient_RefreshEventSubscription_UnknownHandle_TextFormat">
      <summary>
              Looks up a localized string similar to Attempt to refresh an event subscription using an unknown handle {1} in NET API OPC {0} client..
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.AlarmsAndEvents.Resource1.NetApiEasyAEClient_UnsubscribeEvents_UnknownHandle_TextFormat">
      <summary>
              Looks up a localized string similar to Attempt to unsubscribe an event subscription using an unknown handle {1} in NET API OPC {0} client..
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.AlarmsAndEvents.Resource1.NetApiEasyEAClient_GetEventsSubscriptionArguments_UnknownHandle_TextFormat">
      <summary>
              Looks up a localized string similar to Attempt to get events subscription arguments using an unknown handle {0} in NET API OPC {0} client..
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.AlarmsAndEvents.Resource1.NetApiEasyToOpcNetApiAe_AcknowledgeConditionReturnedNull_Text">
      <summary>
              Looks up a localized string similar to AcknowledgeCondition in OPC NET API (Alarms and Events) has returned null result..
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.AlarmsAndEvents.Resource1.NetApiEasyToOpcNetApiAe_AcknowledgeConditionReturnedWrong_Text">
      <summary>
              Looks up a localized string similar to AcknowledgeCondition in OPC NET API (Alarms and Events) has returned wrong number of results..
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.AlarmsAndEvents.Resource1.NetApiOpcAeServer_CreateServerForUrl_UnsupportedScheme_TextFormat">
      <summary>
              Looks up a localized string similar to Scheme "{0}" used in URL "{1}" is not supported in NET API OPC Alarms and Events client..
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.AlarmsAndEvents.Resource1.NetApiOpcAeServer_CreateSubscriptionReturnedNull_Text">
      <summary>
              Looks up a localized string similar to CreateSubscription in OPC NET API (Alarms and Events) has returned null..
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.AlarmsAndEvents.Resource1.NetApiOpcAeServer_GetConditionStateReturnedNull_Text">
      <summary>
              Looks up a localized string similar to GetConditionState in OPC NET API (Alarms and Events) has returned null..
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.AlarmsAndEvents.Resource1.NetApiOpcAeServer_ISubscription_ModifyStateReturnedNull_Text">
      <summary>
              Looks up a localized string similar to ModifyState in OPC NET API (Alarms and Events) has returned null..
            </summary>
    </member>
    <member name="T:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.ErrorHarmonizingNetApiEasyDAClient">
      <exclude />
    </member>
    <member name="T:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NamespaceDoc">
      <summary>
            This namespace contains classes that implement OPC Data Access using OPC NET API code.
            </summary>
    </member>
    <member name="T:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiDaItemSubscriptionArguments">
      <exclude />
    </member>
    <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiDaItemSubscriptionArguments.Equals(System.Object)">
      <inheritdoc cref="M:System.Object.Equals(System.Object)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiDaItemSubscriptionArguments.GetHashCode">
      <inheritdoc cref="M:System.Object.GetHashCode" />
    </member>
    <member name="T:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiDaSubscriptionGlobalParameters2">
      <exclude />
    </member>
    <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiDaSubscriptionGlobalParameters2.Equals(System.Object)">
      <inheritdoc cref="M:System.Object.Equals(System.Object)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiDaSubscriptionGlobalParameters2.GetHashCode">
      <inheritdoc cref="M:System.Object.GetHashCode" />
    </member>
    <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiDaSubscriptionGlobalParameters2.Equals(OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiDaSubscriptionGlobalParameters2)">
      <summary>
            Determines whether this object is equal to the other.
            </summary>
      <param name="other">The other object to be tested for equality with this one.</param>
      <returns>Returns <c>true</c> if the objects are equal; otherwise, returns <c>false</c>.</returns>
    </member>
    <member name="T:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiDaSubscriptions">
      <exclude />
    </member>
    <member name="T:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiEasyDAClient">
      <exclude />
    </member>
    <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiEasyDAClient.AdaptableParameters">
      <summary>
            Adaptable parameters for non-isolated client objects.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiEasyDAClient.SharedParameters">
      <summary>
            Parameters that are always shared by all instances of the component.
            </summary>
    </member>
    <member name="T:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiEasyToOpcNetApiDa">
      <exclude />
    </member>
    <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiEasyToOpcNetApiDa.SetGroupParameters(OpcLabs.EasyOpc.DataAccess.DAGroupParameters,Opc.Da.Item)">
      <summary>
      </summary>
      <param name="groupParameters">
      </param>
      <param name="item">
      </param>
      <returns>Returns value indicating whether any groupParameter is changed.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiEasyToOpcNetApiDa.SetItemParameters(Opc.Da.Item,OpcLabs.EasyOpc.DataAccess.DAGroupParameters)">
      <summary>
      </summary>
      <param name="item">
      </param>
      <param name="groupParameters">
      </param>
      <returns>Returns mask that indicates which items was modified.</returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiEasyToOpcNetApiDa.ToDAVtqResult(System.Object,Opc.Da.ItemValueResult,System.Int32,OpcLabs.EasyOpc.OpcTechnologies)">
      <summary>
            Converts Opc.Da.ItemValueResult to DAVtqResult.
            DAVtqResult value is CLS-compliant.
            </summary>
      <param name="state">
      </param>
      <param name="itemValueResult">
      </param>
      <param name="operationErrorCode">
      </param>
      <param name="technology">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiEasyToOpcNetApiDa.ToDAVtq(Opc.Da.ItemValue,OpcLabs.EasyOpc.OpcTechnologies)">
      <summary>
            Converts Opc.Da.ItemValue to DAVtq.
            Exceptions: InvalidCastException
            </summary>
      <param name="itemValue">
      </param>
      <param name="technology">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiEasyToOpcNetApiDa.ToDAVtqResult(System.Object,Opc.Da.ItemValue,OpcLabs.BaseLib.OperationModel.OperationResult,System.Int32,OpcLabs.EasyOpc.OpcTechnologies)">
      <summary>
            Converts Opc.Da.ItemValue and OperationResult to DAVtqResult.
            DAVtqResult value is CLS-compliant.
            </summary>
      <param name="state">
      </param>
      <param name="itemValue">
      </param>
      <param name="operationResult">
      </param>
      <param name="operationErrorCode">
      </param>
      <param name="technology">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiEasyToOpcNetApiDa.ToValueResult(System.Object,Opc.Da.ItemValue,OpcLabs.BaseLib.OperationModel.OperationResult,System.Int32,System.Boolean)">
      <summary>
            Converts Opc.Da.ItemValue and OperationResult to ValueResult.
            ValueResult value is CLS-compliant.
            </summary>
      <param name="state">
      </param>
      <param name="itemValue">
      </param>
      <param name="operationResult">
      </param>
      <param name="operationErrorCode">
      </param>
      <param name="isDataType">Indicates whether null converts to VarTypes.Empty.</param>
      <returns>
      </returns>
    </member>
    <member name="T:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.OpcNetApiHelper">
      <exclude />
    </member>
    <member name="T:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiItemArguments">
      <exclude />
    </member>
    <member name="T:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiMultiplePropertiesKey">
      <exclude />
      <summary>
            Represents key of nodes with same properties on one server.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiMultiplePropertiesKey.Equals(System.Object)">
      <inheritdoc cref="M:System.Object.Equals(System.Object)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiMultiplePropertiesKey.GetHashCode">
      <inheritdoc cref="M:System.Object.GetHashCode" />
    </member>
    <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiMultiplePropertiesKey.MakeMultipleKeyList(System.Collections.Generic.IList{OpcLabs.EasyOpc.DataAccess.OperationModel.DAPropertyArguments})">
      <summary>
            Makes consolidated list of multiple properties key. One key represents nodes with same properties on one server.
            </summary>
      <param name="argumentsArray">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiMultiplePropertiesKey.GetMultipleKey(OpcLabs.EasyOpc.DataAccess.OperationModel.DAPropertyArguments,System.Collections.Generic.List{OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiMultiplePropertiesKey})">
      <summary>
            Makes single key of propertyArguments and return related multiple key from multipleKeys.
            </summary>
      <param name="propertyArguments">
      </param>
      <param name="multipleKeys">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiOpcDaServer">
      <exclude />
    </member>
    <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiOpcDaServer.#ctor(System.Net.WebProxy,OpcLabs.EasyOpc.Implementation.NetApi.NetApiOpcServerKey,System.Action{OpcLabs.EasyOpc.Implementation.NetApi.INetApiOpcServerForLink{OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiOpcDaServer},System.Boolean},OpcLabs.EasyOpc.Implementation.NetApi.EasyClientConnectDataParameters)">
      <summary>
      </summary>
      <param name="proxy">
      </param>
      <param name="serverKey">
      </param>
      <param name="destroyOpcServer">This action is called when NetApiOpcDaServer has no server link for detach time interval. Action would be dispose NetApiOpcDaServer. Action is method of object, which controls NetApiOpcDaServer.</param>
      <param name="easyClientConnectDataParameters">
      </param>
    </member>
    <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiOpcDaServer.CreateServerForURL(Opc.URL,OpcLabs.EasyOpc.OpcTechnologies@)">
      <summary>
            Creates a server object for the specified URL.
            </summary>
    </member>
    <member name="T:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiOpcDaSubscription">
      <exclude />
    </member>
    <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiOpcDaSubscription.Equals(System.Object)">
      <inheritdoc cref="M:System.Object.Equals(System.Object)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiOpcDaSubscription.GetHashCode">
      <inheritdoc cref="M:System.Object.GetHashCode" />
    </member>
    <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiOpcDaSubscription.Equals(OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiOpcDaSubscription)">
      <summary>
            Determines whether this object is equal to the other.
            </summary>
      <param name="other">The other object to be tested for equality with this one.</param>
      <returns>Returns <c>true</c> if the objects are equal; otherwise, returns <c>false</c>.</returns>
    </member>
    <member name="T:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.NetApiPropertyArguments">
      <exclude />
    </member>
    <member name="T:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.OpcDaItemEqualityComparer">
      <exclude />
    </member>
    <member name="T:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.Resource1">
      <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.Resource1.ResourceManager">
      <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.Resource1.Culture">
      <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.Resource1.CheckServerDescriptor_NotExpectedServerDescriptor_TextFormat">
      <summary>
              Looks up a localized string similar to Server descriptor in the NET API OPC Data Access client does not belong to the server "{0}"..
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.Resource1.NetApiEasyDAClient_BrowseServers_OPCXMLDANotSupported_TextFormat">
      <summary>
              Looks up a localized string similar to Cannot browse for OPC XML servers on "{0}". Discovering OPC XML-DA servers is not supported. The OPC XML-DA specification does not define a mechanism to detect OPC XML-DA servers on a specific location..
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.Resource1.NetApiEasyDAClient_ChangeMultipleItemSubscriptions_UnknownHandle_TextFormat">
      <summary>
              Looks up a localized string similar to Attempt to change an item subscription using an unknown handle {0} at index {1} in NET API OPC Data Access client..
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.Resource1.NetApiEasyDAClient_CheckAllowedMode_NotSupportedAsynchronousMethod_Text">
      <summary>
              Looks up a localized string similar to Asynchronous OPC operations are not supported by the NET API OPC Data Access client..
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.Resource1.NetApiEasyDAClient_CheckNodeDescriptor_BrowsePathAndItemIDIsNull_Text">
      <summary>
              Looks up a localized string similar to The OPC item must be specified either by its Item ID, or using a browse path..
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.Resource1.NetApiEasyDAClient_CheckNodeDescriptor_TranslationOfBrowsePathToItemIDIsNotImplemented_Text">
      <summary>
              Looks up a localized string similar to Translation of browse path to item ID is not implemented with OPC NET API..
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.Resource1.NetApiEasyDAClient_GetItemSubscriptionArguments_UnknownHandle_TextFormat">
      <summary>
              Looks up a localized string similar to Attempt to get item subscription arguments using an unknown handle {0} in NET API OPC Data Access client..
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.Resource1.NetApiEasyDAClient_UnsubscribeMultipleItems_UnknownHandle_TextFormat">
      <summary>
              Looks up a localized string similar to Attempt to unsubscribe an item subscription using an unknown handle {0} at index {1} in NET API OPC Data Access client..
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.Resource1.NetApiItemArgument_NotReturnedGoodQuality_Text">
      <summary>
              Looks up a localized string similar to Read in OPC NET API (DataAccess) has not returned data with good quality..
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.Resource1.NetApiOpcDaServer_CreateServerForUrl_UnsupportedScheme_TextFormat">
      <summary>
              Looks up a localized string similar to Scheme "{0}" used in URL "{1}" is not supported in NET API OPC Data Access client..
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.Resource1.NetApiOpcDaServer_CreateSubscriptionReturnedNull_Text">
      <summary>
              Looks up a localized string similar to CreateSubscription in OPC NET API (DataAccess) has returned null..
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.Resource1.NetApiOpcDaServer_ISubscription_GetStateReturnedNull_Text">
      <summary>
              Looks up a localized string similar to GetState in OPC NET API (DataAccess) has returned null..
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.Resource1.NetApiOpcDaServer_ISubscription_ModifyStateReturnedNull_Text">
      <summary>
              Looks up a localized string similar to ModifyState in OPC NET API (DataAccess) has returned null..
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.Resource1.OpcNetApiHelper_GetProperties_ReturnsBadCountOfItems_Text">
      <summary>
              Looks up a localized string similar to GetProperties in OPC NET API (DataAccess) has returned an incorrect item count..
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.Resource1.OpcNetApiHelper_ReadMultipleItemsFromOneServer_NoResultsReturns_Text">
      <summary>
              Looks up a localized string similar to Read in OPC NET API (DataAccess) has returned no results..
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.Resource1.OpcNetApiHelper_ReadMultipleItemsFromOneServer_ReturnsBadCountOfItems_Text">
      <summary>
              Looks up a localized string similar to Read in OPC NET API (DataAccess) has returned an incorrect item count..
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.Resource1.OpcNetApiHelper_WriteMultipleItemsFromOneServer_NoResultsReturns_Text">
      <summary>
              Looks up a localized string similar to Write in OPC NET API (DataAccess) has returned no results..
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.Resource1.OpcNetApiHelper_WriteMultipleItemsFromOneServer_ReturnsBadCountOfItems_Text">
      <summary>
              Looks up a localized string similar to Write in OPC NET API (DataAccess) has returned an incorrect item count..
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.Resource1.ToDaBrowseFilters_DABrowseFilterFlatIsNotSupported_Text">
      <summary>
              Looks up a localized string similar to Address space flattening in the browse filter is not supported by the NET OPC Data Access client..
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.Resource1.ToDAVtq_QualityIsNotSpecified_Text">
      <summary>
              Looks up a localized string similar to The item value from OPC NET API (Data Access) does not specify a quality..
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.Resource1.ToOpcItemSubscriptionItemArguments_NotExpectedArgument_Text">
      <summary>
              Looks up a localized string similar to Some arguments (server descriptor, locale, or update rate) do not belong to this NET API OPC Data Access client subscription..
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.Resource1.ToOperationResult_RequestedItemIsNotReturned_Text">
      <summary>
              Looks up a localized string similar to The OPC NET API (Data Access) has not returned an item value..
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.DataAccess.Resource1.ToOperationResult_ResultIsNotSet_Text">
      <summary>
              Looks up a localized string similar to The OPC NET API (Data Access) has not returned a result..
            </summary>
    </member>
    <member name="T:OpcLabs.EasyOpc.Implementation.NetApi.EasyClientConnectDataParameters">
      <exclude />
    </member>
    <member name="T:OpcLabs.EasyOpc.Implementation.NetApi.INetApiEasyClientExtension">
      <exclude />
    </member>
    <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.INetApiEasyClientExtension.CheckException(OpcLabs.EasyOpc.Implementation.NetApi.INetApiEasyClient,System.Exception,System.Boolean)">
      <summary>
            Throw exception if contains Coding Error. Else if method is other IEasyDAClient method throw OpcException. Else return exception.
            </summary>
      <param name="netApiEasyClient">
      </param>
      <param name="exception">
      </param>
      <param name="isOtherMethod">Other method is method which no returning OperationResult nor raising event.</param>
      <returns>
      </returns>
    </member>
    <member name="T:OpcLabs.EasyOpc.Implementation.NetApi.NamespaceDoc">
      <summary>
            This namespace contains classes that implement OPC "Classic" using NET API.
            </summary>
    </member>
    <member name="T:OpcLabs.EasyOpc.Implementation.NetApi.NetApiCacheEventArgs`2">
      <exclude />
    </member>
    <member name="T:OpcLabs.EasyOpc.Implementation.NetApi.NetApiEasyToOpcNetApi`1">
      <exclude />
    </member>
    <member name="T:OpcLabs.EasyOpc.Implementation.NetApi.NetApiEasyToOpcNetApiWithSubscriptions`4">
      <exclude />
    </member>
    <member name="T:OpcLabs.EasyOpc.Implementation.NetApi.NetApiFifoEventArgs`2">
      <exclude />
    </member>
    <member name="T:OpcLabs.EasyOpc.Implementation.NetApi.NetApiItemSubscriptionState">
      <exclude />
    </member>
    <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.NetApiOpcComServerEnumerator.GetAvailableServers(Opc.Specification)">
      <summary>
            Returns a list of servers that support the specified interface specification.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.NetApiOpcComServerEnumerator.GetAvailableServers(Opc.Specification,System.String,Opc.ConnectData)">
      <summary>
            Returns a list of servers that support the specified specification on the specified host.
            </summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.Implementation.NetApi.NetApiOpcComServerEnumerator.Clsid">
      <summary>
            The CLSID for the OPC Server Enumerator.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.NetApiOpcComServerEnumerator.CreateUrl(OpcRcw.Comn.IOPCServerList2,System.String,Opc.Specification,System.Guid,System.String@,System.String@,System.String@)">
      <summary>
            Reads the server details from the enumerator.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.NetApiOpcComServerEnumerator.ReadClasses(OpcRcw.Comn.IOPCEnumGUID)">
      <summary>
            Reads the guids from the enumerator.
            </summary>
    </member>
    <member name="T:OpcLabs.EasyOpc.Implementation.NetApi.NetApiOpcServer`2">
      <exclude />
    </member>
    <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.NetApiOpcServer`2.#ctor(System.Net.WebProxy,OpcLabs.EasyOpc.Implementation.NetApi.NetApiOpcServerKey,System.Action{OpcLabs.EasyOpc.Implementation.NetApi.INetApiOpcServerForLink{`0},System.Boolean},OpcLabs.EasyOpc.Implementation.NetApi.EasyClientConnectDataParameters)">
      <summary>
      </summary>
      <param name="proxy">
      </param>
      <param name="serverKey">
      </param>
      <param name="destroyOpcServer">This action is called when NetApiOpcXxServer has no server link for detach time interval. Action would be dispose NetApiOpcXxServer. Action is method of object, which controls NetApiOpcXxServer.</param>
      <param name="easyClientConnectDataParameters">
      </param>
    </member>
    <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.NetApiOpcServer`2.GetLocale(System.String)">
      <summary>
            Converts a Locale string to a LCID.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.NetApiOpcServer`2.ServerLinkDisposed(OpcLabs.EasyOpc.Implementation.NetApi.NetApiOpcServerLink{`0},System.Int32)">
      <summary>
      </summary>
      <param name="link">
      </param>
      <param name="serverDetach">After a server object is detached, connection to the OPC server will be maintained at least for the time period specified here.</param>
    </member>
    <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.NetApiOpcServer`2.GetHashCode">
      <inheritdoc cref="M:System.Object.GetHashCode" />
    </member>
    <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.NetApiOpcServer`2.CreateServerForURL(Opc.URL,OpcLabs.EasyOpc.OpcTechnologies@)">
      <summary>
            Creates a server object for the specified URL.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.NetApiOpcServer`2.GetServer(System.Exception@)">
      <summary>
            Remark: Must be used lock(server_lock) in caller.
            </summary>
      <param name="exception">
      </param>
      <returns>
      </returns>
    </member>
    <member name="F:OpcLabs.EasyOpc.Implementation.NetApi.NetApiOpcServer`2.LOCALE_SYSTEM_DEFAULT">
      <summary>
            The constant used to selected the default locale.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.NetApiOpcServer`2.ToLocale(System.Int32,System.Exception@)">
      <summary>
            Converts a LCID to a Locale string.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.NetApiOpcServer`2.ConnectToServer(System.Net.WebProxy,Opc.Server,System.Net.NetworkCredential,System.String,OpcLabs.EasyOpc.Implementation.NetApi.EasyClientConnectDataParameters,OpcLabs.EasyOpc.ServerCategories)">
      <summary>
            Called to connect to a server. Before call must be locked _serverLock.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.NetApiOpcServer`2.IsHeldAt(System.Int64)">
      <summary>
            Indicates whether hold period has not expired yet.
            Remark: Must be used lock(_links).
            </summary>
      <param name="tickCount">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.NetApiOpcServer`2.HoldFor(System.Int32)">
      <summary>
            Sets new hold period. 
            Remark: Must be used lock(_links).
            </summary>
      <param name="period">
      </param>
    </member>
    <member name="F:OpcLabs.EasyOpc.Implementation.NetApi.NetApiOpcServer`2._server">
      <summary>
            Represent a Opc.Xx.Server. During operation must be locked by _serverLock.
            </summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.Implementation.NetApi.NetApiOpcServer`2._proxy">
      <summary>
            The default web proxy for the application - uses IE settings if null.
            </summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.Implementation.NetApi.NetApiOpcServer`2._holdTick">
      <summary>
            When was last HoldFor called. Must be used lock(_links).
            </summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.Implementation.NetApi.NetApiOpcServer`2._holdPeriod">
      <summary>
            How much ticks after _holdTick will be held connection to server. Must be used lock (_links).
            </summary>
    </member>
    <member name="T:OpcLabs.EasyOpc.Implementation.NetApi.NetApiOpcServerCache`1">
      <exclude />
    </member>
    <member name="F:OpcLabs.EasyOpc.Implementation.NetApi.NetApiOpcServerCache`1._servers">
      <summary>
            Remarks: Must be locked before using.
            </summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.Implementation.NetApi.NetApiOpcServerCache`1._proxy">
      <summary>
            The default web proxy for the application - uses IE settings if null.
            </summary>
    </member>
    <member name="T:OpcLabs.EasyOpc.Implementation.NetApi.NetApiOpcServerKey">
      <exclude />
    </member>
    <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.NetApiOpcServerKey.Equals(System.Object)">
      <inheritdoc cref="M:System.Object.Equals(System.Object)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.NetApiOpcServerKey.GetHashCode">
      <inheritdoc cref="M:System.Object.GetHashCode" />
    </member>
    <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.NetApiOpcServerKey.ToString">
      <inheritdoc cref="M:System.Object.ToString" />
    </member>
    <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.NetApiOpcServerKey.Equals(OpcLabs.EasyOpc.Implementation.NetApi.NetApiOpcServerKey)">
      <summary>
            Determines whether this object is equal to the other.
            </summary>
      <param name="other">The other object to be tested for equality with this one.</param>
      <returns>Returns <c>true</c> if the objects are equal; otherwise, returns <c>false</c>.</returns>
    </member>
    <member name="T:OpcLabs.EasyOpc.Implementation.NetApi.NetApiOpcServerLink`1">
      <exclude />
    </member>
    <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.NetApiOpcServerLink`1.Equals(System.Object)">
      <inheritdoc cref="M:System.Object.Equals(System.Object)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.NetApiOpcServerLink`1.GetHashCode">
      <inheritdoc cref="M:System.Object.GetHashCode" />
    </member>
    <member name="T:OpcLabs.EasyOpc.Implementation.NetApi.NetApiOpcServerState">
      <exclude />
      <summary>
            The set of possible server states.
            </summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.Implementation.NetApi.NetApiOpcServerState.Unknown">
      <summary>
            The server state is not known.
            </summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.Implementation.NetApi.NetApiOpcServerState.Running">
      <summary>
            The server is running normally.
            </summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.Implementation.NetApi.NetApiOpcServerState.Failed">
      <summary>
            The server is not functioning due to a fatal error.
            </summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.Implementation.NetApi.NetApiOpcServerState.NoConfig">
      <summary>
            The server cannot load its configuration information.
            </summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.Implementation.NetApi.NetApiOpcServerState.Suspended">
      <summary>
            The server has halted all communication with the underlying hardware.
            </summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.Implementation.NetApi.NetApiOpcServerState.Test">
      <summary>
            The server is disconnected from the underlying hardware.
            </summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.Implementation.NetApi.NetApiOpcServerState.CommFault">
      <summary>
            The server cannot communicate with the underlying hardware.
            </summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.Implementation.NetApi.NetApiOpcServerState.Unrecognized">
      <summary>
            Server state is unrecognized.
            </summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.Implementation.NetApi.NetApiOpcServerState.Shutdown">
      <summary>
            The server is shutdown.
            </summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.Implementation.NetApi.NetApiOpcServerState.UnexpectedValue">
      <summary>
            Server state returned unexpected value.
            </summary>
    </member>
    <member name="F:OpcLabs.EasyOpc.Implementation.NetApi.NetApiOpcServerState.Exception">
      <summary>
            Server state returned exception.
            </summary>
    </member>
    <member name="T:OpcLabs.EasyOpc.Implementation.NetApi.NetApiOpcServerStatus">
      <exclude />
    </member>
    <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.NetApiOpcServerStatus.Equals(System.Object)">
      <inheritdoc cref="M:System.Object.Equals(System.Object)" />
    </member>
    <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.NetApiOpcServerStatus.GetHashCode">
      <inheritdoc cref="M:System.Object.GetHashCode" />
    </member>
    <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.NetApiOpcServerStatus.ToString">
      <inheritdoc cref="M:System.Object.ToString" />
    </member>
    <member name="T:OpcLabs.EasyOpc.Implementation.NetApi.NetApiOpcServerStatusEventArgs">
      <exclude />
    </member>
    <member name="T:OpcLabs.EasyOpc.Implementation.NetApi.NetApiSubscriptionHandleManager`1">
      <exclude />
    </member>
    <member name="T:OpcLabs.EasyOpc.Implementation.NetApi.NetApiSubscriptions`7">
      <exclude />
    </member>
    <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.NetApiSubscriptions`7.GetHashCode">
      <inheritdoc cref="M:System.Object.GetHashCode" />
    </member>
    <member name="M:OpcLabs.EasyOpc.Implementation.NetApi.NetApiSubscriptions`7.Equals(System.Object)">
      <inheritdoc cref="M:System.Object.Equals(System.Object)" />
    </member>
    <member name="T:OpcLabs.EasyOpc.Implementation.NetApi.Resource1">
      <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.Resource1.ResourceManager">
      <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.Resource1.Culture">
      <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.Resource1.INetApiEasyClientExtension_CheckException_OPCExceptionMessage_TextFormat">
      <summary>
              Looks up a localized string similar to An OPC operation failure occurred in the NET API OPC {0} client. The inner exception contains details about the problem..
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.Resource1.INetApiEasyClientExtension_CheckServerDescriptor_NotSupportedTechnology_TextFormat">
      <summary>
              Looks up a localized string similar to Technology "{1}" is not supported by the NET API OPC {0} client..
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.Resource1.NetApiOpcServer_ToLocale_InvalidLCID_TextFormat">
      <summary>
              Looks up a localized string similar to LCID {0} is invalid in NET API OPC Data Access client..
            </summary>
    </member>
    <member name="P:OpcLabs.EasyOpc.Implementation.NetApi.Resource1.NetApiOpcServerStatus_StatusIsBad_TextFormat">
      <summary>
              Looks up a localized string similar to OPC server has returned status: '{0}'. Problem details (status info): {1}.
            </summary>
    </member>
    <member name="T:OpcLabs.EasyOpc.Implementation.NetApi.SortedListWithSameKey`2">
      <exclude />
    </member>
    <member name="T:OpcLabs.EasyOpc.Implementation.NetApi.TickCountWithPeriod">
      <exclude />
    </member>
    <member name="T:OpcLabs.EasyOpc.Implementation.Service.AlarmsAndEvents.NamespaceDoc">
      <summary>
            This namespace contains classes that implement OPC Alarms&amp;Events using WCF consumer.
            </summary>
    </member>
    <member name="T:OpcLabs.EasyOpc.Implementation.Service.DataAccess.NamespaceDoc">
      <summary>
            This namespace contains classes that implement OPC Data Access using WCF consumer.
            </summary>
    </member>
    <member name="T:OpcLabs.EasyOpc.Internal.AssemblyNames">
      <exclude />
    </member>
    <member name="T:OpcLabs.EasyOpc.Boxing.Redistributables.NamespaceDoc">
      <summary>
            This namespace contains boxer classes for OPC "Classic" redistributables.
            </summary>
    </member>
    <member name="T:OpcLabs.EasyOpc.Boxing.Redistributables.Ucrt10RedistBoxer">
      <exclude />
    </member>
    <member name="T:OpcLabs.EasyOpc.Boxing.Redistributables.VC142RedistBoxer">
      <exclude />
    </member>
    <member name="T:OpcLabs.BaseLib.Internal.AssemblyNames">
      <exclude />
    </member>
    <member name="T:OpcLabs.BaseLib.Internal.PublicKeyTokens">
      <exclude />
    </member>
    <member name="T:OpcLabs.BaseLib.Internal.SystemAssemblyNames">
      <exclude />
    </member>
    <member name="T:Opc.Ae.Attribute">
      <summary>
            The description of an attribute supported by the server.
            </summary>
    </member>
    <member name="P:Opc.Ae.Attribute.ID">
      <summary>
            A unique identifier for the attribute.
            </summary>
    </member>
    <member name="P:Opc.Ae.Attribute.Name">
      <summary>
            The unique name for the attribute.
            </summary>
    </member>
    <member name="P:Opc.Ae.Attribute.DataType">
      <summary>
            The data type of the attribute.
            </summary>
    </member>
    <member name="M:Opc.Ae.Attribute.ToString">
      <summary>
            Returns a string that represents the current object.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Opc.Ae.Attribute.Clone">
      <summary>
            Creates a shallow copy of the object.
            </summary>
    </member>
    <member name="T:Opc.Ae.AttributeValue">
      <summary>
            The value of an attribute for an event source.
            </summary>
    </member>
    <member name="P:Opc.Ae.AttributeValue.ID">
      <summary>
            A unique identifier for the attribute.
            </summary>
    </member>
    <member name="P:Opc.Ae.AttributeValue.Value">
      <summary>
            The attribute value.
            </summary>
    </member>
    <member name="P:Opc.Ae.AttributeValue.ResultID">
      <summary>
            The error id for the result of an operation on an property.
            </summary>
    </member>
    <member name="P:Opc.Ae.AttributeValue.DiagnosticInfo">
      <summary>
            Vendor specific diagnostic information (not the localized error text).
            </summary>
    </member>
    <member name="M:Opc.Ae.AttributeValue.Clone">
      <summary>
            Creates a deep copy of the object.
            </summary>
    </member>
    <member name="T:Opc.Ae.AttributeDictionary">
      <summary>
            Contains multiple lists of the attributes indexed by category.
            </summary>
    </member>
    <member name="P:Opc.Ae.AttributeDictionary.Item(System.Int32)">
      <summary>
            Gets or sets the atrtibute collection for the specified category. 
            </summary>
    </member>
    <member name="M:Opc.Ae.AttributeDictionary.Add(System.Int32,System.Int32[])">
      <summary>
            Adds an element with the provided key and value to the IDictionary.
            </summary>
    </member>
    <member name="M:Opc.Ae.AttributeDictionary.#ctor">
      <summary>
            Constructs an empty dictionary.
            </summary>
    </member>
    <member name="M:Opc.Ae.AttributeDictionary.#ctor(System.Int32[])">
      <summary>
            Constructs an dictionary from a set of category ids.
            </summary>
    </member>
    <member name="T:Opc.Ae.AttributeCollection">
      <summary>
            Contains a writeable collection attribute ids.
            </summary>
    </member>
    <member name="P:Opc.Ae.AttributeCollection.Item(System.Int32)">
      <summary>
            An indexer for the collection.
            </summary>
    </member>
    <member name="M:Opc.Ae.AttributeCollection.ToArray">
      <summary>
            Returns a copy of the collection as an array.
            </summary>
    </member>
    <member name="M:Opc.Ae.AttributeCollection.#ctor">
      <summary>
            Creates an empty collection.
            </summary>
    </member>
    <member name="M:Opc.Ae.AttributeCollection.#ctor(System.Int32[])">
      <summary>
            Creates a collection from an array.
            </summary>
    </member>
    <member name="T:Opc.Ae.BrowseElement">
      <summary>
            Contains a description of an element in the server address space.
            </summary>
    </member>
    <member name="P:Opc.Ae.BrowseElement.Name">
      <summary>
            A descriptive name for element that is unique within a branch.
            </summary>
    </member>
    <member name="P:Opc.Ae.BrowseElement.QualifiedName">
      <summary>
            The fully qualified name for the element.
            </summary>
    </member>
    <member name="P:Opc.Ae.BrowseElement.NodeType">
      <summary>
            Whether the element is a source or an area.
            </summary>
    </member>
    <member name="M:Opc.Ae.BrowseElement.Clone">
      <summary>
            Creates a deep copy of the object.
            </summary>
    </member>
    <member name="T:Opc.Ae.BrowsePosition">
      <summary>
            Stores the state of a browse operation.
            </summary>
    </member>
    <member name="M:Opc.Ae.BrowsePosition.#ctor(System.String,Opc.Ae.BrowseType,System.String)">
      <summary>
            Saves the parameters for an incomplete browse information.
            </summary>
    </member>
    <member name="P:Opc.Ae.BrowsePosition.AreaID">
      <summary>
            The fully qualified id for the area being browsed.
            </summary>
    </member>
    <member name="P:Opc.Ae.BrowsePosition.BrowseType">
      <summary>
            The type of child element being returned with the browse.
            </summary>
    </member>
    <member name="P:Opc.Ae.BrowsePosition.BrowseFilter">
      <summary>
            The filter applied to the name of the elements being returned.
            </summary>
    </member>
    <member name="M:Opc.Ae.BrowsePosition.Finalize">
      <summary>
            The finalizer.
            </summary>
    </member>
    <member name="M:Opc.Ae.BrowsePosition.Dispose">
      <summary>
            Releases unmanaged resources held by the object.
            </summary>
    </member>
    <member name="M:Opc.Ae.BrowsePosition.Dispose(System.Boolean)">
      <summary>
            Releases unmanaged resources held by the object.
            </summary>
    </member>
    <member name="M:Opc.Ae.BrowsePosition.Clone">
      <summary>
            Creates a shallow copy of the object.
            </summary>
    </member>
    <member name="T:Opc.Ae.BrowseType">
      <summary>
            The type of nodes to return during a browse.
            </summary>
    </member>
    <member name="F:Opc.Ae.BrowseType.Area">
      <summary>
            Return only nodes that are process areas.
            </summary>
    </member>
    <member name="F:Opc.Ae.BrowseType.Source">
      <summary>
            Return only nodes that are event soucres.
            </summary>
    </member>
    <member name="T:Opc.Ae.Category">
      <summary>
            The description of an event category supported by the server.
            </summary>
    </member>
    <member name="P:Opc.Ae.Category.ID">
      <summary>
            A unique identifier for the category.
            </summary>
    </member>
    <member name="P:Opc.Ae.Category.Name">
      <summary>
            The unique name for the category.
            </summary>
    </member>
    <member name="M:Opc.Ae.Category.ToString">
      <summary>
            Returns a string that represents the current object.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Opc.Ae.Category.Clone">
      <summary>
            Creates a shallow copy of the object.
            </summary>
    </member>
    <member name="T:Opc.Ae.Condition">
      <summary>
            The description of an item condition state supported by the server.
            </summary>
    </member>
    <member name="P:Opc.Ae.Condition.State">
      <summary>
            A bit mask indicating the current state of the condition
            </summary>
    </member>
    <member name="P:Opc.Ae.Condition.ActiveSubCondition">
      <summary>
            The currently active sub-condition, for multi-state conditions which are active. 
            For a single-state condition, this contains the information about the condition itself.
            For inactive conditions, this value is null.
            </summary>
    </member>
    <member name="P:Opc.Ae.Condition.Quality">
      <summary>
            The quality associated with the condition state.
            </summary>
    </member>
    <member name="P:Opc.Ae.Condition.LastAckTime">
      <summary>
            The time of the most recent acknowledgment of this condition (of any sub-condition).
            </summary>
    </member>
    <member name="P:Opc.Ae.Condition.SubCondLastActive">
      <summary>
            Time of the most recent transition into active sub-condition. 
            This is the time value which must be specified when acknowledging the condition. 
            If the condition has never been active, this value is DateTime.MinValue.
            </summary>
    </member>
    <member name="P:Opc.Ae.Condition.CondLastActive">
      <summary>
            Time of the most recent transition into the condition. 
            There may be transitions among the sub-conditions which are more recent. 
            If the condition has never been active, this value is DateTime.MinValue.
            </summary>
    </member>
    <member name="P:Opc.Ae.Condition.CondLastInactive">
      <summary>
            Time of the most recent transition out of this condition. 
            This value is DateTime.MinValue if the condition has never been active, 
            or if it is currently active for the first time and has never been exited.
            </summary>
    </member>
    <member name="P:Opc.Ae.Condition.AcknowledgerID">
      <summary>
            This is the ID of the client who last acknowledged this condition. 
            This value is null if the condition has never been acknowledged.
            </summary>
    </member>
    <member name="P:Opc.Ae.Condition.Comment">
      <summary>
            The comment string passed in by the client who last acknowledged this condition.
            This value is null if the condition has never been acknowledged.
            </summary>
    </member>
    <member name="P:Opc.Ae.Condition.SubConditions">
      <summary>
            The sub-conditions defined for this condition. 
            For single-state conditions, the collection will contain one element, the value of which describes the condition.
            </summary>
    </member>
    <member name="P:Opc.Ae.Condition.Attributes">
      <summary>
            The values of the attributes requested for this condition. 
            </summary>
    </member>
    <member name="T:Opc.Ae.Condition.AttributeValueCollection">
      <summary>
            Contains a read-only collection of AttributeValues.
            </summary>
    </member>
    <member name="P:Opc.Ae.Condition.AttributeValueCollection.Item(System.Int32)">
      <summary>
            An indexer for the collection.
            </summary>
    </member>
    <member name="M:Opc.Ae.Condition.AttributeValueCollection.ToArray">
      <summary>
            Returns a copy of the collection as an array.
            </summary>
    </member>
    <member name="M:Opc.Ae.Condition.AttributeValueCollection.#ctor">
      <summary>
            Creates an empty collection.
            </summary>
    </member>
    <member name="T:Opc.Ae.Condition.SubConditionCollection">
      <summary>
            Contains a read-only collection of SubConditions.
            </summary>
    </member>
    <member name="P:Opc.Ae.Condition.SubConditionCollection.Item(System.Int32)">
      <summary>
            An indexer for the collection.
            </summary>
    </member>
    <member name="M:Opc.Ae.Condition.SubConditionCollection.ToArray">
      <summary>
            Returns a copy of the collection as an array.
            </summary>
    </member>
    <member name="M:Opc.Ae.Condition.SubConditionCollection.#ctor">
      <summary>
            Creates an empty collection.
            </summary>
    </member>
    <member name="M:Opc.Ae.Condition.Clone">
      <summary>
            Creates a deep copy of the object.
            </summary>
    </member>
    <member name="T:Opc.Ae.ConditionState">
      <summary>
            The possible states for a condition.
            </summary>
    </member>
    <member name="F:Opc.Ae.ConditionState.Enabled">
      <summary>
            The server is currently checking the state of the condition.
            </summary>
    </member>
    <member name="F:Opc.Ae.ConditionState.Active">
      <summary>
            The associated object is in the state represented by the condition.
            </summary>
    </member>
    <member name="F:Opc.Ae.ConditionState.Acknowledged">
      <summary>
            The condition has been acknowledged.
            </summary>
    </member>
    <member name="T:Opc.Ae.SubCondition">
      <summary>
            The description of an item sub-condition supported by the server.
            </summary>
    </member>
    <member name="P:Opc.Ae.SubCondition.Name">
      <summary>
            The name assigned to the sub-condition.
            </summary>
    </member>
    <member name="P:Opc.Ae.SubCondition.Definition">
      <summary>
            A server-specific expression which defines the sub-state represented by the sub-condition.
            </summary>
    </member>
    <member name="P:Opc.Ae.SubCondition.Severity">
      <summary>
            The severity of any event notifications generated on behalf of this sub-condition.
            </summary>
    </member>
    <member name="P:Opc.Ae.SubCondition.Description">
      <summary>
            The text string to be included in any event notification generated on behalf of this sub-condition.
            </summary>
    </member>
    <member name="M:Opc.Ae.SubCondition.ToString">
      <summary>
            Returns a string that represents the current object.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Opc.Ae.SubCondition.Clone">
      <summary>
            Creates a shallow copy of the object.
            </summary>
    </member>
    <member name="T:Opc.Ae.IServer">
      <summary>
            Defines functionality that is common to all OPC Data Access servers.
            </summary>
    </member>
    <member name="M:Opc.Ae.IServer.GetStatus">
      <summary>
            Returns the current server status.
            </summary>
      <returns>The current server status.</returns>
    </member>
    <member name="M:Opc.Ae.IServer.CreateSubscription(Opc.Ae.SubscriptionState)">
      <summary>
            Creates a new event subscription.
            </summary>
      <param name="state">The initial state for the subscription.</param>
      <returns>The new subscription object.</returns>
    </member>
    <member name="M:Opc.Ae.IServer.QueryAvailableFilters">
      <summary>
            Returns the event filters supported by the server.
            </summary>
      <returns>A bit mask of all event filters supported by the server.</returns>
    </member>
    <member name="M:Opc.Ae.IServer.QueryEventCategories(System.Int32)">
      <summary>		
            Returns the event categories supported by the server for the specified event types.
            </summary>
      <param name="eventType">A bit mask for the event types of interest.</param>
      <returns>A collection of event categories.</returns>
    </member>
    <member name="M:Opc.Ae.IServer.QueryConditionNames(System.Int32)">
      <summary>
            Returns the condition names supported by the server for the specified event categories.
            </summary>
      <param name="eventCategory">A bit mask for the event categories of interest.</param>
      <returns>A list of condition names.</returns>
    </member>
    <member name="M:Opc.Ae.IServer.QuerySubConditionNames(System.String)">
      <summary>
            Returns the sub-condition names supported by the server for the specified event condition.
            </summary>
      <param name="conditionName">The name of the condition.</param>
      <returns>A list of sub-condition names.</returns>
    </member>
    <member name="M:Opc.Ae.IServer.QueryConditionNames(System.String)">
      <summary>
            Returns the condition names supported by the server for the specified event source.
            </summary>
      <param name="sourceName">The name of the event source.</param>
      <returns>A list of condition names.</returns>
    </member>
    <member name="M:Opc.Ae.IServer.QueryEventAttributes(System.Int32)">
      <summary>		
            Returns the event attributes supported by the server for the specified event categories.
            </summary>
      <param name="eventCategory">The event category of interest.</param>
      <returns>A collection of event attributes.</returns>
    </member>
    <member name="M:Opc.Ae.IServer.TranslateToItemIDs(System.String,System.Int32,System.String,System.String,System.Int32[])">
      <summary>
            Returns the DA item ids for a set of attribute ids belonging to events which meet the specified filter criteria.
            </summary>
      <param name="sourceName">The event source of interest.</param>
      <param name="eventCategory">The id of the event category for the events of interest.</param>
      <param name="conditionName">The name of a condition within the event category.</param>
      <param name="subConditionName">The name of a sub-condition within a multi-state condition.</param>
      <param name="attributeIDs">The ids of the attributes to return item ids for.</param>
      <returns>A list of item urls for each specified attribute.</returns>
    </member>
    <member name="M:Opc.Ae.IServer.GetConditionState(System.String,System.String,System.Int32[])">
      <summary>
            Returns the current state information for the condition instance corresponding to the source and condition name.
            </summary>
      <param name="sourceName">The source name</param>
      <param name="conditionName">A condition name for the source.</param>
      <param name="attributeIDs">The list of attributes to return with the condition state.</param>
      <returns>The current state of the connection.</returns>
    </member>
    <member name="M:Opc.Ae.IServer.EnableConditionByArea(System.String[])">
      <summary>
            Places the specified process areas into the enabled state.
            </summary>
      <param name="areas">A list of fully qualified area names.</param>
      <returns>The results of the operation for each area.</returns>
    </member>
    <member name="M:Opc.Ae.IServer.DisableConditionByArea(System.String[])">
      <summary>
            Places the specified process areas into the disabled state.
            </summary>
      <param name="areas">A list of fully qualified area names.</param>
      <returns>The results of the operation for each area.</returns>
    </member>
    <member name="M:Opc.Ae.IServer.EnableConditionBySource(System.String[])">
      <summary>
            Places the specified process areas into the enabled state.
            </summary>
      <param name="sources">A list of fully qualified source names.</param>
      <returns>The results of the operation for each area.</returns>
    </member>
    <member name="M:Opc.Ae.IServer.DisableConditionBySource(System.String[])">
      <summary>
            Places the specified process areas into the disabled state.
            </summary>
      <param name="sources">A list of fully qualified source names.</param>
      <returns>The results of the operation for each area.</returns>
    </member>
    <member name="M:Opc.Ae.IServer.GetEnableStateByArea(System.String[])">
      <summary>
            Returns the enabled state for the specified process areas. 
            </summary>
      <param name="areas">A list of fully qualified area names.</param>
    </member>
    <member name="M:Opc.Ae.IServer.GetEnableStateBySource(System.String[])">
      <summary>
            Returns the enabled state for the specified event sources. 
            </summary>
      <param name="sources">A list of fully qualified source names.</param>
    </member>
    <member name="M:Opc.Ae.IServer.AcknowledgeCondition(System.String,System.String,Opc.Ae.EventAcknowledgement[])">
      <summary>
            Used to acknowledge one or more conditions in the event server.
            </summary>
      <param name="acknowledgerID">The identifier for who is acknowledging the condition.</param>
      <param name="comment">A comment associated with the acknowledgment.</param>
      <param name="conditions">The conditions being acknowledged.</param>
      <returns>A list of result id indictaing whether each condition was successfully acknowledged.</returns>
    </member>
    <member name="M:Opc.Ae.IServer.Browse(System.String,Opc.Ae.BrowseType,System.String)">
      <summary>
            Browses for all children of the specified area that meet the filter criteria.
            </summary>
      <param name="areaID">The full-qualified id for the area.</param>
      <param name="browseType">The type of children to return.</param>
      <param name="browseFilter">The expression used to filter the names of children returned.</param>
      <returns>The set of elements that meet the filter criteria.</returns>
    </member>
    <member name="M:Opc.Ae.IServer.Browse(System.String,Opc.Ae.BrowseType,System.String,System.Int32,Opc.IBrowsePosition@)">
      <summary>
            Browses for all children of the specified area that meet the filter criteria.
            </summary>
      <param name="areaID">The full-qualified id for the area.</param>
      <param name="browseType">The type of children to return.</param>
      <param name="browseFilter">The expression used to filter the names of children returned.</param>
      <param name="maxElements">The maximum number of elements to return.</param>
      <param name="position">The object used to continue the browse if the number nodes exceeds the maximum specified.</param>
      <returns>The set of elements that meet the filter criteria.</returns>
    </member>
    <member name="M:Opc.Ae.IServer.BrowseNext(System.Int32,Opc.IBrowsePosition@)">
      <summary>
            Continues browsing the server's address space at the specified position.
            </summary>
      <param name="maxElements">The maximum number of elements to return.</param>
      <param name="position">The position object used to continue a browse operation.</param>
      <returns>The set of elements that meet the filter criteria.</returns>
    </member>
    <member name="T:Opc.Ae.ServerState">
      <summary>
            The set of possible server states.
            </summary>
    </member>
    <member name="F:Opc.Ae.ServerState.Unknown">
      <summary>
            The server state is not known.
            </summary>
    </member>
    <member name="F:Opc.Ae.ServerState.Running">
      <summary>
            The server is running normally.
            </summary>
    </member>
    <member name="F:Opc.Ae.ServerState.Failed">
      <summary>
            The server is not functioning due to a fatal error.
            </summary>
    </member>
    <member name="F:Opc.Ae.ServerState.NoConfig">
      <summary>
            The server cannot load its configuration information.
            </summary>
    </member>
    <member name="F:Opc.Ae.ServerState.Suspended">
      <summary>
            The server has halted all communication with the underlying hardware.
            </summary>
    </member>
    <member name="F:Opc.Ae.ServerState.Test">
      <summary>
            The server is disconnected from the underlying hardware.
            </summary>
    </member>
    <member name="F:Opc.Ae.ServerState.CommFault">
      <summary>
            The server cannot communicate with the underlying hardware.
            </summary>
    </member>
    <member name="T:Opc.Ae.ServerStatus">
      <summary>
            Contains properties that describe the current status of an OPC server.
            </summary>
    </member>
    <member name="P:Opc.Ae.ServerStatus.VendorInfo">
      <summary>
            The vendor name and product name for the server.
            </summary>
    </member>
    <member name="P:Opc.Ae.ServerStatus.ProductVersion">
      <summary>
            A string that contains the server software version number.
            </summary>
    </member>
    <member name="P:Opc.Ae.ServerStatus.ServerState">
      <summary>
            The current state of the server.
            </summary>
    </member>
    <member name="P:Opc.Ae.ServerStatus.StatusInfo">
      <summary>
            A string that describes the current server state.
            </summary>
    </member>
    <member name="P:Opc.Ae.ServerStatus.StartTime">
      <summary>
            The UTC time when the server started.
            </summary>
    </member>
    <member name="P:Opc.Ae.ServerStatus.CurrentTime">
      <summary>
            Th current UTC time at the server.
            </summary>
    </member>
    <member name="P:Opc.Ae.ServerStatus.LastUpdateTime">
      <summary>
            The last time the server sent an data update to the client.
            </summary>
    </member>
    <member name="M:Opc.Ae.ServerStatus.Clone">
      <summary>
            Creates a deepcopy of the object.
            </summary>
    </member>
    <member name="T:Opc.Ae.EventAcknowledgement">
      <summary>
            Specifies the information required to acknowledge an event.
            </summary>
    </member>
    <member name="P:Opc.Ae.EventAcknowledgement.SourceName">
      <summary>
            The name of the source that generated the event.
            </summary>
    </member>
    <member name="P:Opc.Ae.EventAcknowledgement.ConditionName">
      <summary>
            The name of the condition that is being acknowledged.
            </summary>
    </member>
    <member name="P:Opc.Ae.EventAcknowledgement.ActiveTime">
      <summary>
            The time that the condition or sub-condition became active.
            </summary>
    </member>
    <member name="P:Opc.Ae.EventAcknowledgement.Cookie">
      <summary>
            The cookie for the condition passed to client during the event notification.
            </summary>
    </member>
    <member name="M:Opc.Ae.EventAcknowledgement.#ctor">
      <summary>
            Constructs an acknowledgment with its default values.
            </summary>
    </member>
    <member name="M:Opc.Ae.EventAcknowledgement.#ctor(Opc.Ae.EventNotification)">
      <summary>
            Constructs an acknowledgment from an event notification.
            </summary>
    </member>
    <member name="M:Opc.Ae.EventAcknowledgement.Clone">
      <summary>
            Creates a deep copy of the object.
            </summary>
    </member>
    <member name="T:Opc.Ae.EnabledStateResult">
      <summary>
            The current state of a process area or an event source.
            </summary>
    </member>
    <member name="P:Opc.Ae.EnabledStateResult.Enabled">
      <summary>
            Whether if the area or source is enabled.
            </summary>
    </member>
    <member name="P:Opc.Ae.EnabledStateResult.EffectivelyEnabled">
      <summary>
            Whether the area or source is enabled and all areas within the hierarchy of its containing areas are enabled. 
            </summary>
    </member>
    <member name="P:Opc.Ae.EnabledStateResult.ResultID">
      <summary>
            The error id for the result of an operation on an item.
            </summary>
    </member>
    <member name="P:Opc.Ae.EnabledStateResult.DiagnosticInfo">
      <summary>
            Vendor specific diagnostic information (not the localized error text).
            </summary>
    </member>
    <member name="M:Opc.Ae.EnabledStateResult.#ctor">
      <summary>
            Initializes the object with default values.
            </summary>
    </member>
    <member name="M:Opc.Ae.EnabledStateResult.#ctor(System.String)">
      <summary>
            Initializes the object with an qualified name.
            </summary>
    </member>
    <member name="M:Opc.Ae.EnabledStateResult.#ctor(System.String,Opc.ResultID)">
      <summary>
            Initializes the object with an qualified name and ResultID.
            </summary>
    </member>
    <member name="M:Opc.Ae.EnabledStateResult.Clone">
      <summary>
            Creates a deep copy of the object.
            </summary>
    </member>
    <member name="T:Opc.Ae.ISubscription">
      <summary>
            An interface to an object which implements a AE event subscription.
            </summary>
    </member>
    <member name="E:Opc.Ae.ISubscription.EventChanged">
      <summary>
            An event to receive event change updates.
            </summary>
    </member>
    <member name="M:Opc.Ae.ISubscription.GetState">
      <summary>
            Returns the current state of the subscription.
            </summary>
      <returns>The current state of the subscription.</returns>
    </member>
    <member name="M:Opc.Ae.ISubscription.ModifyState(System.Int32,Opc.Ae.SubscriptionState)">
      <summary>
            Changes the state of a subscription.
            </summary>
      <param name="masks">A bit mask that indicates which elements of the subscription state are changing.</param>
      <param name="state">The new subscription state.</param>
      <returns>The actual subscption state after applying the changes.</returns>
    </member>
    <member name="M:Opc.Ae.ISubscription.GetFilters">
      <summary>
            Returns the current filters for the subscription.
            </summary>
      <returns>The current filters for the subscription.</returns>
    </member>
    <member name="M:Opc.Ae.ISubscription.SetFilters(Opc.Ae.SubscriptionFilters)">
      <summary>
            Sets the current filters for the subscription.
            </summary>
      <param name="filters">The new filters to use for the subscription.</param>
    </member>
    <member name="M:Opc.Ae.ISubscription.GetReturnedAttributes(System.Int32)">
      <summary>
            Returns the set of attributes to return with event notifications.
            </summary>
      <param name="eventCategory">The specific event category for which the attributes apply.</param>
      <returns>The set of attribute ids which returned with event notifications.</returns>
    </member>
    <member name="M:Opc.Ae.ISubscription.SelectReturnedAttributes(System.Int32,System.Int32[])">
      <summary>
            Selects the set of attributes to return with event notifications.
            </summary>
      <param name="eventCategory">The specific event category for which the attributes apply.</param>
      <param name="attributeIDs">The list of attribute ids to return.</param>
    </member>
    <member name="M:Opc.Ae.ISubscription.Refresh">
      <summary>
            Force a refresh for all active conditions and inactive, unacknowledged conditions whose event notifications match the filter of the event subscription.
            </summary>
    </member>
    <member name="M:Opc.Ae.ISubscription.CancelRefresh">
      <summary>
            Cancels an outstanding refresh request.
            </summary>
    </member>
    <member name="T:Opc.Ae.EventChangedEventHandler">
      <summary>
            A delegate to receive data change updates from the server.
            </summary>
    </member>
    <member name="T:Opc.Ae.StateMask">
      <summary>
            Defines masks to be used when modifying the subscription or item state.
            </summary>
    </member>
    <member name="F:Opc.Ae.StateMask.Name">
      <summary>
            A name assigned to subscription.
            </summary>
    </member>
    <member name="F:Opc.Ae.StateMask.ClientHandle">
      <summary>
            The client assigned handle for the item or subscription.
            </summary>
    </member>
    <member name="F:Opc.Ae.StateMask.Active">
      <summary>
            Whether the subscription is active.
            </summary>
    </member>
    <member name="F:Opc.Ae.StateMask.BufferTime">
      <summary>
            The maximum rate at which the server send event notifications.
            </summary>
    </member>
    <member name="F:Opc.Ae.StateMask.MaxSize">
      <summary>
            The requested maximum number of events that will be sent in a single callback.
            </summary>
    </member>
    <member name="F:Opc.Ae.StateMask.KeepAlive">
      <summary>
            The maximum period between updates sent to the client.
            </summary>
    </member>
    <member name="F:Opc.Ae.StateMask.All">
      <summary>
            All fields are valid.
            </summary>
    </member>
    <member name="T:Opc.Ae.EventType">
      <summary>
            The types of events that could be generated by a server.
            </summary>
    </member>
    <member name="F:Opc.Ae.EventType.Simple">
      <summary>
            Events that are not tracking or condition events.
            </summary>
    </member>
    <member name="F:Opc.Ae.EventType.Tracking">
      <summary>
            Events that represent occurrences which involve the interaction of the client with a target within the server.
            </summary>
    </member>
    <member name="F:Opc.Ae.EventType.Condition">
      <summary>
            Events that are associated with transitions in and out states defined by the server.
            </summary>
    </member>
    <member name="F:Opc.Ae.EventType.All">
      <summary>
            All events generated by the server.
            </summary>
    </member>
    <member name="T:Opc.Ae.FilterType">
      <summary>
            The types of event filters that the server could support.
            </summary>
    </member>
    <member name="F:Opc.Ae.FilterType.Event">
      <summary>
            The server supports filtering by event type.
            </summary>
    </member>
    <member name="F:Opc.Ae.FilterType.Category">
      <summary>
            The server supports filtering by event categories.
            </summary>
    </member>
    <member name="F:Opc.Ae.FilterType.Severity">
      <summary>
            The server supports filtering by severity levels.
            </summary>
    </member>
    <member name="F:Opc.Ae.FilterType.Area">
      <summary>
            The server supports filtering by process area.
            </summary>
    </member>
    <member name="F:Opc.Ae.FilterType.Source">
      <summary>
            The server supports filtering by event sources.
            </summary>
    </member>
    <member name="F:Opc.Ae.FilterType.All">
      <summary>
            All filters supported by the server.
            </summary>
    </member>
    <member name="T:Opc.Ae.SubscriptionState">
      <summary>
            Describes the state of a subscription.
            </summary>
    </member>
    <member name="P:Opc.Ae.SubscriptionState.Name">
      <summary>
            A descriptive name for the subscription.
            </summary>
    </member>
    <member name="P:Opc.Ae.SubscriptionState.ClientHandle">
      <summary>
            A unique identifier for the subscription assigned by the client.
            </summary>
    </member>
    <member name="P:Opc.Ae.SubscriptionState.Active">
      <summary>
            Whether the subscription is monitoring for events to send to the client.
            </summary>
    </member>
    <member name="P:Opc.Ae.SubscriptionState.BufferTime">
      <summary>
            The maximum rate at which the server send event notifications.
            </summary>
    </member>
    <member name="P:Opc.Ae.SubscriptionState.MaxSize">
      <summary>
            The requested maximum number of events that will be sent in a single callback.
            </summary>
    </member>
    <member name="P:Opc.Ae.SubscriptionState.KeepAlive">
      <summary>
            The maximum period between updates sent to the client.
            </summary>
    </member>
    <member name="M:Opc.Ae.SubscriptionState.#ctor">
      <summary>
            Initializes object with default values.
            </summary>
    </member>
    <member name="M:Opc.Ae.SubscriptionState.Clone">
      <summary>
            Creates a shallow copy of the object.
            </summary>
    </member>
    <member name="T:Opc.Ae.SubscriptionFilters">
      <summary>
            Describes the event filters for a subscription.
            </summary>
    </member>
    <member name="P:Opc.Ae.SubscriptionFilters.EventTypes">
      <summary>
            A mask indicating which event types should be sent to the client.
            </summary>
    </member>
    <member name="P:Opc.Ae.SubscriptionFilters.HighSeverity">
      <summary>
            The highest severity for the events that should be sent to the client.
            </summary>
    </member>
    <member name="P:Opc.Ae.SubscriptionFilters.LowSeverity">
      <summary>
            The lowest severity for the events that should be sent to the client.
            </summary>
    </member>
    <member name="P:Opc.Ae.SubscriptionFilters.Categories">
      <summary>
            The category ids for the events that should be sent to the client.
            </summary>
    </member>
    <member name="P:Opc.Ae.SubscriptionFilters.Areas">
      <summary>
            A list of full-qualified ids for process areas of interest - only events or conditions in these areas will be reported.
            </summary>
    </member>
    <member name="P:Opc.Ae.SubscriptionFilters.Sources">
      <summary>
            A list of full-qualified ids for sources of interest - only events or conditions from these soucres will be reported.
            </summary>
    </member>
    <member name="T:Opc.Ae.SubscriptionFilters.CategoryCollection">
      <summary>
            Contains a writeable collection category ids.
            </summary>
    </member>
    <member name="P:Opc.Ae.SubscriptionFilters.CategoryCollection.Item(System.Int32)">
      <summary>
            An indexer for the collection.
            </summary>
    </member>
    <member name="M:Opc.Ae.SubscriptionFilters.CategoryCollection.ToArray">
      <summary>
            Returns a copy of the collection as an array.
            </summary>
    </member>
    <member name="M:Opc.Ae.SubscriptionFilters.CategoryCollection.#ctor">
      <summary>
            Creates an empty collection.
            </summary>
    </member>
    <member name="M:Opc.Ae.SubscriptionFilters.CategoryCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Contructs an object by deserializing it from a stream.
            </summary>
    </member>
    <member name="T:Opc.Ae.SubscriptionFilters.StringCollection">
      <summary>
            Contains a writeable collection of strings.
            </summary>
    </member>
    <member name="P:Opc.Ae.SubscriptionFilters.StringCollection.Item(System.Int32)">
      <summary>
            An indexer for the collection.
            </summary>
    </member>
    <member name="M:Opc.Ae.SubscriptionFilters.StringCollection.ToArray">
      <summary>
            Returns a copy of the collection as an array.
            </summary>
    </member>
    <member name="M:Opc.Ae.SubscriptionFilters.StringCollection.#ctor">
      <summary>
            Creates an empty collection.
            </summary>
    </member>
    <member name="M:Opc.Ae.SubscriptionFilters.StringCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Contructs an object by deserializing it from a stream.
            </summary>
    </member>
    <member name="M:Opc.Ae.SubscriptionFilters.#ctor">
      <summary>
            Initializes object with default values.
            </summary>
    </member>
    <member name="T:Opc.Ae.SubscriptionFilters.Names">
      <summary>
            A set of names for fields used in serialization.
            </summary>
    </member>
    <member name="M:Opc.Ae.SubscriptionFilters.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Contructs a server by de-serializing its URL from the stream.
            </summary>
    </member>
    <member name="M:Opc.Ae.SubscriptionFilters.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Serializes a server into a stream.
            </summary>
    </member>
    <member name="M:Opc.Ae.SubscriptionFilters.Clone">
      <summary>
            Creates a deep copy of the object.
            </summary>
    </member>
    <member name="T:Opc.Ae.ChangeMask">
      <summary>
            The bits indicating what changes generated an event notification.
            </summary>
    </member>
    <member name="F:Opc.Ae.ChangeMask.ActiveState">
      <summary>
            The condition’s active state has changed.
            </summary>
    </member>
    <member name="F:Opc.Ae.ChangeMask.AcknowledgeState">
      <summary>
            The condition’s acknowledgment state has changed.
            </summary>
    </member>
    <member name="F:Opc.Ae.ChangeMask.EnableState">
      <summary>
            The condition’s enabled state has changed.
            </summary>
    </member>
    <member name="F:Opc.Ae.ChangeMask.Quality">
      <summary>
            The condition quality has changed.
            </summary>
    </member>
    <member name="F:Opc.Ae.ChangeMask.Severity">
      <summary>
            The severity level has changed.
            </summary>
    </member>
    <member name="F:Opc.Ae.ChangeMask.SubCondition">
      <summary>
            The condition has transitioned into a new sub-condition.
            </summary>
    </member>
    <member name="F:Opc.Ae.ChangeMask.Message">
      <summary>
            The event message has changed.
            </summary>
    </member>
    <member name="F:Opc.Ae.ChangeMask.Attribute">
      <summary>
            One or more event attributes have changed.
            </summary>
    </member>
    <member name="T:Opc.Ae.EventNotification">
      <summary>
            A notification sent by the server when a event change occurs.
            </summary>
    </member>
    <member name="P:Opc.Ae.EventNotification.ClientHandle">
      <summary>
            The handle of the subscription that requested the notification
            </summary>
    </member>
    <member name="P:Opc.Ae.EventNotification.SourceID">
      <summary>
            The identifier for the source that generated the event.
            </summary>
    </member>
    <member name="P:Opc.Ae.EventNotification.Time">
      <summary>
            The time of the event occurrence.
            </summary>
    </member>
    <member name="P:Opc.Ae.EventNotification.Message">
      <summary>
            Event notification message describing the event.
            </summary>
    </member>
    <member name="P:Opc.Ae.EventNotification.EventType">
      <summary>
            The type of event that generated the notification.
            </summary>
    </member>
    <member name="P:Opc.Ae.EventNotification.EventCategory">
      <summary>
            The vendor defined category id for the event.
            </summary>
    </member>
    <member name="P:Opc.Ae.EventNotification.Severity">
      <summary>
            The severity of the event (1..1000).
            </summary>
    </member>
    <member name="P:Opc.Ae.EventNotification.ConditionName">
      <summary>
            The name of the condition related to this event notification.
            </summary>
    </member>
    <member name="P:Opc.Ae.EventNotification.SubConditionName">
      <summary>
            The name of the current sub-condition, for multi-state conditions.
            For a single-state condition, this contains the condition name.
            </summary>
    </member>
    <member name="P:Opc.Ae.EventNotification.Attributes">
      <summary>
            The values of the attributes selected for the event subscription. 
            </summary>
    </member>
    <member name="P:Opc.Ae.EventNotification.ChangeMask">
      <summary>
            Indicates which properties of the condition have changed, to have caused the server to send the event notification.
            </summary>
    </member>
    <member name="P:Opc.Ae.EventNotification.NewState">
      <summary>
            A bit mask specifying the new state of the condition.
            </summary>
    </member>
    <member name="P:Opc.Ae.EventNotification.Quality">
      <summary>
            The quality associated with the condition state.
            </summary>
    </member>
    <member name="P:Opc.Ae.EventNotification.AckRequired">
      <summary>
            Whether the related condition requires acknowledgment of this event.
            </summary>
    </member>
    <member name="P:Opc.Ae.EventNotification.ActiveTime">
      <summary>
            The time that the condition became active (for single-state conditions), or 
            the time of the transition into the current sub-condition (for multi-state conditions).
            </summary>
    </member>
    <member name="P:Opc.Ae.EventNotification.Cookie">
      <summary>
            A server defined cookie associated with the event notification.
            </summary>
    </member>
    <member name="P:Opc.Ae.EventNotification.ActorID">
      <summary>
            For tracking events, this is the actor id for the event notification. 
            For condition-related events, this is the acknowledger id passed by the client.
            </summary>
    </member>
    <member name="T:Opc.Ae.EventNotification.AttributeCollection">
      <summary>
            Contains a read-only collection of AttributeValues.
            </summary>
    </member>
    <member name="M:Opc.Ae.EventNotification.AttributeCollection.#ctor">
      <summary>
            Creates an empty collection.
            </summary>
    </member>
    <member name="M:Opc.Ae.EventNotification.AttributeCollection.#ctor(System.Object[])">
      <summary>
            Creates a collection from an array of objects.
            </summary>
    </member>
    <member name="M:Opc.Ae.EventNotification.SetAttributes(System.Object[])">
      <summary>
            Sets the list of attribute values.
            </summary>
    </member>
    <member name="M:Opc.Ae.EventNotification.Clone">
      <summary>
            Creates a deep copy of the object.
            </summary>
    </member>
    <member name="T:Opc.Ae.ItemUrl">
      <summary>
            The item id and network location of a DA item associated with an event source.
            </summary>
    </member>
    <member name="P:Opc.Ae.ItemUrl.Url">
      <summary>
            The url of the server that contains the item.
            </summary>
    </member>
    <member name="M:Opc.Ae.ItemUrl.#ctor">
      <summary>
            Initializes the object with default values.
            </summary>
    </member>
    <member name="M:Opc.Ae.ItemUrl.#ctor(Opc.ItemIdentifier)">
      <summary>
            Initializes the object with an ItemIdentifier object.
            </summary>
    </member>
    <member name="M:Opc.Ae.ItemUrl.#ctor(Opc.ItemIdentifier,Opc.URL)">
      <summary>
            Initializes the object with an ItemIdentifier object and url.
            </summary>
    </member>
    <member name="M:Opc.Ae.ItemUrl.#ctor(Opc.Ae.ItemUrl)">
      <summary>
            Initializes object with the specified ItemResult object.
            </summary>
    </member>
    <member name="M:Opc.Ae.ItemUrl.Clone">
      <summary>
            Creates a deep copy of the object.
            </summary>
    </member>
    <member name="T:Opc.Ae.ItemUrlCollection">
      <summary>
            Contains a collection of item urls.
            </summary>
    </member>
    <member name="P:Opc.Ae.ItemUrlCollection.Item(System.Int32)">
      <summary>
            An indexer for the collection.
            </summary>
    </member>
    <member name="M:Opc.Ae.ItemUrlCollection.ToArray">
      <summary>
            Returns a copy of the collection as an array.
            </summary>
    </member>
    <member name="M:Opc.Ae.ItemUrlCollection.#ctor">
      <summary>
            Constructs an empty collection.
            </summary>
    </member>
    <member name="M:Opc.Ae.ItemUrlCollection.#ctor(Opc.Ae.ItemUrl[])">
      <summary>
            Constructs a collection from an array of item urls.
            </summary>
    </member>
    <member name="T:Opc.Ae.Server">
      <summary>
            An in-process object which provides access to AE server objects.
            </summary>
    </member>
    <member name="M:Opc.Ae.Server.#ctor(Opc.Factory,Opc.URL)">
      <summary>
            Initializes the object with a factory and a default URL.
            </summary>
      <param name="factory">The Opc.Factory used to connect to remote servers.</param>
      <param name="url">The network address of a remote server.</param>
    </member>
    <member name="T:Opc.Ae.Server.Names">
      <summary>
            A set of names for fields used in serialization.
            </summary>
    </member>
    <member name="M:Opc.Ae.Server.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Contructs a server by de-serializing its URL from the stream.
            </summary>
    </member>
    <member name="M:Opc.Ae.Server.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Serializes a server into a stream.
            </summary>
    </member>
    <member name="P:Opc.Ae.Server.AvailableFilters">
      <summary>
            The filters supported by the server.
            </summary>
    </member>
    <member name="P:Opc.Ae.Server.Subscriptions">
      <summary>
            The outstanding subscriptions for the server.
            </summary>
    </member>
    <member name="T:Opc.Ae.Server.SubscriptionCollection">
      <summary>
            A read-only collection of subscriptions.
            </summary>
    </member>
    <member name="P:Opc.Ae.Server.SubscriptionCollection.Item(System.Int32)">
      <summary>
            An indexer for the collection.
            </summary>
    </member>
    <member name="M:Opc.Ae.Server.SubscriptionCollection.ToArray">
      <summary>
            Returns a copy of the collection as an array.
            </summary>
    </member>
    <member name="M:Opc.Ae.Server.SubscriptionCollection.Add(Opc.Ae.Subscription)">
      <summary>
            Adds a subscription to the end of the collection.
            </summary>
    </member>
    <member name="M:Opc.Ae.Server.SubscriptionCollection.Remove(Opc.Ae.Subscription)">
      <summary>
            Removes a subscription to the from the collection.
            </summary>
    </member>
    <member name="M:Opc.Ae.Server.SubscriptionCollection.#ctor">
      <summary>
            Creates an empty collection.
            </summary>
    </member>
    <member name="M:Opc.Ae.Server.Connect(Opc.URL,Opc.ConnectData)">
      <summary>
            Connects to the server with the specified URL and credentials.
            </summary>
    </member>
    <member name="M:Opc.Ae.Server.Disconnect">
      <summary>
            Disconnects from the server and releases all network resources.
            </summary>
    </member>
    <member name="M:Opc.Ae.Server.GetStatus">
      <summary>
            Returns the current server status.
            </summary>
      <returns>The current server status.</returns>
    </member>
    <member name="M:Opc.Ae.Server.CreateSubscription(Opc.Ae.SubscriptionState)">
      <summary>
            Creates a new event subscription.
            </summary>
      <param name="state">The initial state for the subscription.</param>
      <returns>The new subscription object.</returns>
    </member>
    <member name="M:Opc.Ae.Server.QueryAvailableFilters">
      <summary>
            Returns the event filters supported by the server.
            </summary>
      <returns>A bit mask of all event filters supported by the server.</returns>
    </member>
    <member name="M:Opc.Ae.Server.QueryEventCategories(System.Int32)">
      <summary>		
            Returns the event categories supported by the server for the specified event types.
            </summary>
      <param name="eventType">A bit mask for the event types of interest.</param>
      <returns>A collection of event categories.</returns>
    </member>
    <member name="M:Opc.Ae.Server.QueryConditionNames(System.Int32)">
      <summary>
            Returns the condition names supported by the server for the specified event categories.
            </summary>
      <param name="eventCategory">A bit mask for the event categories of interest.</param>
      <returns>A list of condition names.</returns>
    </member>
    <member name="M:Opc.Ae.Server.QuerySubConditionNames(System.String)">
      <summary>
            Returns the sub-condition names supported by the server for the specified event condition.
            </summary>
      <param name="conditionName">The name of the condition.</param>
      <returns>A list of sub-condition names.</returns>
    </member>
    <member name="M:Opc.Ae.Server.QueryConditionNames(System.String)">
      <summary>
            Returns the condition names supported by the server for the specified event source.
            </summary>
      <param name="sourceName">The name of the event source.</param>
      <returns>A list of condition names.</returns>
    </member>
    <member name="M:Opc.Ae.Server.QueryEventAttributes(System.Int32)">
      <summary>		
            Returns the event attributes supported by the server for the specified event categories.
            </summary>
      <param name="eventCategory">A bit mask for the event categories of interest.</param>
      <returns>A collection of event attributes.</returns>
    </member>
    <member name="M:Opc.Ae.Server.TranslateToItemIDs(System.String,System.Int32,System.String,System.String,System.Int32[])">
      <summary>
            Returns the DA item ids for a set of attribute ids belonging to events which meet the specified filter criteria.
            </summary>
      <param name="sourceName">The event source of interest.</param>
      <param name="eventCategory">The id of the event category for the events of interest.</param>
      <param name="conditionName">The name of a condition within the event category.</param>
      <param name="subConditionName">The name of a sub-condition within a multi-state condition.</param>
      <param name="attributeIDs">The ids of the attributes to return item ids for.</param>
      <returns>A list of item urls for each specified attribute.</returns>
    </member>
    <member name="M:Opc.Ae.Server.GetConditionState(System.String,System.String,System.Int32[])">
      <summary>
            Returns the current state information for the condition instance corresponding to the source and condition name.
            </summary>
      <param name="sourceName">The source name</param>
      <param name="conditionName">A condition name for the source.</param>
      <param name="attributeIDs">The list of attributes to return with the condition state.</param>
      <returns>The current state of the connection.</returns>
    </member>
    <member name="M:Opc.Ae.Server.EnableConditionByArea(System.String[])">
      <summary>
            Places the specified process areas into the enabled state.
            </summary>
      <param name="areas">A list of fully qualified area names.</param>
      <returns>The results of the operation for each area.</returns>
    </member>
    <member name="M:Opc.Ae.Server.DisableConditionByArea(System.String[])">
      <summary>
            Places the specified process areas into the disabled state.
            </summary>
      <param name="areas">A list of fully qualified area names.</param>
      <returns>The results of the operation for each area.</returns>
    </member>
    <member name="M:Opc.Ae.Server.EnableConditionBySource(System.String[])">
      <summary>
            Places the specified process areas into the enabled state.
            </summary>
      <param name="sources">A list of fully qualified source names.</param>
      <returns>The results of the operation for each area.</returns>
    </member>
    <member name="M:Opc.Ae.Server.DisableConditionBySource(System.String[])">
      <summary>
            Places the specified process areas into the disabled state.
            </summary>
      <param name="sources">A list of fully qualified source names.</param>
      <returns>The results of the operation for each area.</returns>
    </member>
    <member name="M:Opc.Ae.Server.GetEnableStateByArea(System.String[])">
      <summary>
            Returns the enabled state for the specified process areas. 
            </summary>
      <param name="areas">A list of fully qualified area names.</param>
    </member>
    <member name="M:Opc.Ae.Server.GetEnableStateBySource(System.String[])">
      <summary>
            Returns the enabled state for the specified event sources. 
            </summary>
      <param name="sources">A list of fully qualified source names.</param>
    </member>
    <member name="M:Opc.Ae.Server.AcknowledgeCondition(System.String,System.String,Opc.Ae.EventAcknowledgement[])">
      <summary>
            Used to acknowledge one or more conditions in the event server.
            </summary>
      <param name="acknowledgerID">The identifier for who is acknowledging the condition.</param>
      <param name="comment">A comment associated with the acknowledgment.</param>
      <param name="conditions">The conditions being acknowledged.</param>
      <returns>A list of result id indictaing whether each condition was successfully acknowledged.</returns>
    </member>
    <member name="M:Opc.Ae.Server.Browse(System.String,Opc.Ae.BrowseType,System.String)">
      <summary>
            Browses for all children of the specified area that meet the filter criteria.
            </summary>
      <param name="areaID">The full-qualified id for the area.</param>
      <param name="browseType">The type of children to return.</param>
      <param name="browseFilter">The expression used to filter the names of children returned.</param>
      <returns>The set of elements that meet the filter criteria.</returns>
    </member>
    <member name="M:Opc.Ae.Server.Browse(System.String,Opc.Ae.BrowseType,System.String,System.Int32,Opc.IBrowsePosition@)">
      <summary>
            Browses for all children of the specified area that meet the filter criteria.
            </summary>
      <param name="areaID">The full-qualified id for the area.</param>
      <param name="browseType">The type of children to return.</param>
      <param name="browseFilter">The expression used to filter the names of children returned.</param>
      <param name="maxElements">The maximum number of elements to return.</param>
      <param name="position">The object used to continue the browse if the number nodes exceeds the maximum specified.</param>
      <returns>The set of elements that meet the filter criteria.</returns>
    </member>
    <member name="M:Opc.Ae.Server.BrowseNext(System.Int32,Opc.IBrowsePosition@)">
      <summary>
            Continues browsing the server's address space at the specified position.
            </summary>
      <param name="maxElements">The maximum number of elements to return.</param>
      <param name="position">The position object used to continue a browse operation.</param>
      <returns>The set of elements that meet the filter criteria.</returns>
    </member>
    <member name="M:Opc.Ae.Server.SubscriptionDisposed(Opc.Ae.Subscription)">
      <summary>
            Called when a subscription object is disposed.
            </summary>
      <param name="subscription">
      </param>
    </member>
    <member name="M:Opc.Ae.Server.EstablishSubscription(Opc.Ae.Subscription)">
      <summary>
            Establishes a subscription based on the template provided.
            </summary>
    </member>
    <member name="T:Opc.Ae.GetStatusAsyncDelegate">
      <summary>
            The asynchronous delegate for GetStatus.
            </summary>
    </member>
    <member name="T:Opc.Ae.Subscription">
      <summary>
            An in-process object which provides access to AE subscription objects.
            </summary>
    </member>
    <member name="M:Opc.Ae.Subscription.#ctor(Opc.Ae.Server,Opc.Ae.ISubscription,Opc.Ae.SubscriptionState)">
      <summary>
            Initializes object with default values.
            </summary>
    </member>
    <member name="M:Opc.Ae.Subscription.Finalize">
      <summary>
            The finalizer.
            </summary>
    </member>
    <member name="M:Opc.Ae.Subscription.Dispose">
      <summary>
            Releases unmanaged resources held by the object.
            </summary>
    </member>
    <member name="M:Opc.Ae.Subscription.Dispose(System.Boolean)">
      <summary>
            Releases unmanaged resources held by the object.
            </summary>
    </member>
    <member name="T:Opc.Ae.Subscription.Names">
      <summary>
            A set of names for fields used in serialization.
            </summary>
    </member>
    <member name="M:Opc.Ae.Subscription.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Contructs a server by de-serializing its URL from the stream.
            </summary>
    </member>
    <member name="M:Opc.Ae.Subscription.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Serializes a server into a stream.
            </summary>
    </member>
    <member name="M:Opc.Ae.Subscription.Clone">
      <summary>
            Returns an unconnected copy of the subscription with the same items.
            </summary>
    </member>
    <member name="P:Opc.Ae.Subscription.Server">
      <summary>
            The server that the subscription object belongs to.
            </summary>
    </member>
    <member name="P:Opc.Ae.Subscription.Name">
      <summary>
            A descriptive name for the subscription.
            </summary>
    </member>
    <member name="P:Opc.Ae.Subscription.ClientHandle">
      <summary>
            A unique identifier for the subscription assigned by the client.
            </summary>
    </member>
    <member name="P:Opc.Ae.Subscription.Active">
      <summary>
            Whether the subscription is monitoring for events to send to the client.
            </summary>
    </member>
    <member name="P:Opc.Ae.Subscription.BufferTime">
      <summary>
            The maximum rate at which the server send event notifications.
            </summary>
    </member>
    <member name="P:Opc.Ae.Subscription.MaxSize">
      <summary>
            The requested maximum number of events that will be sent in a single callback.
            </summary>
    </member>
    <member name="P:Opc.Ae.Subscription.KeepAlive">
      <summary>
            The maximum period between updates sent to the client.
            </summary>
    </member>
    <member name="P:Opc.Ae.Subscription.EventTypes">
      <summary>
            A mask indicating which event types should be sent to the client.
            </summary>
    </member>
    <member name="P:Opc.Ae.Subscription.HighSeverity">
      <summary>
            The highest severity for the events that should be sent to the client.
            </summary>
    </member>
    <member name="P:Opc.Ae.Subscription.LowSeverity">
      <summary>
            The lowest severity for the events that should be sent to the client.
            </summary>
    </member>
    <member name="P:Opc.Ae.Subscription.Categories">
      <summary>
            The event category ids monitored by this subscription.
            </summary>
    </member>
    <member name="P:Opc.Ae.Subscription.Areas">
      <summary>
            A list of full-qualified ids for process areas of interest - only events or conditions in these areas will be reported.
            </summary>
    </member>
    <member name="P:Opc.Ae.Subscription.Sources">
      <summary>
            A list of full-qualified ids for sources of interest - only events or conditions from these soucres will be reported.
            </summary>
    </member>
    <member name="P:Opc.Ae.Subscription.Attributes">
      <summary>
            The list of attributes returned for each event category.
            </summary>
    </member>
    <member name="M:Opc.Ae.Subscription.GetAttributes">
      <summary>
            Returns a writeable copy of the current attributes.
            </summary>
    </member>
    <member name="T:Opc.Ae.Subscription.CategoryCollection">
      <summary>
            Contains a read-only collection category ids.
            </summary>
    </member>
    <member name="P:Opc.Ae.Subscription.CategoryCollection.Item(System.Int32)">
      <summary>
            An indexer for the collection.
            </summary>
    </member>
    <member name="M:Opc.Ae.Subscription.CategoryCollection.ToArray">
      <summary>
            Returns a copy of the collection as an array.
            </summary>
    </member>
    <member name="M:Opc.Ae.Subscription.CategoryCollection.#ctor">
      <summary>
            Creates an empty collection.
            </summary>
    </member>
    <member name="M:Opc.Ae.Subscription.CategoryCollection.#ctor(System.Int32[])">
      <summary>
            Creates a collection containing the list of category ids.
            </summary>
    </member>
    <member name="T:Opc.Ae.Subscription.StringCollection">
      <summary>
            Contains a read-only collection of strings.
            </summary>
    </member>
    <member name="P:Opc.Ae.Subscription.StringCollection.Item(System.Int32)">
      <summary>
            An indexer for the collection.
            </summary>
    </member>
    <member name="M:Opc.Ae.Subscription.StringCollection.ToArray">
      <summary>
            Returns a copy of the collection as an array.
            </summary>
    </member>
    <member name="M:Opc.Ae.Subscription.StringCollection.#ctor">
      <summary>
            Creates an empty collection.
            </summary>
    </member>
    <member name="M:Opc.Ae.Subscription.StringCollection.#ctor(System.String[])">
      <summary>
            Creates a collection containing the specified strings.
            </summary>
    </member>
    <member name="T:Opc.Ae.Subscription.AttributeDictionary">
      <summary>
            Contains a read-only dictionary of attribute lists indexed by category id..
            </summary>
    </member>
    <member name="P:Opc.Ae.Subscription.AttributeDictionary.Item(System.Int32)">
      <summary>
            Gets or sets the atrtibute collection for the specified category. 
            </summary>
    </member>
    <member name="M:Opc.Ae.Subscription.AttributeDictionary.#ctor">
      <summary>
            Creates an empty collection.
            </summary>
    </member>
    <member name="M:Opc.Ae.Subscription.AttributeDictionary.#ctor(System.Collections.Hashtable)">
      <summary>
            Constructs an dictionary from a set of category ids.
            </summary>
    </member>
    <member name="M:Opc.Ae.Subscription.AttributeDictionary.Update(System.Int32,System.Int32[])">
      <summary>
            Adds or replaces the set of attributes associated with the category.
            </summary>
    </member>
    <member name="M:Opc.Ae.Subscription.AttributeDictionary.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Contructs an object by deserializing it from a stream.
            </summary>
    </member>
    <member name="T:Opc.Ae.Subscription.AttributeCollection">
      <summary>
            Contains a read-only collection attribute ids.
            </summary>
    </member>
    <member name="P:Opc.Ae.Subscription.AttributeCollection.Item(System.Int32)">
      <summary>
            An indexer for the collection.
            </summary>
    </member>
    <member name="M:Opc.Ae.Subscription.AttributeCollection.ToArray">
      <summary>
            Returns a copy of the collection as an array.
            </summary>
    </member>
    <member name="M:Opc.Ae.Subscription.AttributeCollection.#ctor">
      <summary>
            Creates an empty collection.
            </summary>
    </member>
    <member name="M:Opc.Ae.Subscription.AttributeCollection.#ctor(System.Int32[])">
      <summary>
            Creates a collection containing the specified attribute ids.
            </summary>
    </member>
    <member name="M:Opc.Ae.Subscription.AttributeCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Contructs an object by deserializing it from a stream.
            </summary>
    </member>
    <member name="E:Opc.Ae.Subscription.EventChanged">
      <summary>
            An event to receive data change updates.
            </summary>
    </member>
    <member name="M:Opc.Ae.Subscription.GetState">
      <summary>
            Returns the current state of the subscription.
            </summary>
      <returns>The current state of the subscription.</returns>
    </member>
    <member name="M:Opc.Ae.Subscription.ModifyState(System.Int32,Opc.Ae.SubscriptionState)">
      <summary>
            Changes the state of a subscription.
            </summary>
      <param name="masks">A bit mask that indicates which elements of the subscription state are changing.</param>
      <param name="state">The new subscription state.</param>
      <returns>The actual subscription state after applying the changes.</returns>
    </member>
    <member name="M:Opc.Ae.Subscription.GetFilters">
      <summary>
            Returns the current filters for the subscription.
            </summary>
      <returns>The current filters for the subscription.</returns>
    </member>
    <member name="M:Opc.Ae.Subscription.SetFilters(Opc.Ae.SubscriptionFilters)">
      <summary>
            Sets the current filters for the subscription.
            </summary>
      <param name="filters">The new filters to use for the subscription.</param>
    </member>
    <member name="M:Opc.Ae.Subscription.GetReturnedAttributes(System.Int32)">
      <summary>
            Returns the set of attributes to return with event notifications.
            </summary>
      <returns>The set of attributes to returned with event notifications.</returns>
    </member>
    <member name="M:Opc.Ae.Subscription.SelectReturnedAttributes(System.Int32,System.Int32[])">
      <summary>
            Selects the set of attributes to return with event notifications.
            </summary>
      <param name="eventCategory">The specific event category for which the attributes apply.</param>
      <param name="attributeIDs">The list of attribute ids to return.</param>
    </member>
    <member name="M:Opc.Ae.Subscription.Refresh">
      <summary>
            Force a refresh for all active conditions and inactive, unacknowledged conditions whose event notifications match the filter of the event subscription.
            </summary>
    </member>
    <member name="M:Opc.Ae.Subscription.CancelRefresh">
      <summary>
            Cancels an outstanding refresh request.
            </summary>
    </member>
    <member name="P:Opc.Ae.Subscription.State">
      <summary>
            The current state.
            </summary>
    </member>
    <member name="P:Opc.Ae.Subscription.Filters">
      <summary>
            The current filters.
            </summary>
    </member>
    <member name="T:Opc.Da.BrowsePosition">
      <summary>
            Stores the state of a browse operation.
            </summary>
    </member>
    <member name="P:Opc.Da.BrowsePosition.ItemID">
      <summary>
            The item identifier of the branch being browsed.
            </summary>
    </member>
    <member name="P:Opc.Da.BrowsePosition.Filters">
      <summary>
            The filters applied during the browse operation.
            </summary>
    </member>
    <member name="P:Opc.Da.BrowsePosition.MaxElementsReturned">
      <summary>
            The maximum number of elements that may be returned in a single browse.
            </summary>
    </member>
    <member name="M:Opc.Da.BrowsePosition.#ctor(Opc.ItemIdentifier,Opc.Da.BrowseFilters)">
      <summary>
            Saves the parameters for an incomplete browse information.
            </summary>
    </member>
    <member name="M:Opc.Da.BrowsePosition.Finalize">
      <summary>
            The finalizer.
            </summary>
    </member>
    <member name="M:Opc.Da.BrowsePosition.Dispose">
      <summary>
            Releases unmanaged resources held by the object.
            </summary>
    </member>
    <member name="M:Opc.Da.BrowsePosition.Dispose(System.Boolean)">
      <summary>
            Releases unmanaged resources held by the object.
            </summary>
    </member>
    <member name="M:Opc.Da.BrowsePosition.Clone">
      <summary>
            Creates a deep copy of the object.
            </summary>
    </member>
    <member name="T:Opc.Da.ItemProperty">
      <summary>
            Contains a description of a single item property.
            </summary>
    </member>
    <member name="P:Opc.Da.ItemProperty.ID">
      <summary>
            The property identifier.
            </summary>
    </member>
    <member name="P:Opc.Da.ItemProperty.Description">
      <summary>
            A short description of the property.
            </summary>
    </member>
    <member name="P:Opc.Da.ItemProperty.DataType">
      <summary>
            The data type of the property.
            </summary>
    </member>
    <member name="P:Opc.Da.ItemProperty.Value">
      <summary>
            The value of the property.
            </summary>
    </member>
    <member name="P:Opc.Da.ItemProperty.ItemName">
      <summary>
            The primary identifier for the property if it is directly accessible as an item.
            </summary>
    </member>
    <member name="P:Opc.Da.ItemProperty.ItemPath">
      <summary>
            The secondary identifier for the property if it is directly accessible as an item.
            </summary>
    </member>
    <member name="P:Opc.Da.ItemProperty.ResultID">
      <summary>
            The error id for the result of an operation on an property.
            </summary>
    </member>
    <member name="P:Opc.Da.ItemProperty.DiagnosticInfo">
      <summary>
            Vendor specific diagnostic information (not the localized error text).
            </summary>
    </member>
    <member name="M:Opc.Da.ItemProperty.Clone">
      <summary>
            Creates a deep copy of the object.
            </summary>
    </member>
    <member name="T:Opc.Da.BrowseElement">
      <summary>
            Contains a description of an element in the server address space.
            </summary>
    </member>
    <member name="P:Opc.Da.BrowseElement.Name">
      <summary>
            A descriptive name for element that is unique within a branch.
            </summary>
    </member>
    <member name="P:Opc.Da.BrowseElement.ItemName">
      <summary>
            The primary identifier for the element within the server namespace.
            </summary>
    </member>
    <member name="P:Opc.Da.BrowseElement.ItemPath">
      <summary>
            An secondary identifier for the element within the server namespace.
            </summary>
    </member>
    <member name="P:Opc.Da.BrowseElement.IsItem">
      <summary>
            Whether the element refers to an item with data that can be accessed.
            </summary>
    </member>
    <member name="P:Opc.Da.BrowseElement.HasChildren">
      <summary>
            Whether the element has children.
            </summary>
    </member>
    <member name="P:Opc.Da.BrowseElement.Properties">
      <summary>
            The set of properties for the element.
            </summary>
    </member>
    <member name="M:Opc.Da.BrowseElement.Clone">
      <summary>
            Creates a deep copy of the object.
            </summary>
    </member>
    <member name="T:Opc.Da.browseFilter">
      <summary>
            The type of browse elements to return during a browse.
            </summary>
    </member>
    <member name="F:Opc.Da.browseFilter.all">
      <summary>
            Return all types of browse elements.
            </summary>
    </member>
    <member name="F:Opc.Da.browseFilter.branch">
      <summary>
            Return only elements that contain other elements.
            </summary>
    </member>
    <member name="F:Opc.Da.browseFilter.item">
      <summary>
            Return only elements that represent items.
            </summary>
    </member>
    <member name="T:Opc.Da.BrowseFilters">
      <summary>
            Defines a set of filters to apply when browsing.
            </summary>
    </member>
    <member name="P:Opc.Da.BrowseFilters.MaxElementsReturned">
      <summary>
            The maximum number of elements to return. Zero means no limit.
            </summary>
    </member>
    <member name="P:Opc.Da.BrowseFilters.BrowseFilter">
      <summary>
            The type of element to return.
            </summary>
    </member>
    <member name="P:Opc.Da.BrowseFilters.ElementNameFilter">
      <summary>
            An expression used to match the name of the element.
            </summary>
    </member>
    <member name="P:Opc.Da.BrowseFilters.VendorFilter">
      <summary>
            A filter which has semantics that defined by the server.
            </summary>
    </member>
    <member name="P:Opc.Da.BrowseFilters.ReturnAllProperties">
      <summary>
            Whether all supported properties to return with each element.
            </summary>
    </member>
    <member name="P:Opc.Da.BrowseFilters.PropertyIDs">
      <summary>
            A list of names of the properties to return with each element.
            </summary>
    </member>
    <member name="P:Opc.Da.BrowseFilters.ReturnPropertyValues">
      <summary>
            Whether property values should be returned with the properties.
            </summary>
    </member>
    <member name="M:Opc.Da.BrowseFilters.Clone">
      <summary>
            Creates a deep copy of the object.
            </summary>
    </member>
    <member name="T:Opc.Da.ItemPropertyCollection">
      <summary>
            A list of properties for a single item.
            </summary>
    </member>
    <member name="P:Opc.Da.ItemPropertyCollection.ItemName">
      <summary>
            The primary identifier for the item within the server namespace.
            </summary>
    </member>
    <member name="P:Opc.Da.ItemPropertyCollection.ItemPath">
      <summary>
            An secondary identifier for the item within the server namespace.
            </summary>
    </member>
    <member name="P:Opc.Da.ItemPropertyCollection.Item(System.Int32)">
      <summary>
            Accesses the items at the specified index.
            </summary>
    </member>
    <member name="M:Opc.Da.ItemPropertyCollection.#ctor">
      <summary>
            Initializes the object with its default values.
            </summary>
    </member>
    <member name="M:Opc.Da.ItemPropertyCollection.#ctor(Opc.ItemIdentifier)">
      <summary>
            Initializes the object with the specified item identifier.
            </summary>
    </member>
    <member name="M:Opc.Da.ItemPropertyCollection.#ctor(Opc.ItemIdentifier,Opc.ResultID)">
      <summary>
            Initializes the object with the specified item identifier and result id.
            </summary>
    </member>
    <member name="P:Opc.Da.ItemPropertyCollection.ResultID">
      <summary>
            The error id for the result of an operation on an item.
            </summary>
    </member>
    <member name="P:Opc.Da.ItemPropertyCollection.DiagnosticInfo">
      <summary>
            Vendor specific diagnostic information (not the localized error text).
            </summary>
    </member>
    <member name="M:Opc.Da.ItemPropertyCollection.CopyTo(Opc.Da.ItemProperty[],System.Int32)">
      <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
      <param name="array">The one-dimensional Array that is the destination for the objects.</param>
      <param name="index">The zero-based index in the Array at which copying begins.</param>
    </member>
    <member name="M:Opc.Da.ItemPropertyCollection.Insert(System.Int32,Opc.Da.ItemProperty)">
      <summary>
            Inserts an item to the IList at the specified position.
            </summary>
      <param name="index">The zero-based index at which value should be inserted.</param>
      <param name="value">The Object to insert into the IList. </param>
    </member>
    <member name="M:Opc.Da.ItemPropertyCollection.Remove(Opc.Da.ItemProperty)">
      <summary>
            Removes the first occurrence of a specific object from the IList.
            </summary>
      <param name="value">The Object to remove from the IList.</param>
    </member>
    <member name="M:Opc.Da.ItemPropertyCollection.Contains(Opc.Da.ItemProperty)">
      <summary>
            Determines whether the IList contains a specific value.
            </summary>
      <param name="value">The Object to locate in the IList.</param>
      <returns>true if the Object is found in the IList; otherwise, false.</returns>
    </member>
    <member name="M:Opc.Da.ItemPropertyCollection.IndexOf(Opc.Da.ItemProperty)">
      <summary>
            Determines the index of a specific item in the IList.
            </summary>
      <param name="value">The Object to locate in the IList.</param>
      <returns>The index of value if found in the list; otherwise, -1.</returns>
    </member>
    <member name="M:Opc.Da.ItemPropertyCollection.Add(Opc.Da.ItemProperty)">
      <summary>
            Adds an item to the IList.
            </summary>
      <param name="value">The Object to add to the IList. </param>
      <returns>The position into which the new element was inserted.</returns>
    </member>
    <member name="T:Opc.Da.IServer">
      <summary>
            Defines functionality that is common to all OPC Data Access servers.
            </summary>
    </member>
    <member name="M:Opc.Da.IServer.GetResultFilters">
      <summary>
            Returns the filters applied by the server to any item results returned to the client.
            </summary>
      <returns>A bit mask indicating which fields should be returned in any item results.</returns>
    </member>
    <member name="M:Opc.Da.IServer.SetResultFilters(System.Int32)">
      <summary>
            Sets the filters applied by the server to any item results returned to the client.
            </summary>
      <param name="filters">A bit mask indicating which fields should be returned in any item results.</param>
    </member>
    <member name="M:Opc.Da.IServer.GetStatus">
      <summary>
            Returns the current server status.
            </summary>
      <returns>The current server status.</returns>
    </member>
    <member name="M:Opc.Da.IServer.Read(Opc.Da.Item[])">
      <summary>
            Reads the current values for a set of items. 
            </summary>
      <param name="items">The set of items to read.</param>
      <returns>The results of the read operation for each item.</returns>
    </member>
    <member name="M:Opc.Da.IServer.Write(Opc.Da.ItemValue[])">
      <summary>
            Writes the value, quality and timestamp for a set of items.
            </summary>
      <param name="values">The set of item values to write.</param>
      <returns>The results of the write operation for each item.</returns>
    </member>
    <member name="M:Opc.Da.IServer.CreateSubscription(Opc.Da.SubscriptionState)">
      <summary>
            Creates a new subscription.
            </summary>
      <param name="state">The initial state of the subscription.</param>
      <returns>The new subscription object.</returns>
    </member>
    <member name="M:Opc.Da.IServer.CancelSubscription(Opc.Da.ISubscription)">
      <summary>
            Cancels a subscription and releases all resources allocated for it.
            </summary>
      <param name="subscription">The subscription to cancel.</param>
    </member>
    <member name="M:Opc.Da.IServer.Browse(Opc.ItemIdentifier,Opc.Da.BrowseFilters,Opc.Da.BrowsePosition@)">
      <summary>
            Fetches the children of a branch that meet the filter criteria.
            </summary>
      <param name="itemID">The identifier of branch which is the target of the search.</param>
      <param name="filters">The filters to use to limit the set of child elements returned.</param>
      <param name="position">An object used to continue a browse that could not be completed.</param>
      <returns>The set of elements found.</returns>
    </member>
    <member name="M:Opc.Da.IServer.BrowseNext(Opc.Da.BrowsePosition@)">
      <summary>
            Continues a browse operation with previously specified search criteria.
            </summary>
      <param name="position">An object containing the browse operation state information.</param>
      <returns>The set of elements found.</returns>
    </member>
    <member name="M:Opc.Da.IServer.GetProperties(Opc.ItemIdentifier[],Opc.Da.PropertyID[],System.Boolean)">
      <summary>
            Returns the item properties for a set of items.
            </summary>
      <param name="itemIDs">A list of item identifiers.</param>
      <param name="propertyIDs">A list of properties to fetch for each item.</param>
      <param name="returnValues">Whether the property values should be returned with the properties.</param>
      <returns>A list of properties for each item.</returns>
    </member>
    <member name="M:Opc.Da.IServer.BrowseAccessPath(Opc.ItemIdentifier)">
      <summary>
            Provides a way to browse the available AccessPath for an item.
            </summary>
      <param name="itemID">The identifier for which the access paths will be browsed.</param>
      <returns>An array of possible access paths to the item.</returns>
    </member>
    <member name="T:Opc.Da.ResultFilter">
      <summary>
            Filters applied by the server before returning item results.
            </summary>
    </member>
    <member name="F:Opc.Da.ResultFilter.ItemName">
      <summary>
            Include the ItemName in the ItemIdentifier if bit is set.
            </summary>
    </member>
    <member name="F:Opc.Da.ResultFilter.ItemPath">
      <summary>
            Include the ItemPath in the ItemIdentifier if bit is set.
            </summary>
    </member>
    <member name="F:Opc.Da.ResultFilter.ClientHandle">
      <summary>
            Include the ClientHandle in the ItemIdentifier if bit is set.
            </summary>
    </member>
    <member name="F:Opc.Da.ResultFilter.ItemTime">
      <summary>
            Include the Timestamp in the ItemValue if bit is set.
            </summary>
    </member>
    <member name="F:Opc.Da.ResultFilter.ErrorText">
      <summary>
            Include verbose, localized error text with result if bit is set. 
            </summary>
    </member>
    <member name="F:Opc.Da.ResultFilter.DiagnosticInfo">
      <summary>
            Include additional diagnostic information with result if bit is set.
            </summary>
    </member>
    <member name="F:Opc.Da.ResultFilter.Minimal">
      <summary>
            Include the ItemName and Timestamp if bit is set.
            </summary>
    </member>
    <member name="F:Opc.Da.ResultFilter.All">
      <summary>
            Include all information in the results if bit is set.
            </summary>
    </member>
    <member name="T:Opc.Da.serverState">
      <summary>
            The set of possible server states.
            </summary>
    </member>
    <member name="F:Opc.Da.serverState.unknown">
      <summary>
            The server state is not known.
            </summary>
    </member>
    <member name="F:Opc.Da.serverState.running">
      <summary>
            The server is running normally.
            </summary>
    </member>
    <member name="F:Opc.Da.serverState.failed">
      <summary>
            The server is not functioning due to a fatal error.
            </summary>
    </member>
    <member name="F:Opc.Da.serverState.noConfig">
      <summary>
            The server cannot load its configuration information.
            </summary>
    </member>
    <member name="F:Opc.Da.serverState.suspended">
      <summary>
            The server has halted all communication with the underlying hardware.
            </summary>
    </member>
    <member name="F:Opc.Da.serverState.test">
      <summary>
            The server is disconnected from the underlying hardware.
            </summary>
    </member>
    <member name="F:Opc.Da.serverState.commFault">
      <summary>
            The server cannot communicate with the underlying hardware.
            </summary>
    </member>
    <member name="T:Opc.Da.ServerStatus">
      <summary>
            Contains properties that describe the current status of an OPC server.
            </summary>
    </member>
    <member name="P:Opc.Da.ServerStatus.VendorInfo">
      <summary>
            The vendor name and product name for the server.
            </summary>
    </member>
    <member name="P:Opc.Da.ServerStatus.ProductVersion">
      <summary>
            A string that contains the server software version number.
            </summary>
    </member>
    <member name="P:Opc.Da.ServerStatus.ServerState">
      <summary>
            The current state of the server.
            </summary>
    </member>
    <member name="P:Opc.Da.ServerStatus.StatusInfo">
      <summary>
            A string that describes the current server state.
            </summary>
    </member>
    <member name="P:Opc.Da.ServerStatus.StartTime">
      <summary>
            The UTC time when the server started.
            </summary>
    </member>
    <member name="P:Opc.Da.ServerStatus.CurrentTime">
      <summary>
            Th current UTC time at the server.
            </summary>
    </member>
    <member name="P:Opc.Da.ServerStatus.LastUpdateTime">
      <summary>
            The last time the server sent an data update to the client.
            </summary>
    </member>
    <member name="M:Opc.Da.ServerStatus.Clone">
      <summary>
            Creates a deepcopy of the object.
            </summary>
    </member>
    <member name="T:Opc.Da.ISubscription">
      <summary>
            A subscription for a set of items on a single OPC server.
            </summary>
    </member>
    <member name="E:Opc.Da.ISubscription.DataChanged">
      <summary>
            An event to receive data change updates.
            </summary>
    </member>
    <member name="M:Opc.Da.ISubscription.GetResultFilters">
      <summary>
            Returns the filters applied by the server to any item results returned to the client.
            </summary>
      <returns>A bit mask indicating which fields should be returned in any item results.</returns>
    </member>
    <member name="M:Opc.Da.ISubscription.SetResultFilters(System.Int32)">
      <summary>
            Sets the filters applied by the server to any item results returned to the client.
            </summary>
      <param name="filters">A bit mask indicating which fields should be returned in any item results.</param>
    </member>
    <member name="M:Opc.Da.ISubscription.GetState">
      <summary>
            Returns the current state of the subscription.
            </summary>
      <returns>The current state of the subscription.</returns>
    </member>
    <member name="M:Opc.Da.ISubscription.ModifyState(System.Int32,Opc.Da.SubscriptionState)">
      <summary>
            Changes the state of a subscription.
            </summary>
      <param name="masks">A bit mask that indicates which elements of the subscription state are changing.</param>
      <param name="state">The new subscription state.</param>
      <returns>The actual subscption state after applying the changes.</returns>
    </member>
    <member name="M:Opc.Da.ISubscription.AddItems(Opc.Da.Item[])">
      <summary>
            Adds items to the subscription.
            </summary>
      <param name="items">The set of items to add to the subscription.</param>
      <returns>The results of the add item operation for each item.</returns>
    </member>
    <member name="M:Opc.Da.ISubscription.ModifyItems(System.Int32,Opc.Da.Item[])">
      <summary>
            Modifies the state of items in the subscription
            </summary>
      <param name="masks">Specifies which item state parameters are being modified.</param>
      <param name="items">The new state for each item.</param>
      <returns>The results of the modify item operation for each item.</returns>
    </member>
    <member name="M:Opc.Da.ISubscription.RemoveItems(Opc.ItemIdentifier[])">
      <summary>
            Removes items from the subscription.
            </summary>
      <param name="items">The identifiers (i.e. server handles) for the items being removed.</param>
      <returns>The results of the remove item operation for each item.</returns>
    </member>
    <member name="M:Opc.Da.ISubscription.Read(Opc.Da.Item[])">
      <summary>
            Reads the values for a set of items in the subscription.
            </summary>
      <param name="items">The identifiers (i.e. server handles) for the items being read.</param>
      <returns>The value for each of items.</returns>
    </member>
    <member name="M:Opc.Da.ISubscription.Write(Opc.Da.ItemValue[])">
      <summary>
            Writes the value, quality and timestamp for a set of items in the subscription.
            </summary>
      <param name="items">The item values to write.</param>
      <returns>The results of the write operation for each item.</returns>
    </member>
    <member name="M:Opc.Da.ISubscription.Read(Opc.Da.Item[],System.Object,Opc.Da.ReadCompleteEventHandler,Opc.IRequest@)">
      <summary>
            Begins an asynchronous read operation for a set of items.
            </summary>
      <param name="items">The set of items to read (must include the server handle).</param>
      <param name="requestHandle">An identifier for the request assigned by the caller.</param>
      <param name="callback">A delegate used to receive notifications when the request completes.</param>
      <param name="request">An object that contains the state of the request (used to cancel the request).</param>
      <returns>A set of results containing any errors encountered when the server validated the items.</returns>
    </member>
    <member name="M:Opc.Da.ISubscription.Write(Opc.Da.ItemValue[],System.Object,Opc.Da.WriteCompleteEventHandler,Opc.IRequest@)">
      <summary>
            Begins an asynchronous write operation for a set of items.
            </summary>
      <param name="items">The set of item values to write (must include the server handle).</param>
      <param name="requestHandle">An identifier for the request assigned by the caller.</param>
      <param name="callback">A delegate used to receive notifications when the request completes.</param>
      <param name="request">An object that contains the state of the request (used to cancel the request).</param>
      <returns>A set of results containing any errors encountered when the server validated the items.</returns>
    </member>
    <member name="M:Opc.Da.ISubscription.Cancel(Opc.IRequest,Opc.Da.CancelCompleteEventHandler)">
      <summary>
            Cancels an asynchronous read or write operation.
            </summary>
      <param name="request">The object returned from the BeginRead or BeginWrite request.</param>
      <param name="callback">The function to invoke when the cancel completes.</param>
    </member>
    <member name="M:Opc.Da.ISubscription.Refresh">
      <summary>
            Causes the server to send a data changed notification for all active items. 
            </summary>
    </member>
    <member name="M:Opc.Da.ISubscription.Refresh(System.Object,Opc.IRequest@)">
      <summary>
            Causes the server to send a data changed notification for all active items. 
            </summary>
      <param name="requestHandle">An identifier for the request assigned by the caller.</param>
      <param name="request">An object that contains the state of the request (used to cancel the request).</param>
      <returns>A set of results containing any errors encountered when the server validated the items.</returns>
    </member>
    <member name="M:Opc.Da.ISubscription.SetEnabled(System.Boolean)">
      <summary>
            Enables or disables data change notifications from the server.
            </summary>
      <param name="enabled">Whether data change notifications are enabled.</param>
    </member>
    <member name="M:Opc.Da.ISubscription.GetEnabled">
      <summary>
            Checks whether data change notifications from the server are enabled.
            </summary>
      <returns>Whether data change notifications are enabled.</returns>
    </member>
    <member name="T:Opc.Da.DataChangedEventHandler">
      <summary>
            A delegate to receive data change updates from the server.
            </summary>
    </member>
    <member name="T:Opc.Da.ReadCompleteEventHandler">
      <summary>
            A delegate to receive asynchronous read completed notifications.
            </summary>
    </member>
    <member name="T:Opc.Da.WriteCompleteEventHandler">
      <summary>
            A delegate to receive asynchronous write completed notifications.
            </summary>
    </member>
    <member name="T:Opc.Da.CancelCompleteEventHandler">
      <summary>
            A delegate to receive asynchronous cancel completed notifications.
            </summary>
    </member>
    <member name="T:Opc.Da.Request">
      <summary>
            Describes the state of a subscription.
            </summary>
    </member>
    <member name="P:Opc.Da.Request.Subscription">
      <summary>
            The subscription processing the request.
            </summary>
    </member>
    <member name="P:Opc.Da.Request.Handle">
      <summary>
            An unique identifier, assigned by the client, for the request.
            </summary>
    </member>
    <member name="M:Opc.Da.Request.Cancel(Opc.Da.CancelCompleteEventHandler)">
      <summary>
            Cancels the request, if possible.
            </summary>
    </member>
    <member name="M:Opc.Da.Request.#ctor(Opc.Da.ISubscription,System.Object)">
      <summary>
            Initializes the object with a subscription and a unique id.
            </summary>
    </member>
    <member name="T:Opc.Da.StateMask">
      <summary>
            Defines masks to be used when modifying the subscription or item state.
            </summary>
    </member>
    <member name="F:Opc.Da.StateMask.Name">
      <summary>
            The name of the subscription.
            </summary>
    </member>
    <member name="F:Opc.Da.StateMask.ClientHandle">
      <summary>
            The client assigned handle for the item or subscription.
            </summary>
    </member>
    <member name="F:Opc.Da.StateMask.Locale">
      <summary>
            The locale to use for results returned to the client from the subscription.
            </summary>
    </member>
    <member name="F:Opc.Da.StateMask.Active">
      <summary>
            Whether the item or subscription is active.
            </summary>
    </member>
    <member name="F:Opc.Da.StateMask.UpdateRate">
      <summary>
            The maximum rate at which data update notifications are sent.
            </summary>
    </member>
    <member name="F:Opc.Da.StateMask.KeepAlive">
      <summary>
            The longest period between data update notifications.
            </summary>
    </member>
    <member name="F:Opc.Da.StateMask.ReqType">
      <summary>
            The requested data type for the item.
            </summary>
    </member>
    <member name="F:Opc.Da.StateMask.Deadband">
      <summary>
            The deadband for the item or subscription.
            </summary>
    </member>
    <member name="F:Opc.Da.StateMask.SamplingRate">
      <summary>
            The rate at which the server should check for changes to an item value.
            </summary>
    </member>
    <member name="F:Opc.Da.StateMask.EnableBuffering">
      <summary>
            Whether the server should buffer multiple changes to a single item.
            </summary>
    </member>
    <member name="F:Opc.Da.StateMask.All">
      <summary>
            All fields are valid.
            </summary>
    </member>
    <member name="T:Opc.Da.SubscriptionState">
      <summary>
            Describes the state of a subscription.
            </summary>
    </member>
    <member name="P:Opc.Da.SubscriptionState.Name">
      <summary>
            A unique name for the subscription controlled by the client.
            </summary>
    </member>
    <member name="P:Opc.Da.SubscriptionState.ClientHandle">
      <summary>
            A unique identifier for the subscription assigned by the client.
            </summary>
    </member>
    <member name="P:Opc.Da.SubscriptionState.ServerHandle">
      <summary>
            A unique subscription identifier assigned by the server.
            </summary>
    </member>
    <member name="P:Opc.Da.SubscriptionState.Locale">
      <summary>
            The locale used for any error messages or results returned to the client.
            </summary>
    </member>
    <member name="P:Opc.Da.SubscriptionState.Active">
      <summary>
            Whether the subscription is scanning for updates to send to the client.
            </summary>
    </member>
    <member name="P:Opc.Da.SubscriptionState.UpdateRate">
      <summary>
            The rate at which the server checks of updates to send to the client.
            </summary>
    </member>
    <member name="P:Opc.Da.SubscriptionState.KeepAlive">
      <summary>
            The maximum period between updates sent to the client.
            </summary>
    </member>
    <member name="P:Opc.Da.SubscriptionState.Deadband">
      <summary>
            The minimum percentage change required to trigger a data update for an item.
            </summary>
    </member>
    <member name="M:Opc.Da.SubscriptionState.#ctor">
      <summary>
            Initializes object with default values.
            </summary>
    </member>
    <member name="M:Opc.Da.SubscriptionState.Clone">
      <summary>
            Creates a shallow copy of the object.
            </summary>
    </member>
    <member name="T:Opc.Da.Item">
      <summary>
            Describes how an item in the server address space should be accessed. 
            </summary>
    </member>
    <member name="P:Opc.Da.Item.ReqType">
      <summary>
            The data type to use when returning the item value.
            </summary>
    </member>
    <member name="P:Opc.Da.Item.MaxAge">
      <summary>
            The oldest (in milliseconds) acceptable cached value when reading an item.
            </summary>
    </member>
    <member name="P:Opc.Da.Item.MaxAgeSpecified">
      <summary>
            Whether the Max Age is specified.
            </summary>
    </member>
    <member name="P:Opc.Da.Item.Active">
      <summary>
            Whether the server should send data change updates. 
            </summary>
    </member>
    <member name="P:Opc.Da.Item.ActiveSpecified">
      <summary>
            Whether the Active state is specified.
            </summary>
    </member>
    <member name="P:Opc.Da.Item.Deadband">
      <summary>
            The minimum percentage change required to trigger a data update for an item. 
            </summary>
    </member>
    <member name="P:Opc.Da.Item.DeadbandSpecified">
      <summary>
            Whether the Deadband is specified.
            </summary>
    </member>
    <member name="P:Opc.Da.Item.SamplingRate">
      <summary>
            How frequently the server should sample the item value.
            </summary>
    </member>
    <member name="P:Opc.Da.Item.SamplingRateSpecified">
      <summary>
            Whether the Sampling Rate is specified.
            </summary>
    </member>
    <member name="P:Opc.Da.Item.EnableBuffering">
      <summary>
            Whether the server should buffer multiple data changes between data updates.
            </summary>
    </member>
    <member name="P:Opc.Da.Item.EnableBufferingSpecified">
      <summary>
            Whether the Enable Buffering is specified.
            </summary>
    </member>
    <member name="M:Opc.Da.Item.#ctor">
      <summary>
            Initializes the object with default values.
            </summary>
    </member>
    <member name="M:Opc.Da.Item.#ctor(Opc.ItemIdentifier)">
      <summary>
            Initializes object with the specified ItemIdentifier object.
            </summary>
    </member>
    <member name="M:Opc.Da.Item.#ctor(Opc.Da.Item)">
      <summary>
            Initializes object with the specified Item object.
            </summary>
    </member>
    <member name="T:Opc.Da.ItemCollection">
      <summary>
            A collection of items.
            </summary>
    </member>
    <member name="P:Opc.Da.ItemCollection.Item(System.Int32)">
      <summary>
             Gets the item at the specified index.
            </summary>
    </member>
    <member name="P:Opc.Da.ItemCollection.Item(Opc.ItemIdentifier)">
      <summary>
            Gets the first item with the specified item id.
            </summary>
    </member>
    <member name="M:Opc.Da.ItemCollection.#ctor">
      <summary>
            Initializes object with the default values.
            </summary>
    </member>
    <member name="M:Opc.Da.ItemCollection.#ctor(Opc.Da.ItemCollection)">
      <summary>
            Initializes object with the specified ResultCollection object.
            </summary>
    </member>
    <member name="M:Opc.Da.ItemCollection.Clone">
      <summary>
            Creates a deep copy of the object.
            </summary>
    </member>
    <member name="P:Opc.Da.ItemCollection.IsSynchronized">
      <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
    </member>
    <member name="P:Opc.Da.ItemCollection.Count">
      <summary>
            Gets the number of objects in the collection.
            </summary>
    </member>
    <member name="M:Opc.Da.ItemCollection.CopyTo(System.Array,System.Int32)">
      <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
      <param name="array">The one-dimensional Array that is the destination for the objects.</param>
      <param name="index">The zero-based index in the Array at which copying begins.</param>
    </member>
    <member name="M:Opc.Da.ItemCollection.CopyTo(Opc.Da.Item[],System.Int32)">
      <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
      <param name="array">The one-dimensional Array that is the destination for the objects.</param>
      <param name="index">The zero-based index in the Array at which copying begins.</param>
    </member>
    <member name="P:Opc.Da.ItemCollection.SyncRoot">
      <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
    </member>
    <member name="M:Opc.Da.ItemCollection.GetEnumerator">
      <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
      <returns>An IEnumerator that can be used to iterate through the collection.</returns>
    </member>
    <member name="P:Opc.Da.ItemCollection.IsReadOnly">
      <summary>
            Gets a value indicating whether the IList is read-only.
            </summary>
    </member>
    <member name="P:Opc.Da.ItemCollection.System#Collections#IList#Item(System.Int32)">
      <summary>
            Gets or sets the element at the specified index.
            </summary>
    </member>
    <member name="M:Opc.Da.ItemCollection.RemoveAt(System.Int32)">
      <summary>
            Removes the IList item at the specified index.
            </summary>
      <param name="index">The zero-based index of the item to remove.</param>
    </member>
    <member name="M:Opc.Da.ItemCollection.Insert(System.Int32,System.Object)">
      <summary>
            Inserts an item to the IList at the specified position.
            </summary>
      <param name="index">The zero-based index at which value should be inserted.</param>
      <param name="value">The Object to insert into the IList. </param>
    </member>
    <member name="M:Opc.Da.ItemCollection.Remove(System.Object)">
      <summary>
            Removes the first occurrence of a specific object from the IList.
            </summary>
      <param name="value">The Object to remove from the IList.</param>
    </member>
    <member name="M:Opc.Da.ItemCollection.Contains(System.Object)">
      <summary>
            Determines whether the IList contains a specific value.
            </summary>
      <param name="value">The Object to locate in the IList.</param>
      <returns>true if the Object is found in the IList; otherwise, false.</returns>
    </member>
    <member name="M:Opc.Da.ItemCollection.Clear">
      <summary>
            Removes all items from the IList.
            </summary>
    </member>
    <member name="M:Opc.Da.ItemCollection.IndexOf(System.Object)">
      <summary>
            Determines the index of a specific item in the IList.
            </summary>
      <param name="value">The Object to locate in the IList.</param>
      <returns>The index of value if found in the list; otherwise, -1.</returns>
    </member>
    <member name="M:Opc.Da.ItemCollection.Add(System.Object)">
      <summary>
            Adds an item to the IList.
            </summary>
      <param name="value">The Object to add to the IList. </param>
      <returns>The position into which the new element was inserted.</returns>
    </member>
    <member name="P:Opc.Da.ItemCollection.IsFixedSize">
      <summary>
            Indicates whether the IList has a fixed size.
            </summary>
    </member>
    <member name="M:Opc.Da.ItemCollection.Insert(System.Int32,Opc.Da.Item)">
      <summary>
            Inserts an item to the IList at the specified position.
            </summary>
      <param name="index">The zero-based index at which value should be inserted.</param>
      <param name="value">The Object to insert into the IList. </param>
    </member>
    <member name="M:Opc.Da.ItemCollection.Remove(Opc.Da.Item)">
      <summary>
            Removes the first occurrence of a specific object from the IList.
            </summary>
      <param name="value">The Object to remove from the IList.</param>
    </member>
    <member name="M:Opc.Da.ItemCollection.Contains(Opc.Da.Item)">
      <summary>
            Determines whether the IList contains a specific value.
            </summary>
      <param name="value">The Object to locate in the IList.</param>
      <returns>true if the Object is found in the IList; otherwise, false.</returns>
    </member>
    <member name="M:Opc.Da.ItemCollection.IndexOf(Opc.Da.Item)">
      <summary>
            Determines the index of a specific item in the IList.
            </summary>
      <param name="value">The Object to locate in the IList.</param>
      <returns>The index of value if found in the list; otherwise, -1.</returns>
    </member>
    <member name="M:Opc.Da.ItemCollection.Add(Opc.Da.Item)">
      <summary>
            Adds an item to the IList.
            </summary>
      <param name="value">The Object to add to the IList. </param>
      <returns>The position into which the new element was inserted.</returns>
    </member>
    <member name="T:Opc.Da.ItemResult">
      <summary>
            The results of an operation on a uniquely identifiable item.
            </summary>
    </member>
    <member name="M:Opc.Da.ItemResult.#ctor">
      <summary>
            Initializes the object with default values.
            </summary>
    </member>
    <member name="M:Opc.Da.ItemResult.#ctor(Opc.ItemIdentifier)">
      <summary>
            Initializes the object with an ItemIdentifier object.
            </summary>
    </member>
    <member name="M:Opc.Da.ItemResult.#ctor(Opc.ItemIdentifier,Opc.ResultID)">
      <summary>
            Initializes the object with an ItemIdentifier object and ResultID.
            </summary>
    </member>
    <member name="M:Opc.Da.ItemResult.#ctor(Opc.Da.Item)">
      <summary>
            Initializes the object with an Item object.
            </summary>
    </member>
    <member name="M:Opc.Da.ItemResult.#ctor(Opc.Da.Item,Opc.ResultID)">
      <summary>
            Initializes the object with an Item object and ResultID.
            </summary>
    </member>
    <member name="M:Opc.Da.ItemResult.#ctor(Opc.Da.ItemResult)">
      <summary>
            Initializes object with the specified ItemResult object.
            </summary>
    </member>
    <member name="P:Opc.Da.ItemResult.ResultID">
      <summary>
            The error id for the result of an operation on an property.
            </summary>
    </member>
    <member name="P:Opc.Da.ItemResult.DiagnosticInfo">
      <summary>
            Vendor specific diagnostic information (not the localized error text).
            </summary>
    </member>
    <member name="T:Opc.Da.ItemValue">
      <summary>
            Contains the value for a single item.
            </summary>
    </member>
    <member name="P:Opc.Da.ItemValue.Value">
      <summary>
            The item value.
            </summary>
    </member>
    <member name="P:Opc.Da.ItemValue.Quality">
      <summary>
            The quality of the item value.
            </summary>
    </member>
    <member name="P:Opc.Da.ItemValue.QualitySpecified">
      <summary>
            Whether the quality is specified.
            </summary>
    </member>
    <member name="P:Opc.Da.ItemValue.Timestamp">
      <summary>
            The UTC timestamp for the item value.
            </summary>
    </member>
    <member name="P:Opc.Da.ItemValue.TimestampSpecified">
      <summary>
            Whether the timestamp is specified.
            </summary>
    </member>
    <member name="M:Opc.Da.ItemValue.#ctor">
      <summary>
            Initializes the object with default values.
            </summary>
    </member>
    <member name="M:Opc.Da.ItemValue.#ctor(Opc.ItemIdentifier)">
      <summary>
            Initializes the object with and ItemIdentifier object.
            </summary>
    </member>
    <member name="M:Opc.Da.ItemValue.#ctor(System.String)">
      <summary>
            Initializes the object with the specified item name.
            </summary>
    </member>
    <member name="M:Opc.Da.ItemValue.#ctor(Opc.Da.ItemValue)">
      <summary>
            Initializes object with the specified ItemValue object.
            </summary>
    </member>
    <member name="M:Opc.Da.ItemValue.Clone">
      <summary>
            Creates a deep copy of the object.
            </summary>
    </member>
    <member name="T:Opc.Da.ItemValueResult">
      <summary>
            The results of an operation on a uniquely identifiable item value.
            </summary>
    </member>
    <member name="M:Opc.Da.ItemValueResult.#ctor">
      <summary>
            Initializes the object with default values.
            </summary>
    </member>
    <member name="M:Opc.Da.ItemValueResult.#ctor(Opc.ItemIdentifier)">
      <summary>
            Initializes the object with an ItemIdentifier object.
            </summary>
    </member>
    <member name="M:Opc.Da.ItemValueResult.#ctor(Opc.Da.ItemValue)">
      <summary>
            Initializes the object with an ItemValue object.
            </summary>
    </member>
    <member name="M:Opc.Da.ItemValueResult.#ctor(Opc.Da.ItemValueResult)">
      <summary>
            Initializes object with the specified ItemValueResult object.
            </summary>
    </member>
    <member name="M:Opc.Da.ItemValueResult.#ctor(System.String,Opc.ResultID)">
      <summary>
            Initializes the object with the specified item name and result code.
            </summary>
    </member>
    <member name="M:Opc.Da.ItemValueResult.#ctor(System.String,Opc.ResultID,System.String)">
      <summary>
            Initializes the object with the specified item name, result code and diagnostic info.
            </summary>
    </member>
    <member name="M:Opc.Da.ItemValueResult.#ctor(Opc.ItemIdentifier,Opc.ResultID)">
      <summary>
            Initialize object with the specified ItemIdentifier and result code.
            </summary>
    </member>
    <member name="M:Opc.Da.ItemValueResult.#ctor(Opc.ItemIdentifier,Opc.ResultID,System.String)">
      <summary>
            Initializes the object with the specified ItemIdentifier, result code and diagnostic info.
            </summary>
    </member>
    <member name="P:Opc.Da.ItemValueResult.ResultID">
      <summary>
            The error id for the result of an operation on an property.
            </summary>
    </member>
    <member name="P:Opc.Da.ItemValueResult.DiagnosticInfo">
      <summary>
            Vendor specific diagnostic information (not the localized error text).
            </summary>
    </member>
    <member name="T:Opc.Da.PropertyID">
      <summary>
            Contains a unique identifier for a property.
            </summary>
    </member>
    <member name="T:Opc.Da.PropertyID.Names">
      <summary>
            A set of names for fields used in serialization.
            </summary>
    </member>
    <member name="M:Opc.Da.PropertyID.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <remarks>
        <c>MP:</c> During deserialization, SerializationInfo is passed to the class using the constructor provided for this purpose. Any visibility 
             constraints placed on the constructor are ignored when the object is deserialized; so you can mark the class as public, 
             protected, internal, or private. However, it is best practice to make the constructor protected unless the class is sealed, in which case 
             the constructor should be marked private. The constructor should also perform thorough input validation. To avoid misuse by malicious code, 
             the constructor should enforce the same security checks and permissions required to obtain an instance of the class using any other 
             constructor. 
             </remarks>
      <summary>
             Contructs a server by de-serializing its URL from the stream.
             </summary>
    </member>
    <member name="M:Opc.Da.PropertyID.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Serializes a server into a stream.
            </summary>
    </member>
    <member name="P:Opc.Da.PropertyID.Name">
      <summary>
            Used for properties identified by a qualified name.
            </summary>
    </member>
    <member name="P:Opc.Da.PropertyID.Code">
      <summary>
            Used for properties identified by a integer.
            </summary>
    </member>
    <member name="M:Opc.Da.PropertyID.op_Equality(Opc.Da.PropertyID,Opc.Da.PropertyID)">
      <summary>
            Returns true if the objects are equal.
            </summary>
    </member>
    <member name="M:Opc.Da.PropertyID.op_Inequality(Opc.Da.PropertyID,Opc.Da.PropertyID)">
      <summary>
            Returns true if the objects are not equal.
            </summary>
    </member>
    <member name="M:Opc.Da.PropertyID.#ctor(System.Xml.XmlQualifiedName)">
      <summary>
            Initializes a property identified by a qualified name.
            </summary>
    </member>
    <member name="M:Opc.Da.PropertyID.#ctor(System.Int32)">
      <summary>
            Initializes a property identified by an integer.
            </summary>
    </member>
    <member name="M:Opc.Da.PropertyID.#ctor(System.String,System.Int32,System.String)">
      <summary>
            Initializes a property identified by a property description.
            </summary>
    </member>
    <member name="M:Opc.Da.PropertyID.Equals(System.Object)">
      <summary>
            Returns true if the target object is equal to the object.
            </summary>
    </member>
    <member name="M:Opc.Da.PropertyID.GetHashCode">
      <summary>
            Returns a useful hash code for the object.
            </summary>
    </member>
    <member name="M:Opc.Da.PropertyID.ToString">
      <summary>
            Converts the property id to a string.
            </summary>
    </member>
    <member name="T:Opc.Da.Property">
      <summary>
            Defines identifiers for well-known properties.
            </summary>
    </member>
    <member name="F:Opc.Da.Property.DATATYPE">
      <remarks />
    </member>
    <member name="F:Opc.Da.Property.VALUE">
      <remarks />
    </member>
    <member name="F:Opc.Da.Property.QUALITY">
      <remarks />
    </member>
    <member name="F:Opc.Da.Property.TIMESTAMP">
      <remarks />
    </member>
    <member name="F:Opc.Da.Property.ACCESSRIGHTS">
      <remarks />
    </member>
    <member name="F:Opc.Da.Property.SCANRATE">
      <remarks />
    </member>
    <member name="F:Opc.Da.Property.EUTYPE">
      <remarks />
    </member>
    <member name="F:Opc.Da.Property.EUINFO">
      <remarks />
    </member>
    <member name="F:Opc.Da.Property.ENGINEERINGUINTS">
      <remarks />
    </member>
    <member name="F:Opc.Da.Property.DESCRIPTION">
      <remarks />
    </member>
    <member name="F:Opc.Da.Property.HIGHEU">
      <remarks />
    </member>
    <member name="F:Opc.Da.Property.LOWEU">
      <remarks />
    </member>
    <member name="F:Opc.Da.Property.HIGHIR">
      <remarks />
    </member>
    <member name="F:Opc.Da.Property.LOWIR">
      <remarks />
    </member>
    <member name="F:Opc.Da.Property.CLOSELABEL">
      <remarks />
    </member>
    <member name="F:Opc.Da.Property.OPENLABEL">
      <remarks />
    </member>
    <member name="F:Opc.Da.Property.TIMEZONE">
      <remarks />
    </member>
    <member name="F:Opc.Da.Property.CONDITION_STATUS">
      <remarks />
    </member>
    <member name="F:Opc.Da.Property.ALARM_QUICK_HELP">
      <remarks />
    </member>
    <member name="F:Opc.Da.Property.ALARM_AREA_LIST">
      <remarks />
    </member>
    <member name="F:Opc.Da.Property.PRIMARY_ALARM_AREA">
      <remarks />
    </member>
    <member name="F:Opc.Da.Property.CONDITION_LOGIC">
      <remarks />
    </member>
    <member name="F:Opc.Da.Property.LIMIT_EXCEEDED">
      <remarks />
    </member>
    <member name="F:Opc.Da.Property.DEADBAND">
      <remarks />
    </member>
    <member name="F:Opc.Da.Property.HIHI_LIMIT">
      <remarks />
    </member>
    <member name="F:Opc.Da.Property.HI_LIMIT">
      <remarks />
    </member>
    <member name="F:Opc.Da.Property.LO_LIMIT">
      <remarks />
    </member>
    <member name="F:Opc.Da.Property.LOLO_LIMIT">
      <remarks />
    </member>
    <member name="F:Opc.Da.Property.RATE_CHANGE_LIMIT">
      <remarks />
    </member>
    <member name="F:Opc.Da.Property.DEVIATION_LIMIT">
      <remarks />
    </member>
    <member name="F:Opc.Da.Property.SOUNDFILE">
      <remarks />
    </member>
    <member name="F:Opc.Da.Property.TYPE_SYSTEM_ID">
      <remarks />
    </member>
    <member name="F:Opc.Da.Property.DICTIONARY_ID">
      <remarks />
    </member>
    <member name="F:Opc.Da.Property.TYPE_ID">
      <remarks />
    </member>
    <member name="F:Opc.Da.Property.DICTIONARY">
      <remarks />
    </member>
    <member name="F:Opc.Da.Property.TYPE_DESCRIPTION">
      <remarks />
    </member>
    <member name="F:Opc.Da.Property.CONSISTENCY_WINDOW">
      <remarks />
    </member>
    <member name="F:Opc.Da.Property.WRITE_BEHAVIOR">
      <remarks />
    </member>
    <member name="F:Opc.Da.Property.UNCONVERTED_ITEM_ID">
      <remarks />
    </member>
    <member name="F:Opc.Da.Property.UNFILTERED_ITEM_ID">
      <remarks />
    </member>
    <member name="F:Opc.Da.Property.DATA_FILTER_VALUE">
      <remarks />
    </member>
    <member name="F:Opc.Da.Property.MINIMUM_VALUE">
      <remarks />
    </member>
    <member name="F:Opc.Da.Property.MAXIMUM_VALUE">
      <remarks />
    </member>
    <member name="F:Opc.Da.Property.VALUE_PRECISION">
      <remarks />
    </member>
    <member name="T:Opc.Da.PropertyDescription">
      <summary>
            Describes an item property.
            </summary>
    </member>
    <member name="P:Opc.Da.PropertyDescription.ID">
      <summary>
            The unique identifier for the property.
            </summary>
    </member>
    <member name="P:Opc.Da.PropertyDescription.Type">
      <summary>
            The .NET data type for the property.
            </summary>
    </member>
    <member name="P:Opc.Da.PropertyDescription.Name">
      <summary>
            The short description defined in the OPC specifications.
            </summary>
    </member>
    <member name="M:Opc.Da.PropertyDescription.#ctor(Opc.Da.PropertyID,System.Type,System.String)">
      <summary>
            Initializes the object with the specified values.
            </summary>
    </member>
    <member name="M:Opc.Da.PropertyDescription.ToString">
      <summary>
            Converts the description to a string.
            </summary>
    </member>
    <member name="M:Opc.Da.PropertyDescription.Find(Opc.Da.PropertyID)">
      <summary>
            Returns the description for the specified property.
            </summary>
    </member>
    <member name="M:Opc.Da.PropertyDescription.Enumerate">
      <summary>
            Returns an array of all well-known property descriptions.
            </summary>
    </member>
    <member name="F:Opc.Da.PropertyDescription.DATATYPE">
      <remarks />
    </member>
    <member name="F:Opc.Da.PropertyDescription.VALUE">
      <remarks />
    </member>
    <member name="F:Opc.Da.PropertyDescription.QUALITY">
      <remarks />
    </member>
    <member name="F:Opc.Da.PropertyDescription.TIMESTAMP">
      <remarks />
    </member>
    <member name="F:Opc.Da.PropertyDescription.ACCESSRIGHTS">
      <remarks />
    </member>
    <member name="F:Opc.Da.PropertyDescription.SCANRATE">
      <remarks />
    </member>
    <member name="F:Opc.Da.PropertyDescription.EUTYPE">
      <remarks />
    </member>
    <member name="F:Opc.Da.PropertyDescription.EUINFO">
      <remarks />
    </member>
    <member name="F:Opc.Da.PropertyDescription.ENGINEERINGUINTS">
      <remarks />
    </member>
    <member name="F:Opc.Da.PropertyDescription.DESCRIPTION">
      <remarks />
    </member>
    <member name="F:Opc.Da.PropertyDescription.HIGHEU">
      <remarks />
    </member>
    <member name="F:Opc.Da.PropertyDescription.LOWEU">
      <remarks />
    </member>
    <member name="F:Opc.Da.PropertyDescription.HIGHIR">
      <remarks />
    </member>
    <member name="F:Opc.Da.PropertyDescription.LOWIR">
      <remarks />
    </member>
    <member name="F:Opc.Da.PropertyDescription.CLOSELABEL">
      <remarks />
    </member>
    <member name="F:Opc.Da.PropertyDescription.OPENLABEL">
      <remarks />
    </member>
    <member name="F:Opc.Da.PropertyDescription.TIMEZONE">
      <remarks />
    </member>
    <member name="F:Opc.Da.PropertyDescription.CONDITION_STATUS">
      <remarks />
    </member>
    <member name="F:Opc.Da.PropertyDescription.ALARM_QUICK_HELP">
      <remarks />
    </member>
    <member name="F:Opc.Da.PropertyDescription.ALARM_AREA_LIST">
      <remarks />
    </member>
    <member name="F:Opc.Da.PropertyDescription.PRIMARY_ALARM_AREA">
      <remarks />
    </member>
    <member name="F:Opc.Da.PropertyDescription.CONDITION_LOGIC">
      <remarks />
    </member>
    <member name="F:Opc.Da.PropertyDescription.LIMIT_EXCEEDED">
      <remarks />
    </member>
    <member name="F:Opc.Da.PropertyDescription.DEADBAND">
      <remarks />
    </member>
    <member name="F:Opc.Da.PropertyDescription.HIHI_LIMIT">
      <remarks />
    </member>
    <member name="F:Opc.Da.PropertyDescription.HI_LIMIT">
      <remarks />
    </member>
    <member name="F:Opc.Da.PropertyDescription.LO_LIMIT">
      <remarks />
    </member>
    <member name="F:Opc.Da.PropertyDescription.LOLO_LIMIT">
      <remarks />
    </member>
    <member name="F:Opc.Da.PropertyDescription.RATE_CHANGE_LIMIT">
      <remarks />
    </member>
    <member name="F:Opc.Da.PropertyDescription.DEVIATION_LIMIT">
      <remarks />
    </member>
    <member name="F:Opc.Da.PropertyDescription.SOUNDFILE">
      <remarks />
    </member>
    <member name="F:Opc.Da.PropertyDescription.TYPE_SYSTEM_ID">
      <remarks />
    </member>
    <member name="F:Opc.Da.PropertyDescription.DICTIONARY_ID">
      <remarks />
    </member>
    <member name="F:Opc.Da.PropertyDescription.TYPE_ID">
      <remarks />
    </member>
    <member name="F:Opc.Da.PropertyDescription.DICTIONARY">
      <remarks />
    </member>
    <member name="F:Opc.Da.PropertyDescription.TYPE_DESCRIPTION">
      <remarks />
    </member>
    <member name="F:Opc.Da.PropertyDescription.CONSISTENCY_WINDOW">
      <remarks />
    </member>
    <member name="F:Opc.Da.PropertyDescription.WRITE_BEHAVIOR">
      <remarks />
    </member>
    <member name="F:Opc.Da.PropertyDescription.UNCONVERTED_ITEM_ID">
      <remarks />
    </member>
    <member name="F:Opc.Da.PropertyDescription.UNFILTERED_ITEM_ID">
      <remarks />
    </member>
    <member name="F:Opc.Da.PropertyDescription.DATA_FILTER_VALUE">
      <remarks />
    </member>
    <member name="F:Opc.Da.PropertyDescription.MINIMUM_VALUE">
      <remarks />
    </member>
    <member name="F:Opc.Da.PropertyDescription.MAXIMUM_VALUE">
      <remarks />
    </member>
    <member name="F:Opc.Da.PropertyDescription.VALUE_PRECISION">
      <remarks />
    </member>
    <member name="T:Opc.Da.accessRights">
      <summary>
            Defines possible item access rights.
            </summary>
    </member>
    <member name="F:Opc.Da.accessRights.readable">
      <remarks />
    </member>
    <member name="F:Opc.Da.accessRights.writable">
      <remarks />
    </member>
    <member name="F:Opc.Da.accessRights.readWritable">
      <remarks />
    </member>
    <member name="T:Opc.Da.euType">
      <summary>
            Defines possible item engineering unit types
            </summary>
    </member>
    <member name="F:Opc.Da.euType.noEnum">
      <remarks />
    </member>
    <member name="F:Opc.Da.euType.analog">
      <remarks />
    </member>
    <member name="F:Opc.Da.euType.enumerated">
      <remarks />
    </member>
    <member name="T:Opc.Da.qualityBits">
      <summary>
            Defines the possible quality status bits.
            </summary>
    </member>
    <member name="F:Opc.Da.qualityBits.good">
      <remarks />
    </member>
    <member name="F:Opc.Da.qualityBits.goodLocalOverride">
      <remarks />
    </member>
    <member name="F:Opc.Da.qualityBits.bad">
      <remarks />
    </member>
    <member name="F:Opc.Da.qualityBits.badConfigurationError">
      <remarks />
    </member>
    <member name="F:Opc.Da.qualityBits.badNotConnected">
      <remarks />
    </member>
    <member name="F:Opc.Da.qualityBits.badDeviceFailure">
      <remarks />
    </member>
    <member name="F:Opc.Da.qualityBits.badSensorFailure">
      <remarks />
    </member>
    <member name="F:Opc.Da.qualityBits.badLastKnownValue">
      <remarks />
    </member>
    <member name="F:Opc.Da.qualityBits.badCommFailure">
      <remarks />
    </member>
    <member name="F:Opc.Da.qualityBits.badOutOfService">
      <remarks />
    </member>
    <member name="F:Opc.Da.qualityBits.badWaitingForInitialData">
      <remarks />
    </member>
    <member name="F:Opc.Da.qualityBits.uncertain">
      <remarks />
    </member>
    <member name="F:Opc.Da.qualityBits.uncertainLastUsableValue">
      <remarks />
    </member>
    <member name="F:Opc.Da.qualityBits.uncertainSensorNotAccurate">
      <remarks />
    </member>
    <member name="F:Opc.Da.qualityBits.uncertainEUExceeded">
      <remarks />
    </member>
    <member name="F:Opc.Da.qualityBits.uncertainSubNormal">
      <remarks />
    </member>
    <member name="T:Opc.Da.limitBits">
      <summary>
            Defines the possible limit status bits.
            </summary>
    </member>
    <member name="F:Opc.Da.limitBits.none">
      <remarks />
    </member>
    <member name="F:Opc.Da.limitBits.low">
      <remarks />
    </member>
    <member name="F:Opc.Da.limitBits.high">
      <remarks />
    </member>
    <member name="F:Opc.Da.limitBits.constant">
      <remarks />
    </member>
    <member name="T:Opc.Da.qualityMasks">
      <summary>
            Defines bit masks for the quality.
            </summary>
    </member>
    <member name="F:Opc.Da.qualityMasks.qualityMask">
      <remarks />
    </member>
    <member name="F:Opc.Da.qualityMasks.limitMask">
      <remarks />
    </member>
    <member name="F:Opc.Da.qualityMasks.vendorMask">
      <remarks />
    </member>
    <member name="T:Opc.Da.Quality">
      <summary>
            Contains the quality field for an item value.
            </summary>
    </member>
    <member name="P:Opc.Da.Quality.QualityBits">
      <summary>
            The value in the quality bits field.
            </summary>
    </member>
    <member name="P:Opc.Da.Quality.LimitBits">
      <summary>
            The value in the limit bits field.
            </summary>
    </member>
    <member name="P:Opc.Da.Quality.VendorBits">
      <summary>
            The value in the vendor bits field.
            </summary>
    </member>
    <member name="M:Opc.Da.Quality.GetCode">
      <summary>
            Returns the quality as a 16 bit integer.
            </summary>
    </member>
    <member name="M:Opc.Da.Quality.SetCode(System.Int16)">
      <summary>
            Initializes the quality from a 16 bit integer.
            </summary>
    </member>
    <member name="M:Opc.Da.Quality.op_Equality(Opc.Da.Quality,Opc.Da.Quality)">
      <summary>
            Returns true if the objects are equal.
            </summary>
    </member>
    <member name="M:Opc.Da.Quality.op_Inequality(Opc.Da.Quality,Opc.Da.Quality)">
      <summary>
            Returns true if the objects are not equal.
            </summary>
    </member>
    <member name="M:Opc.Da.Quality.#ctor(Opc.Da.qualityBits)">
      <summary>
            Initializes the object with the specified quality.
            </summary>
    </member>
    <member name="M:Opc.Da.Quality.#ctor(System.Int16)">
      <summary>
            Initializes the object from the contents of a 16 bit integer.
            </summary>
    </member>
    <member name="M:Opc.Da.Quality.ToString">
      <summary>
            Converts a quality to a string with the format: 'quality[limit]:vendor'.
            </summary>
    </member>
    <member name="M:Opc.Da.Quality.Equals(System.Object)">
      <summary>
            Determines whether the specified Object is equal to the current Quality
            </summary>
    </member>
    <member name="M:Opc.Da.Quality.GetHashCode">
      <summary>
            Returns hash code for the current Quality.
            </summary>
    </member>
    <member name="F:Opc.Da.Quality.Good">
      <summary>
            A 'good' quality value.
            </summary>
    </member>
    <member name="F:Opc.Da.Quality.Bad">
      <summary>
            An 'bad' quality value.
            </summary>
    </member>
    <member name="T:Opc.Da.Server">
      <summary>
            An in-process object used to access OPC Data Access servers.
            </summary>
    </member>
    <member name="M:Opc.Da.Server.#ctor(Opc.Factory,Opc.URL)">
      <summary>
            Initializes the object with a factory and a default URL.
            </summary>
      <param name="factory">The Opc.Factory used to connect to remote servers.</param>
      <param name="url">The network address of a remote server.</param>
    </member>
    <member name="T:Opc.Da.Server.Names">
      <summary>
            A set of names for fields used in serialization.
            </summary>
    </member>
    <member name="M:Opc.Da.Server.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Contructs a server by de-serializing its URL from the stream.
            </summary>
    </member>
    <member name="M:Opc.Da.Server.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Serializes a server into a stream.
            </summary>
    </member>
    <member name="M:Opc.Da.Server.Clone">
      <summary>
            Returns an unconnected copy of the server with the same URL. 
            </summary>
    </member>
    <member name="P:Opc.Da.Server.Subscriptions">
      <summary>
            Returns an array of all subscriptions for the server.
            </summary>
    </member>
    <member name="P:Opc.Da.Server.Filters">
      <summary>
            The current result filters applied by the server.
            </summary>
    </member>
    <member name="M:Opc.Da.Server.Connect(Opc.URL,Opc.ConnectData)">
      <summary>
            Connects to the server with the specified URL and credentials.
            </summary>
    </member>
    <member name="M:Opc.Da.Server.Disconnect">
      <summary>
            Disconnects from the server and releases all network resources.
            </summary>
    </member>
    <member name="M:Opc.Da.Server.GetResultFilters">
      <summary>
            Returns the filters applied by the server to any item results returned to the client.
            </summary>
      <returns>A bit mask indicating which fields should be returned in any item results.</returns>
    </member>
    <member name="M:Opc.Da.Server.SetResultFilters(System.Int32)">
      <summary>
            Sets the filters applied by the server to any item results returned to the client.
            </summary>
      <param name="filters">A bit mask indicating which fields should be returned in any item results.</param>
    </member>
    <member name="M:Opc.Da.Server.GetStatus">
      <summary>
            Returns the current server status.
            </summary>
      <returns>The current server status.</returns>
    </member>
    <member name="M:Opc.Da.Server.Read(Opc.Da.Item[])">
      <summary>
            Reads the current values for a set of items. 
            </summary>
      <param name="items">The set of items to read.</param>
      <returns>The results of the read operation for each item.</returns>
    </member>
    <member name="M:Opc.Da.Server.Write(Opc.Da.ItemValue[])">
      <summary>
            Writes the value, quality and timestamp for a set of items.
            </summary>
      <param name="items">The set of item values to write.</param>
      <returns>The results of the write operation for each item.</returns>
    </member>
    <member name="M:Opc.Da.Server.CreateSubscription(Opc.Da.SubscriptionState)">
      <summary>
            Creates a new subscription.
            </summary>
      <param name="state">The initial state of the subscription.</param>
      <returns>The new subscription object.</returns>
    </member>
    <member name="M:Opc.Da.Server.CreateSubscription(Opc.Da.ISubscription)">
      <summary>
            Creates a new instance of the appropriate subcription object.
            </summary>
      <param name="subscription">The remote subscription object.</param>
    </member>
    <member name="M:Opc.Da.Server.CancelSubscription(Opc.Da.ISubscription)">
      <summary>
            Cancels a subscription and releases all resources allocated for it.
            </summary>
      <param name="subscription">The subscription to cancel.</param>
    </member>
    <member name="M:Opc.Da.Server.Browse(Opc.ItemIdentifier,Opc.Da.BrowseFilters,Opc.Da.BrowsePosition@)">
      <summary>
            Fetches the children of a branch that meet the filter criteria.
            </summary>
      <param name="itemID">The identifier of branch which is the target of the search.</param>
      <param name="filters">The filters to use to limit the set of child elements returned.</param>
      <param name="position">An object used to continue a browse that could not be completed.</param>
      <returns>The set of elements found.</returns>
    </member>
    <member name="M:Opc.Da.Server.BrowseNext(Opc.Da.BrowsePosition@)">
      <summary>
            Continues a browse operation with previously specified search criteria.
            </summary>
      <param name="position">An object containing the browse operation state information.</param>
      <returns>The set of elements found.</returns>
    </member>
    <member name="M:Opc.Da.Server.GetProperties(Opc.ItemIdentifier[],Opc.Da.PropertyID[],System.Boolean)">
      <summary>
            Returns the item properties for a set of items.
            </summary>
      <param name="itemIDs">A list of item identifiers.</param>
      <param name="propertyIDs">A list of properties to fetch for each item.</param>
      <param name="returnValues">Whether the property values should be returned with the properties.</param>
      <returns>A list of properties for each item.</returns>
    </member>
    <member name="M:Opc.Da.Server.BrowseAccessPath(Opc.ItemIdentifier)">
      <summary>
            Provides a way to browse the available AccessPath for an item.
            </summary>
      <param name="itemID">The identifier for which the access paths will be browsed.</param>
      <returns>An array of possible access paths to the item.</returns>
    </member>
    <member name="F:Opc.Da.Server.m_subscriptions">
      <summary>
            A list of subscriptions for the server.
            </summary>
    </member>
    <member name="F:Opc.Da.Server.m_filters">
      <summary>
            The local copy of the result filters.
            </summary>
    </member>
    <member name="M:Opc.Da.Server.EstablishSubscription(Opc.Da.Subscription)">
      <summary>
            Establishes a subscription based on the template provided.
            </summary>
    </member>
    <member name="T:Opc.Da.SubscriptionCollection">
      <summary>
            A collection of subscriptions.
            </summary>
    </member>
    <member name="P:Opc.Da.SubscriptionCollection.Item(System.Int32)">
      <summary>
             Gets the item at the specified index.
            </summary>
    </member>
    <member name="M:Opc.Da.SubscriptionCollection.#ctor">
      <summary>
            Initializes object with the default values.
            </summary>
    </member>
    <member name="M:Opc.Da.SubscriptionCollection.#ctor(Opc.Da.SubscriptionCollection)">
      <summary>
            Initializes object with the specified SubscriptionCollection object.
            </summary>
    </member>
    <member name="M:Opc.Da.SubscriptionCollection.Clone">
      <summary>
            Creates a deep copy of the object.
            </summary>
    </member>
    <member name="P:Opc.Da.SubscriptionCollection.IsSynchronized">
      <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
    </member>
    <member name="P:Opc.Da.SubscriptionCollection.Count">
      <summary>
            Gets the number of objects in the collection.
            </summary>
    </member>
    <member name="M:Opc.Da.SubscriptionCollection.CopyTo(System.Array,System.Int32)">
      <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
      <param name="array">The one-dimensional Array that is the destination for the objects.</param>
      <param name="index">The zero-based index in the Array at which copying begins.</param>
    </member>
    <member name="M:Opc.Da.SubscriptionCollection.CopyTo(Opc.Da.Subscription[],System.Int32)">
      <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
      <param name="array">The one-dimensional Array that is the destination for the objects.</param>
      <param name="index">The zero-based index in the Array at which copying begins.</param>
    </member>
    <member name="P:Opc.Da.SubscriptionCollection.SyncRoot">
      <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
    </member>
    <member name="M:Opc.Da.SubscriptionCollection.GetEnumerator">
      <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
      <returns>An IEnumerator that can be used to iterate through the collection.</returns>
    </member>
    <member name="P:Opc.Da.SubscriptionCollection.IsReadOnly">
      <summary>
            Gets a value indicating whether the IList is read-only.
            </summary>
    </member>
    <member name="P:Opc.Da.SubscriptionCollection.System#Collections#IList#Item(System.Int32)">
      <summary>
            Gets or sets the element at the specified index.
            </summary>
    </member>
    <member name="M:Opc.Da.SubscriptionCollection.RemoveAt(System.Int32)">
      <summary>
            Removes the IList subscription at the specified index.
            </summary>
      <param name="index">The zero-based index of the subscription to remove.</param>
    </member>
    <member name="M:Opc.Da.SubscriptionCollection.Insert(System.Int32,System.Object)">
      <summary>
            Inserts an subscription to the IList at the specified position.
            </summary>
      <param name="index">The zero-based index at which value should be inserted.</param>
      <param name="value">The Object to insert into the IList. </param>
    </member>
    <member name="M:Opc.Da.SubscriptionCollection.Remove(System.Object)">
      <summary>
            Removes the first occurrence of a specific object from the IList.
            </summary>
      <param name="value">The Object to remove from the IList.</param>
    </member>
    <member name="M:Opc.Da.SubscriptionCollection.Contains(System.Object)">
      <summary>
            Determines whether the IList contains a specific value.
            </summary>
      <param name="value">The Object to locate in the IList.</param>
      <returns>true if the Object is found in the IList; otherwise, false.</returns>
    </member>
    <member name="M:Opc.Da.SubscriptionCollection.Clear">
      <summary>
            Removes all subscriptions from the IList.
            </summary>
    </member>
    <member name="M:Opc.Da.SubscriptionCollection.IndexOf(System.Object)">
      <summary>
            Determines the index of a specific subscription in the IList.
            </summary>
      <param name="value">The Object to locate in the IList.</param>
      <returns>The index of value if found in the list; otherwise, -1.</returns>
    </member>
    <member name="M:Opc.Da.SubscriptionCollection.Add(System.Object)">
      <summary>
            Adds an subscription to the IList.
            </summary>
      <param name="value">The Object to add to the IList. </param>
      <returns>The position into which the new element was inserted.</returns>
    </member>
    <member name="P:Opc.Da.SubscriptionCollection.IsFixedSize">
      <summary>
            Indicates whether the IList has a fixed size.
            </summary>
    </member>
    <member name="M:Opc.Da.SubscriptionCollection.Insert(System.Int32,Opc.Da.Subscription)">
      <summary>
            Inserts an subscription to the IList at the specified position.
            </summary>
      <param name="index">The zero-based index at which value should be inserted.</param>
      <param name="value">The Object to insert into the IList. </param>
    </member>
    <member name="M:Opc.Da.SubscriptionCollection.Remove(Opc.Da.Subscription)">
      <summary>
            Removes the first occurrence of a specific object from the IList.
            </summary>
      <param name="value">The Object to remove from the IList.</param>
    </member>
    <member name="M:Opc.Da.SubscriptionCollection.Contains(Opc.Da.Subscription)">
      <summary>
            Determines whether the IList contains a specific value.
            </summary>
      <param name="value">The Object to locate in the IList.</param>
      <returns>true if the Object is found in the IList; otherwise, false.</returns>
    </member>
    <member name="M:Opc.Da.SubscriptionCollection.IndexOf(Opc.Da.Subscription)">
      <summary>
            Determines the index of a specific subscription in the IList.
            </summary>
      <param name="value">The Object to locate in the IList.</param>
      <returns>The index of value if found in the list; otherwise, -1.</returns>
    </member>
    <member name="M:Opc.Da.SubscriptionCollection.Add(Opc.Da.Subscription)">
      <summary>
            Adds an subscription to the IList.
            </summary>
      <param name="value">The Object to add to the IList. </param>
      <returns>The position into which the new element was inserted.</returns>
    </member>
    <member name="T:Opc.Da.GetResultFiltersAsyncDelegate">
      <summary>
            The asynchronous delegate for GetResultFilters.
            </summary>
    </member>
    <member name="T:Opc.Da.SetResultFiltersAsyncDelegate">
      <summary>
            The asynchronous delegate for SetResultFilters.
            </summary>
    </member>
    <member name="T:Opc.Da.GetStatusAsyncDelegate">
      <summary>
            The asynchronous delegate for GetStatus.
            </summary>
    </member>
    <member name="T:Opc.Da.ReadAsyncDelegate">
      <summary>
            The asynchronous delegate for Read.
            </summary>
    </member>
    <member name="T:Opc.Da.WriteAsyncDelegate">
      <summary>
            The asynchronous delegate for Write.
            </summary>
    </member>
    <member name="T:Opc.Da.CreateSubscriptionAsyncDelegate">
      <summary>
            The asynchronous delegate for CreateSubscription.
            </summary>
    </member>
    <member name="T:Opc.Da.CancelSubscriptionAsyncDelegate">
      <summary>
            The asynchronous delegate for CancelSubscription.
            </summary>
    </member>
    <member name="T:Opc.Da.BrowseAsyncDelegate">
      <summary>
            The asynchronous delegate for Browse.
            </summary>
    </member>
    <member name="T:Opc.Da.BrowseNextAsyncDelegate">
      <summary>
            The asynchronous delegate for BrowseNext.
            </summary>
    </member>
    <member name="T:Opc.Da.GetPropertiesAsyncDelegate">
      <summary>
            The asynchronous delegate for GetProperties.
            </summary>
    </member>
    <member name="T:Opc.Da.Subscription">
      <summary>
            An in-process object used to access subscriptions on OPC Data Access servers.
            </summary>
    </member>
    <member name="M:Opc.Da.Subscription.#ctor(Opc.Da.Server,Opc.Da.ISubscription)">
      <summary>
            Initializes object with default values.
            </summary>
    </member>
    <member name="M:Opc.Da.Subscription.Dispose">
      <summary>
            This must be called explicitly by clients to ensure the remote server is released.
            </summary>
    </member>
    <member name="T:Opc.Da.Subscription.Names">
      <summary>
            A set of names for fields used in serialization.
            </summary>
    </member>
    <member name="M:Opc.Da.Subscription.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Contructs a server by de-serializing its URL from the stream.
            </summary>
    </member>
    <member name="M:Opc.Da.Subscription.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Serializes a server into a stream.
            </summary>
    </member>
    <member name="M:Opc.Da.Subscription.Clone">
      <summary>
            Returns an unconnected copy of the subscription with the same items.
            </summary>
    </member>
    <member name="P:Opc.Da.Subscription.Server">
      <summary>
            The server that the subscription is attached to.
            </summary>
    </member>
    <member name="P:Opc.Da.Subscription.Name">
      <summary>
            The name assigned to the subscription by the client.
            </summary>
    </member>
    <member name="P:Opc.Da.Subscription.ClientHandle">
      <summary>
            The handle assigned to the group by the client.
            </summary>
    </member>
    <member name="P:Opc.Da.Subscription.ServerHandle">
      <summary>
            The handle assigned to the subscription by the server.
            </summary>
    </member>
    <member name="P:Opc.Da.Subscription.Active">
      <summary>
            Whether the subscription is active.
            </summary>
    </member>
    <member name="P:Opc.Da.Subscription.Enabled">
      <summary>
            Whether data callbacks are enabled.
            </summary>
    </member>
    <member name="P:Opc.Da.Subscription.Locale">
      <summary>
            The current locale used by the subscription.
            </summary>
    </member>
    <member name="P:Opc.Da.Subscription.Filters">
      <summary>
            The current result filters applied by the subscription.
            </summary>
    </member>
    <member name="P:Opc.Da.Subscription.State">
      <summary>
            Returns a copy of the current subscription state.
            </summary>
    </member>
    <member name="P:Opc.Da.Subscription.Items">
      <summary>
            The items belonging to the subscription.
            </summary>
    </member>
    <member name="E:Opc.Da.Subscription.DataChanged">
      <summary>
            An event to receive data change updates.
            </summary>
    </member>
    <member name="M:Opc.Da.Subscription.GetResultFilters">
      <summary>
            Gets default result filters for the server.
            </summary>
    </member>
    <member name="M:Opc.Da.Subscription.SetResultFilters(System.Int32)">
      <summary>
            Sets default result filters for the server.
            </summary>
    </member>
    <member name="M:Opc.Da.Subscription.GetState">
      <summary>
            Returns the current subscription state.
            </summary>
    </member>
    <member name="M:Opc.Da.Subscription.ModifyState(System.Int32,Opc.Da.SubscriptionState)">
      <summary>
            Updates the current subscription state.
            </summary>
    </member>
    <member name="M:Opc.Da.Subscription.AddItems(Opc.Da.Item[])">
      <summary>
            Adds items to the subscription.
            </summary>
    </member>
    <member name="M:Opc.Da.Subscription.ModifyItems(System.Int32,Opc.Da.Item[])">
      <summary>
            Modifies items that are already part of the subscription.
            </summary>
    </member>
    <member name="M:Opc.Da.Subscription.RemoveItems(Opc.ItemIdentifier[])">
      <summary>
            Removes items from a subsription.
            </summary>
    </member>
    <member name="M:Opc.Da.Subscription.Read(Opc.Da.Item[])">
      <summary>
            Reads a set of subscription items.
            </summary>
    </member>
    <member name="M:Opc.Da.Subscription.Write(Opc.Da.ItemValue[])">
      <summary>
            Writes a set of subscription items.
            </summary>
    </member>
    <member name="M:Opc.Da.Subscription.Read(Opc.Da.Item[],System.Object,Opc.Da.ReadCompleteEventHandler,Opc.IRequest@)">
      <summary>
            Begins an asynchronous read operation for a set of items.
            </summary>
      <param name="items">The set of items to read (must include the server handle).</param>
      <param name="requestHandle">An identifier for the request assigned by the caller.</param>
      <param name="callback">A delegate used to receive notifications when the request completes.</param>
      <param name="request">An object that contains the state of the request (used to cancel the request).</param>
      <returns>A set of results containing any errors encountered when the server validated the items.</returns>
    </member>
    <member name="M:Opc.Da.Subscription.Write(Opc.Da.ItemValue[],System.Object,Opc.Da.WriteCompleteEventHandler,Opc.IRequest@)">
      <summary>
            Begins an asynchronous write operation for a set of items.
            </summary>
      <param name="items">The set of item values to write (must include the server handle).</param>
      <param name="requestHandle">An identifier for the request assigned by the caller.</param>
      <param name="callback">A delegate used to receive notifications when the request completes.</param>
      <param name="request">An object that contains the state of the request (used to cancel the request).</param>
      <returns>A set of results containing any errors encountered when the server validated the items.</returns>
    </member>
    <member name="M:Opc.Da.Subscription.Cancel(Opc.IRequest,Opc.Da.CancelCompleteEventHandler)">
      <summary>
            Cancels an asynchronous request.
            </summary>
    </member>
    <member name="M:Opc.Da.Subscription.Refresh">
      <summary>
            Tells the server to send an data change update for all subscription items. 
            </summary>
    </member>
    <member name="M:Opc.Da.Subscription.Refresh(System.Object,Opc.IRequest@)">
      <summary>
            Causes the server to send a data changed notification for all active items. 
            </summary>
      <param name="requestHandle">An identifier for the request assigned by the caller.</param>
      <param name="request">An object that contains the state of the request (used to cancel the request).</param>
      <returns>A set of results containing any errors encountered when the server validated the items.</returns>
    </member>
    <member name="M:Opc.Da.Subscription.SetEnabled(System.Boolean)">
      <summary>
            Sets whether data change callbacks are enabled.
            </summary>
    </member>
    <member name="M:Opc.Da.Subscription.GetEnabled">
      <summary>
            Gets whether data change callbacks are enabled.
            </summary>
    </member>
    <member name="F:Opc.Da.Subscription.m_server">
      <summary>
            The containing server object.
            </summary>
    </member>
    <member name="F:Opc.Da.Subscription.m_subscription">
      <summary>
            The remote subscription object.
            </summary>
    </member>
    <member name="F:Opc.Da.Subscription.m_state">
      <summary>
            The local copy of the subscription state.
            </summary>
    </member>
    <member name="F:Opc.Da.Subscription.m_items">
      <summary>
            The local copy of all subscription items.
            </summary>
    </member>
    <member name="F:Opc.Da.Subscription.m_enabled">
      <summary>
            Whether data callbacks are enabled.
            </summary>
    </member>
    <member name="F:Opc.Da.Subscription.m_filters">
      <summary>
            The local copy of the result filters.
            </summary>
    </member>
    <member name="T:Opc.ReadOnlyCollection">
      <summary>
            A read only collection class which can be used to expose arrays as properties of classes.
            </summary>
    </member>
    <member name="P:Opc.ReadOnlyCollection.Item(System.Int32)">
      <summary>
            An indexer for the collection.
            </summary>
    </member>
    <member name="M:Opc.ReadOnlyCollection.ToArray">
      <summary>
            Returns a copy of the collection as an array.
            </summary>
    </member>
    <member name="M:Opc.ReadOnlyCollection.#ctor(System.Array)">
      <summary>
            Creates a collection that wraps the specified array instance.
             </summary>
    </member>
    <member name="P:Opc.ReadOnlyCollection.Array">
      <summary>
            The array instance exposed by the collection.
            </summary>
    </member>
    <member name="T:Opc.ReadOnlyCollection.Names">
      <summary>
            A set of names for fields used in serialization.
            </summary>
    </member>
    <member name="M:Opc.ReadOnlyCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Contructs a server by de-serializing its URL from the stream.
            </summary>
    </member>
    <member name="M:Opc.ReadOnlyCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Serializes a server into a stream.
            </summary>
    </member>
    <member name="P:Opc.ReadOnlyCollection.IsSynchronized">
      <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
    </member>
    <member name="P:Opc.ReadOnlyCollection.Count">
      <summary>
            Gets the number of objects in the collection.
            </summary>
    </member>
    <member name="M:Opc.ReadOnlyCollection.CopyTo(System.Array,System.Int32)">
      <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
      <param name="array">The one-dimensional Array that is the destination for the objects.</param>
      <param name="index">The zero-based index in the Array at which copying begins.</param>
    </member>
    <member name="P:Opc.ReadOnlyCollection.SyncRoot">
      <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
    </member>
    <member name="M:Opc.ReadOnlyCollection.GetEnumerator">
      <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
      <returns>An IEnumerator that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:Opc.ReadOnlyCollection.Clone">
      <summary>
            Creates a deep copy of the collection.
            </summary>
    </member>
    <member name="T:Opc.WriteableCollection">
      <summary>
            A writeable collection class which can be used to expose arrays as properties of classes.
            </summary>
    </member>
    <member name="P:Opc.WriteableCollection.Item(System.Int32)">
      <summary>
            An indexer for the collection.
            </summary>
    </member>
    <member name="M:Opc.WriteableCollection.ToArray">
      <summary>
            Returns a copy of the collection as an array.
            </summary>
    </member>
    <member name="M:Opc.WriteableCollection.AddRange(System.Collections.ICollection)">
      <summary>
            Adds a list of values to the collection.
            </summary>
    </member>
    <member name="M:Opc.WriteableCollection.#ctor(System.Collections.ICollection,System.Type)">
      <summary>
            Creates a collection that wraps the specified array instance.
            </summary>
    </member>
    <member name="P:Opc.WriteableCollection.Array">
      <summary>
            The array instance exposed by the collection.
            </summary>
    </member>
    <member name="P:Opc.WriteableCollection.ElementType">
      <summary>
            The type of objects allowed in the collection.
            </summary>
    </member>
    <member name="M:Opc.WriteableCollection.ValidateElement(System.Object)">
      <summary>
            Throws an exception if the element is not valid for the collection.
            </summary>
    </member>
    <member name="F:Opc.WriteableCollection.INVALID_VALUE">
      <remarks />
    </member>
    <member name="F:Opc.WriteableCollection.INVALID_TYPE">
      <remarks />
    </member>
    <member name="T:Opc.WriteableCollection.Names">
      <summary>
            A set of names for fields used in serialization.
            </summary>
    </member>
    <member name="M:Opc.WriteableCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Contructs a server by de-serializing its URL from the stream.
            </summary>
    </member>
    <member name="M:Opc.WriteableCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Serializes a server into a stream.
            </summary>
    </member>
    <member name="P:Opc.WriteableCollection.IsSynchronized">
      <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
    </member>
    <member name="P:Opc.WriteableCollection.Count">
      <summary>
            Gets the number of objects in the collection.
            </summary>
    </member>
    <member name="M:Opc.WriteableCollection.CopyTo(System.Array,System.Int32)">
      <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
      <param name="array">The one-dimensional Array that is the destination for the objects.</param>
      <param name="index">The zero-based index in the Array at which copying begins.</param>
    </member>
    <member name="P:Opc.WriteableCollection.SyncRoot">
      <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
    </member>
    <member name="M:Opc.WriteableCollection.GetEnumerator">
      <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
      <returns>An IEnumerator that can be used to iterate through the collection.</returns>
    </member>
    <member name="P:Opc.WriteableCollection.IsReadOnly">
      <summary>
            Gets a value indicating whether the collection is read-only.
            </summary>
    </member>
    <member name="P:Opc.WriteableCollection.System#Collections#IList#Item(System.Int32)">
      <summary>
            Gets or sets the element at the specified index.
            </summary>
    </member>
    <member name="M:Opc.WriteableCollection.RemoveAt(System.Int32)">
      <summary>
            Removes the IList item at the specified index.
            </summary>
      <param name="index">The zero-based index of the item to remove.</param>
    </member>
    <member name="M:Opc.WriteableCollection.Insert(System.Int32,System.Object)">
      <summary>
            Inserts an item to the IList at the specified position.
            </summary>
      <param name="index">The zero-based index at which value should be inserted.</param>
      <param name="value">The Object to insert into the IList. </param>
    </member>
    <member name="M:Opc.WriteableCollection.Remove(System.Object)">
      <summary>
            Removes the first occurrence of a specific object from the IList.
            </summary>
      <param name="value">The Object to remove from the IList.</param>
    </member>
    <member name="M:Opc.WriteableCollection.Contains(System.Object)">
      <summary>
            Determines whether the IList contains a specific value.
            </summary>
      <param name="value">The Object to locate in the IList.</param>
      <returns>true if the Object is found in the IList; otherwise, false.</returns>
    </member>
    <member name="M:Opc.WriteableCollection.Clear">
      <summary>
            Removes all items from the IList.
            </summary>
    </member>
    <member name="M:Opc.WriteableCollection.IndexOf(System.Object)">
      <summary>
            Determines the index of a specific item in the IList.
            </summary>
      <param name="value">The Object to locate in the IList.</param>
      <returns>The index of value if found in the list; otherwise, -1.</returns>
    </member>
    <member name="M:Opc.WriteableCollection.Add(System.Object)">
      <summary>
            Adds an item to the IList.
            </summary>
      <param name="value">The Object to add to the IList. </param>
      <returns>The position into which the new element was inserted.</returns>
    </member>
    <member name="P:Opc.WriteableCollection.IsFixedSize">
      <summary>
            Indicates whether the IList has a fixed size.
            </summary>
    </member>
    <member name="M:Opc.WriteableCollection.Clone">
      <summary>
            Creates a deep copy of the collection.
            </summary>
    </member>
    <member name="T:Opc.ReadOnlyDictionary">
      <summary>
            A read only dictionary class which can be used to expose arrays as properties of classes.
            </summary>
    </member>
    <member name="M:Opc.ReadOnlyDictionary.#ctor(System.Collections.Hashtable)">
      <summary>
            Creates a collection that wraps the specified array instance.
             </summary>
    </member>
    <member name="P:Opc.ReadOnlyDictionary.Dictionary">
      <summary>
            The array instance exposed by the collection.
            </summary>
    </member>
    <member name="T:Opc.ReadOnlyDictionary.Names">
      <summary>
            A set of names for fields used in serialization.
            </summary>
    </member>
    <member name="M:Opc.ReadOnlyDictionary.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Contructs a server by de-serializing its URL from the stream.
            </summary>
    </member>
    <member name="M:Opc.ReadOnlyDictionary.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Serializes a server into a stream.
            </summary>
    </member>
    <member name="P:Opc.ReadOnlyDictionary.IsReadOnly">
      <summary>
            Gets a value indicating whether the IDictionary is read-only.
            </summary>
    </member>
    <member name="M:Opc.ReadOnlyDictionary.GetEnumerator">
      <summary>
            Returns an IDictionaryEnumerator for the IDictionary.
            </summary>
    </member>
    <member name="P:Opc.ReadOnlyDictionary.Item(System.Object)">
      <summary>
            Gets or sets the element with the specified key. 
            </summary>
    </member>
    <member name="M:Opc.ReadOnlyDictionary.Remove(System.Object)">
      <summary>
            Removes the element with the specified key from the IDictionary.
            </summary>
    </member>
    <member name="M:Opc.ReadOnlyDictionary.Contains(System.Object)">
      <summary>
            Determines whether the IDictionary contains an element with the specified key.
            </summary>
    </member>
    <member name="M:Opc.ReadOnlyDictionary.Clear">
      <summary>
            Removes all elements from the IDictionary.
            </summary>
    </member>
    <member name="P:Opc.ReadOnlyDictionary.Values">
      <summary>
            Gets an ICollection containing the values in the IDictionary.
            </summary>
    </member>
    <member name="M:Opc.ReadOnlyDictionary.Add(System.Object,System.Object)">
      <summary>
            Adds an element with the provided key and value to the IDictionary.
            </summary>
    </member>
    <member name="P:Opc.ReadOnlyDictionary.Keys">
      <summary>
            Gets an ICollection containing the keys of the IDictionary.
            </summary>
    </member>
    <member name="P:Opc.ReadOnlyDictionary.IsFixedSize">
      <summary>
            Gets a value indicating whether the IDictionary has a fixed size.
            </summary>
    </member>
    <member name="P:Opc.ReadOnlyDictionary.IsSynchronized">
      <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
    </member>
    <member name="P:Opc.ReadOnlyDictionary.Count">
      <summary>
            Gets the number of objects in the collection.
            </summary>
    </member>
    <member name="M:Opc.ReadOnlyDictionary.CopyTo(System.Array,System.Int32)">
      <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
      <param name="array">The one-dimensional Array that is the destination for the objects.</param>
      <param name="index">The zero-based index in the Array at which copying begins.</param>
    </member>
    <member name="P:Opc.ReadOnlyDictionary.SyncRoot">
      <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
    </member>
    <member name="M:Opc.ReadOnlyDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
      <returns>An IEnumerator that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:Opc.ReadOnlyDictionary.Clone">
      <summary>
            Creates a deep copy of the collection.
            </summary>
    </member>
    <member name="T:Opc.WriteableDictionary">
      <summary>
            A read only dictionary class which can be used to expose arrays as properties of classes.
            </summary>
    </member>
    <member name="M:Opc.WriteableDictionary.#ctor(System.Collections.IDictionary,System.Type,System.Type)">
      <summary>
            Creates a collection that wraps the specified array instance.
            </summary>
    </member>
    <member name="P:Opc.WriteableDictionary.Dictionary">
      <summary>
            The dictionary instance exposed by the collection.
            </summary>
    </member>
    <member name="P:Opc.WriteableDictionary.KeyType">
      <summary>
            The type of objects allowed as keys in the dictionary.
            </summary>
    </member>
    <member name="P:Opc.WriteableDictionary.ValueType">
      <summary>
            The type of objects allowed as values in the dictionary.
            </summary>
    </member>
    <member name="M:Opc.WriteableDictionary.ValidateKey(System.Object,System.Type)">
      <summary>
            Throws an exception if the key is not valid for the dictionary.
            </summary>
    </member>
    <member name="M:Opc.WriteableDictionary.ValidateValue(System.Object,System.Type)">
      <summary>
            Throws an exception if the value is not valid for the dictionary.
            </summary>
    </member>
    <member name="F:Opc.WriteableDictionary.INVALID_VALUE">
      <remarks />
    </member>
    <member name="F:Opc.WriteableDictionary.INVALID_TYPE">
      <remarks />
    </member>
    <member name="T:Opc.WriteableDictionary.Names">
      <summary>
            A set of names for fields used in serialization.
            </summary>
    </member>
    <member name="M:Opc.WriteableDictionary.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Contructs a server by de-serializing its URL from the stream.
            </summary>
    </member>
    <member name="M:Opc.WriteableDictionary.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Serializes a server into a stream.
            </summary>
    </member>
    <member name="P:Opc.WriteableDictionary.IsReadOnly">
      <summary>
            Gets a value indicating whether the IDictionary is read-only.
            </summary>
    </member>
    <member name="M:Opc.WriteableDictionary.GetEnumerator">
      <summary>
            Returns an IDictionaryEnumerator for the IDictionary.
            </summary>
    </member>
    <member name="P:Opc.WriteableDictionary.Item(System.Object)">
      <summary>
            Gets or sets the element with the specified key. 
            </summary>
    </member>
    <member name="M:Opc.WriteableDictionary.Remove(System.Object)">
      <summary>
            Removes the element with the specified key from the IDictionary.
            </summary>
    </member>
    <member name="M:Opc.WriteableDictionary.Contains(System.Object)">
      <summary>
            Determines whether the IDictionary contains an element with the specified key.
            </summary>
    </member>
    <member name="M:Opc.WriteableDictionary.Clear">
      <summary>
            Removes all elements from the IDictionary.
            </summary>
    </member>
    <member name="P:Opc.WriteableDictionary.Values">
      <summary>
            Gets an ICollection containing the values in the IDictionary.
            </summary>
    </member>
    <member name="M:Opc.WriteableDictionary.Add(System.Object,System.Object)">
      <summary>
            Adds an element with the provided key and value to the IDictionary.
            </summary>
    </member>
    <member name="P:Opc.WriteableDictionary.Keys">
      <summary>
            Gets an ICollection containing the keys of the IDictionary.
            </summary>
    </member>
    <member name="P:Opc.WriteableDictionary.IsFixedSize">
      <summary>
            Gets a value indicating whether the IDictionary has a fixed size.
            </summary>
    </member>
    <member name="P:Opc.WriteableDictionary.IsSynchronized">
      <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
    </member>
    <member name="P:Opc.WriteableDictionary.Count">
      <summary>
            Gets the number of objects in the collection.
            </summary>
    </member>
    <member name="M:Opc.WriteableDictionary.CopyTo(System.Array,System.Int32)">
      <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
      <param name="array">The one-dimensional Array that is the destination for the objects.</param>
      <param name="index">The zero-based index in the Array at which copying begins.</param>
    </member>
    <member name="P:Opc.WriteableDictionary.SyncRoot">
      <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
    </member>
    <member name="M:Opc.WriteableDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
      <returns>An IEnumerator that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:Opc.WriteableDictionary.Clone">
      <summary>
            Creates a deep copy of the collection.
            </summary>
    </member>
    <member name="T:Opc.ConnectData">
      <summary>
            Contains protocol dependent connection and authenication information.
            </summary>
    </member>
    <member name="P:Opc.ConnectData.Credentials">
      <summary>
            The credentials to submit to the proxy server for authentication.
            </summary>
    </member>
    <member name="P:Opc.ConnectData.LicenseKey">
      <summary>
            The license key used to connect to the server.
            </summary>
    </member>
    <member name="M:Opc.ConnectData.GetCredential(System.Uri,System.String)">
      <summary>
            Returns a NetworkCredential object that is associated with the specified URI, and authentication type.
            </summary>
    </member>
    <member name="M:Opc.ConnectData.GetProxy">
      <summary>
            Returns the web proxy object to use when connecting to the server.
            </summary>
    </member>
    <member name="M:Opc.ConnectData.SetProxy(System.Net.WebProxy)">
      <summary>
            Sets the web proxy object.
            </summary>
    </member>
    <member name="M:Opc.ConnectData.#ctor(System.Net.NetworkCredential)">
      <summary>
            Initializes an instance with the specified credentials.
            </summary>
    </member>
    <member name="M:Opc.ConnectData.#ctor(System.Net.NetworkCredential,System.Net.WebProxy)">
      <summary>
            Initializes an instance with the specified credentials and web proxy.
            </summary>
    </member>
    <member name="T:Opc.ConnectData.Names">
      <summary>
            A set of names for fields used in serialization.
            </summary>
    </member>
    <member name="M:Opc.ConnectData.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Contructs teh object by de-serializing from the stream.
            </summary>
    </member>
    <member name="M:Opc.ConnectData.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Serializes a server into a stream.
            </summary>
    </member>
    <member name="T:Opc.Convert">
      <summary>
            Defines various functions used to convert types.
            </summary>
    </member>
    <member name="M:Opc.Convert.IsValid(System.Array)">
      <summary>
            Checks whether the array contains any useful data.
            </summary>
    </member>
    <member name="M:Opc.Convert.IsEmpty(System.Array)">
      <summary>
            Checks whether the array contains any useful data.
            </summary>
    </member>
    <member name="M:Opc.Convert.IsValid(System.String)">
      <summary>
            Checks whether the string contains any useful data.
            </summary>
    </member>
    <member name="M:Opc.Convert.IsEmpty(System.String)">
      <summary>
            Checks whether the string contains any useful data.
            </summary>
    </member>
    <member name="M:Opc.Convert.Clone(System.Object)">
      <summary>
            Performs a deep copy of an object if possible.
            </summary>
    </member>
    <member name="M:Opc.Convert.Compare(System.Object,System.Object)">
      <summary>
            Does a deep comparison between two objects.
            </summary>
    </member>
    <member name="M:Opc.Convert.ChangeType(System.Object,System.Type)">
      <summary>
            Converts an object to the specified type and returns a deep copy.
            </summary>
    </member>
    <member name="M:Opc.Convert.ToString(System.Object)">
      <summary>
            Formats an item or property value as a string.
            </summary>
    </member>
    <member name="M:Opc.Convert.Match(System.String,System.String,System.Boolean)">
      <summary>
            Tests if the specified string matches the specified pattern.
            </summary>
    </member>
    <member name="T:Opc.IFactory">
      <summary>
            A interface to a factory used to instantiate servers.
            </summary>
    </member>
    <member name="M:Opc.IFactory.CreateInstance(Opc.URL,Opc.ConnectData)">
      <summary>
            Creates a new instance of the server at the specified URL.
            </summary>
    </member>
    <member name="T:Opc.Factory">
      <summary>
            The default class used to instantiate server objects.
            </summary>
    </member>
    <member name="M:Opc.Factory.#ctor(System.Type,System.Boolean)">
      <summary>
            Initializes the object with the type of the servers it can instantiate.
            </summary>
      <param name="systemType">The System.Type of the server object that the factory can create.</param>
      <param name="useRemoting">Whether the factory should use .NET Remoting to instantiate the servers.</param>
    </member>
    <member name="M:Opc.Factory.Finalize">
      <summary>
            The finalizer.
            </summary>
    </member>
    <member name="M:Opc.Factory.Dispose">
      <summary>
            Releases unmanaged resources held by the object.
            </summary>
    </member>
    <member name="M:Opc.Factory.Dispose(System.Boolean)">
      <summary>
            Releases unmanaged resources held by the object.
            </summary>
    </member>
    <member name="T:Opc.Factory.Names">
      <summary>
            A set of names for fields used in serialization.
            </summary>
    </member>
    <member name="M:Opc.Factory.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Contructs a server by de-serializing its URL from the stream.
            </summary>
    </member>
    <member name="M:Opc.Factory.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Serializes a server into a stream.
            </summary>
    </member>
    <member name="M:Opc.Factory.Clone">
      <summary>
            Returns a clone of the factory.
            </summary>
    </member>
    <member name="M:Opc.Factory.CreateInstance(Opc.URL,Opc.ConnectData)">
      <summary>
            Creates a new instance of the server.
            </summary>
    </member>
    <member name="P:Opc.Factory.SystemType">
      <summary>
            The system type used to instantiate the remote server object.
            </summary>
    </member>
    <member name="P:Opc.Factory.UseRemoting">
      <summary>
            Whether the system type is a default system type for an OPC specification.
            </summary>
    </member>
    <member name="F:Opc.Factory.m_systemType">
      <summary>
            The system type used to instantiate the remote server object.
            </summary>
    </member>
    <member name="F:Opc.Factory.m_useRemoting">
      <summary>
            Whether the system type is a default system type for an OPC specification.
            </summary>
    </member>
    <member name="T:Opc.IDiscovery">
      <summary>
            This interface is used to discover OPC servers on the network.
            </summary>
    </member>
    <member name="M:Opc.IDiscovery.EnumerateHosts">
      <summary>
            Returns a list of host names which could contain OPC servers.
            </summary>
      <returns>A array of strings that are valid network host names.</returns>
    </member>
    <member name="M:Opc.IDiscovery.GetAvailableServers(Opc.Specification)">
      <summary>
            Returns a list of servers that support an OPC specification.
            </summary>
      <param name="specification">A unique identifier for an OPC specification.</param>
      <returns>An array of unconnected OPC server obejcts on the local machine.</returns>
    </member>
    <member name="M:Opc.IDiscovery.GetAvailableServers(Opc.Specification,System.String,Opc.ConnectData)">
      <summary>
            Returns a list of servers that support an OPC specification on remote machine.
            </summary>
      <param name="specification">A unique identifier for an OPC specification.</param>
      <param name="host">The network host name of the machine to search for servers.</param>
      <param name="connectData">Any necessary user authentication or protocol configuration information.</param>
      <returns>An array of unconnected OPC server objects.</returns>
    </member>
    <member name="T:Opc.Specification">
      <summary>
            A description of an interface version defined by an OPC specification.
            </summary>
    </member>
    <member name="P:Opc.Specification.ID">
      <summary>
            The unique identifier for the interface version. 
            </summary>
    </member>
    <member name="P:Opc.Specification.Description">
      <summary>
            The human readable description for the interface version.
            </summary>
    </member>
    <member name="M:Opc.Specification.op_Equality(Opc.Specification,Opc.Specification)">
      <summary>
            Returns true if the objects are equal.
            </summary>
    </member>
    <member name="M:Opc.Specification.op_Inequality(Opc.Specification,Opc.Specification)">
      <summary>
            Returns true if the objects are not equal.
            </summary>
    </member>
    <member name="M:Opc.Specification.#ctor(System.String,System.String)">
      <summary>
            Initializes the object with the description and a GUID as a string.
            </summary>
    </member>
    <member name="M:Opc.Specification.Equals(System.Object)">
      <summary>
            Determines if the object is equal to the specified value.
            </summary>
    </member>
    <member name="M:Opc.Specification.ToString">
      <summary>
            Converts the object to a string used for display.
            </summary>
    </member>
    <member name="M:Opc.Specification.GetHashCode">
      <summary>
            Returns a suitable hash code for the result.
            </summary>
    </member>
    <member name="F:Opc.Specification.COM_AE_10">
      <summary>
            A set of Specification objects for existing OPC specifications.
            </summary>
    </member>
    <member name="F:Opc.Specification.COM_BATCH_10">
      <remarks />
    </member>
    <member name="F:Opc.Specification.COM_BATCH_20">
      <remarks />
    </member>
    <member name="F:Opc.Specification.COM_DA_10">
      <remarks />
    </member>
    <member name="F:Opc.Specification.COM_DA_20">
      <remarks />
    </member>
    <member name="F:Opc.Specification.COM_DA_30">
      <remarks />
    </member>
    <member name="F:Opc.Specification.COM_DX_10">
      <remarks />
    </member>
    <member name="F:Opc.Specification.COM_HDA_10">
      <remarks />
    </member>
    <member name="F:Opc.Specification.XML_DA_10">
      <remarks />
    </member>
    <member name="F:Opc.Specification.UA10">
      <remarks />
    </member>
    <member name="T:Opc.URL">
      <summary>
            Contains information required to connect to the server.
            </summary>
    </member>
    <member name="P:Opc.URL.Scheme">
      <summary>
            The scheme (protocol) for the URL.
            </summary>
    </member>
    <member name="P:Opc.URL.HostName">
      <summary>
            The host name for the URL.
            </summary>
    </member>
    <member name="P:Opc.URL.Port">
      <summary>
            The port name for the URL (0 means default for protocol).
            </summary>
    </member>
    <member name="P:Opc.URL.Path">
      <summary>
            The path for the URL.
            </summary>
    </member>
    <member name="P:Opc.URL.UserInfo">
      <summary>
            The user info (user name and password) for the URL.
            </summary>
    </member>
    <member name="M:Opc.URL.#ctor">
      <summary>
            Initializes an empty instance.
            </summary>
    </member>
    <member name="M:Opc.URL.#ctor(System.String)">
      <summary>
            Initializes an instance by parsing a URL string.
            </summary>
    </member>
    <member name="M:Opc.URL.ToString">
      <summary>
            Returns a URL string for the object.
            </summary>
    </member>
    <member name="M:Opc.URL.Equals(System.Object)">
      <summary>
            Compares the object to either another URL object or a URL string.
            </summary>
    </member>
    <member name="M:Opc.URL.GetHashCode">
      <summary>
            Returns a hash code for the object.
            </summary>
    </member>
    <member name="M:Opc.URL.Clone">
      <summary>
            Returns a deep copy of the object.
            </summary>
    </member>
    <member name="T:Opc.UrlScheme">
      <summary>
            Defines string constants for well-known URL schemes.
            </summary>
    </member>
    <member name="F:Opc.UrlScheme.HTTP">
      <summary>
            XML Web Service.
            </summary>
    </member>
    <member name="F:Opc.UrlScheme.AE">
      <summary>
            OPC Alarms and Events
            </summary>
    </member>
    <member name="F:Opc.UrlScheme.BATCH">
      <summary>
            OPC Batch
            </summary>
    </member>
    <member name="F:Opc.UrlScheme.DA">
      <summary>
            OPC Data Access
            </summary>
    </member>
    <member name="F:Opc.UrlScheme.DX">
      <summary>
            OPC Data eXchange
            </summary>
    </member>
    <member name="F:Opc.UrlScheme.HDA">
      <summary>
            OPC Historical Data Access
            </summary>
    </member>
    <member name="F:Opc.UrlScheme.XMLDA">
      <summary>
            OPC XML Data Access over HTTP.
            </summary>
    </member>
    <member name="F:Opc.UrlScheme.UA_HTTP">
      <summary>
            OPC Unified Architecture over SOAP/HTTP
            </summary>
    </member>
    <member name="F:Opc.UrlScheme.UA_TCP">
      <summary>
            OPC Unified Architecture over SOAP/TCP
            </summary>
    </member>
    <member name="T:Opc.IServer">
      <summary>
            Defines functionality that is common to all OPC servers.
            </summary>
    </member>
    <member name="E:Opc.IServer.ServerShutdown">
      <summary>
            An event to receive server shutdown notifications.
            </summary>
    </member>
    <member name="M:Opc.IServer.GetLocale">
      <summary>
            The locale used in any error messages or results returned to the client.
            </summary>
      <returns>The locale name in the format "[languagecode]-[country/regioncode]".</returns>
    </member>
    <member name="M:Opc.IServer.SetLocale(System.String)">
      <summary>
            Sets the locale used in any error messages or results returned to the client.
            </summary>
      <param name="locale">The locale name in the format "[languagecode]-[country/regioncode]".</param>
      <returns>A locale that the server supports and is the best match for the requested locale.</returns>
    </member>
    <member name="M:Opc.IServer.GetSupportedLocales">
      <summary>
            Returns the locales supported by the server
            </summary>
      <remarks>The first element in the array must be the default locale for the server.</remarks>
      <returns>An array of locales with the format "[languagecode]-[country/regioncode]".</returns>
    </member>
    <member name="M:Opc.IServer.GetErrorText(System.String,Opc.ResultID)">
      <summary>
            Returns the localized text for the specified result code.
            </summary>
      <param name="locale">The locale name in the format "[languagecode]-[country/regioncode]".</param>
      <param name="resultID">The result code identifier.</param>
      <returns>A message localized for the best match for the requested locale.</returns>
    </member>
    <member name="T:Opc.IRequest">
      <summary>
            Maintains the state of an asynchronous request.
            </summary>
    </member>
    <member name="P:Opc.IRequest.Handle">
      <summary>
            An unique identifier, assigned by the client, for the request.
            </summary>
    </member>
    <member name="T:Opc.IBrowsePosition">
      <summary>
            Maintains the state of a browse operation
            </summary>
    </member>
    <member name="T:Opc.ServerShutdownEventHandler">
      <summary>
            A delegate to receive shutdown notifiations from the server.
            </summary>
    </member>
    <member name="T:Opc.ItemIdentifier">
      <summary>
            A unique item identifier.
            </summary>
    </member>
    <member name="P:Opc.ItemIdentifier.ItemName">
      <summary>
            The primary identifier for an item within the server namespace.
            </summary>
    </member>
    <member name="P:Opc.ItemIdentifier.ItemPath">
      <summary>
            An secondary identifier for an item within the server namespace.
            </summary>
    </member>
    <member name="P:Opc.ItemIdentifier.ClientHandle">
      <summary>
            A unique item identifier assigned by the client.
            </summary>
    </member>
    <member name="P:Opc.ItemIdentifier.ServerHandle">
      <summary>
            A unique item identifier assigned by the server.
            </summary>
    </member>
    <member name="P:Opc.ItemIdentifier.Key">
      <summary>
            Create a string that can be used as index in a hash table for the item.
            </summary>
    </member>
    <member name="M:Opc.ItemIdentifier.#ctor">
      <summary>
            Initializes the object with default values.
            </summary>
    </member>
    <member name="M:Opc.ItemIdentifier.#ctor(System.String)">
      <summary>
            Initializes the object with the specified item name.
            </summary>
    </member>
    <member name="M:Opc.ItemIdentifier.#ctor(System.String,System.String)">
      <summary>
            Initializes the object with the specified item path and item name.
            </summary>
    </member>
    <member name="M:Opc.ItemIdentifier.#ctor(Opc.ItemIdentifier)">
      <summary>
            Initializes the object with the specified item identifier.
            </summary>
    </member>
    <member name="M:Opc.ItemIdentifier.Clone">
      <summary>
            Creates a shallow copy of the object.
            </summary>
    </member>
    <member name="T:Opc.IResult">
      <summary>
            A interface used to access result information associated with a single item/value.
            </summary>
    </member>
    <member name="P:Opc.IResult.ResultID">
      <summary>
            The error id for the result of an operation on an item.
            </summary>
    </member>
    <member name="P:Opc.IResult.DiagnosticInfo">
      <summary>
            Vendor specific diagnostic information (not the localized error text).
            </summary>
    </member>
    <member name="T:Opc.IdentifiedResult">
      <summary>
            A result code associated with a unique item identifier.
            </summary>
    </member>
    <member name="M:Opc.IdentifiedResult.#ctor">
      <summary>
            Initialize object with default values.
            </summary>
    </member>
    <member name="M:Opc.IdentifiedResult.#ctor(Opc.ItemIdentifier)">
      <summary>
            Initialize object with the specified ItemIdentifier object.
            </summary>
    </member>
    <member name="M:Opc.IdentifiedResult.#ctor(Opc.IdentifiedResult)">
      <summary>
            Initialize object with the specified IdentifiedResult object.
            </summary>
    </member>
    <member name="M:Opc.IdentifiedResult.#ctor(System.String,Opc.ResultID)">
      <summary>
            Initializes the object with the specified item name and result code.
            </summary>
    </member>
    <member name="M:Opc.IdentifiedResult.#ctor(System.String,Opc.ResultID,System.String)">
      <summary>
            Initialize object with the specified item name, result code and diagnostic info.
            </summary>
    </member>
    <member name="M:Opc.IdentifiedResult.#ctor(Opc.ItemIdentifier,Opc.ResultID)">
      <summary>
            Initialize object with the specified ItemIdentifier and result code.
            </summary>
    </member>
    <member name="M:Opc.IdentifiedResult.#ctor(Opc.ItemIdentifier,Opc.ResultID,System.String)">
      <summary>
            Initialize object with the specified ItemIdentifier, result code and diagnostic info.
            </summary>
    </member>
    <member name="P:Opc.IdentifiedResult.ResultID">
      <summary>
            The error id for the result of an operation on an item.
            </summary>
    </member>
    <member name="P:Opc.IdentifiedResult.DiagnosticInfo">
      <summary>
            Vendor specific diagnostic information (not the localized error text).
            </summary>
    </member>
    <member name="T:Opc.ItemIdentifierCollection">
      <summary>
            A collection of item identifiers.
            </summary>
    </member>
    <member name="M:Opc.ItemIdentifierCollection.#ctor">
      <summary>
            Creates an empty collection.
            </summary>
    </member>
    <member name="M:Opc.ItemIdentifierCollection.#ctor(System.Collections.ICollection)">
      <summary>
            Initializes the object with any ItemIdentifiers contained in the collection.
            </summary>
      <param name="collection">A collection containing item ids.</param>
    </member>
    <member name="P:Opc.ItemIdentifierCollection.Item(System.Int32)">
      <summary>
            Returns the itemID at the specified index.
            </summary>
    </member>
    <member name="M:Opc.ItemIdentifierCollection.Init(System.Collections.ICollection)">
      <summary>
            Initializes the object with any item ids contained in the collection.
            </summary>
      <param name="collection">A collection containing item ids.</param>
    </member>
    <member name="M:Opc.ItemIdentifierCollection.Clear">
      <summary>
            Removes all itemIDs in the collection.
            </summary>
    </member>
    <member name="M:Opc.ItemIdentifierCollection.Clone">
      <summary>
            Creates a deep copy of the object.
            </summary>
    </member>
    <member name="P:Opc.ItemIdentifierCollection.IsSynchronized">
      <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
    </member>
    <member name="P:Opc.ItemIdentifierCollection.Count">
      <summary>
            Gets the number of objects in the collection.
            </summary>
    </member>
    <member name="M:Opc.ItemIdentifierCollection.CopyTo(System.Array,System.Int32)">
      <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
      <param name="array">The one-dimensional Array that is the destination for the objects.</param>
      <param name="index">The zero-based index in the Array at which copying begins.</param>
    </member>
    <member name="M:Opc.ItemIdentifierCollection.CopyTo(Opc.ItemIdentifier[],System.Int32)">
      <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
      <param name="array">The one-dimensional Array that is the destination for the objects.</param>
      <param name="index">The zero-based index in the Array at which copying begins.</param>
    </member>
    <member name="P:Opc.ItemIdentifierCollection.SyncRoot">
      <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
    </member>
    <member name="M:Opc.ItemIdentifierCollection.GetEnumerator">
      <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
      <returns>An IEnumerator that can be used to iterate through the collection.</returns>
    </member>
    <member name="T:Opc.IdentifiedResultCollection">
      <summary>
            A collection of identified results.
            </summary>
    </member>
    <member name="P:Opc.IdentifiedResultCollection.Item(System.Int32)">
      <summary>
            Returns the IdentifiedResult at the specified index.
            </summary>
    </member>
    <member name="M:Opc.IdentifiedResultCollection.#ctor">
      <summary>
            Creates an empty collection.
            </summary>
    </member>
    <member name="M:Opc.IdentifiedResultCollection.#ctor(System.Collections.ICollection)">
      <summary>
            Initializes the object with any IdentifiedResults contained in the collection.
            </summary>
      <param name="collection">A collection containing item ids.</param>
    </member>
    <member name="M:Opc.IdentifiedResultCollection.Init(System.Collections.ICollection)">
      <summary>
            Initializes the object with any item ids contained in the collection.
            </summary>
      <param name="collection">A collection containing item ids.</param>
    </member>
    <member name="M:Opc.IdentifiedResultCollection.Clear">
      <summary>
            Removes all itemIDs in the collection.
            </summary>
    </member>
    <member name="M:Opc.IdentifiedResultCollection.Clone">
      <summary>
            Creates a deep copy of the object.
            </summary>
    </member>
    <member name="P:Opc.IdentifiedResultCollection.IsSynchronized">
      <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
    </member>
    <member name="P:Opc.IdentifiedResultCollection.Count">
      <summary>
            Gets the number of objects in the collection.
            </summary>
    </member>
    <member name="M:Opc.IdentifiedResultCollection.CopyTo(System.Array,System.Int32)">
      <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
      <param name="array">The one-dimensional Array that is the destination for the objects.</param>
      <param name="index">The zero-based index in the Array at which copying begins.</param>
    </member>
    <member name="M:Opc.IdentifiedResultCollection.CopyTo(Opc.IdentifiedResult[],System.Int32)">
      <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
      <param name="array">The one-dimensional Array that is the destination for the objects.</param>
      <param name="index">The zero-based index in the Array at which copying begins.</param>
    </member>
    <member name="P:Opc.IdentifiedResultCollection.SyncRoot">
      <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
    </member>
    <member name="M:Opc.IdentifiedResultCollection.GetEnumerator">
      <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
      <returns>An IEnumerator that can be used to iterate through the collection.</returns>
    </member>
    <member name="T:Opc.Namespace">
      <summary>
            Declares constants for common XML Schema and OPC namespaces.
            </summary>
    </member>
    <member name="F:Opc.Namespace.XML_SCHEMA">
      <remarks />
    </member>
    <member name="F:Opc.Namespace.XML_SCHEMA_INSTANCE">
      <remarks />
    </member>
    <member name="F:Opc.Namespace.OPC">
      <remarks />
    </member>
    <member name="F:Opc.Namespace.OPC_SAMPLE">
      <remarks />
    </member>
    <member name="F:Opc.Namespace.OPC_ALARM_AND_EVENTS">
      <remarks />
    </member>
    <member name="F:Opc.Namespace.OPC_COMPLEX_DATA">
      <remarks />
    </member>
    <member name="F:Opc.Namespace.OPC_DATA_EXCHANGE">
      <remarks />
    </member>
    <member name="F:Opc.Namespace.OPC_DATA_ACCESS">
      <remarks />
    </member>
    <member name="F:Opc.Namespace.OPC_HISTORICAL_DATA_ACCESS">
      <remarks />
    </member>
    <member name="F:Opc.Namespace.OPC_DATA_ACCESS_XML10">
      <remarks />
    </member>
    <member name="F:Opc.Namespace.OPC_BINARY">
      <remarks />
    </member>
    <member name="F:Opc.Namespace.OPC_UA10">
      <remarks />
    </member>
    <member name="T:Opc.ResultID">
      <summary>
            Contains a unique identifier for a result code.
            </summary>
    </member>
    <member name="T:Opc.ResultID.Names">
      <summary>
            A set of names for fields used in serialization.
            </summary>
    </member>
    <member name="M:Opc.ResultID.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Contructs a server by de-serializing its URL from the stream.
            </summary>
    </member>
    <member name="M:Opc.ResultID.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Serializes a server into a stream.
            </summary>
    </member>
    <member name="P:Opc.ResultID.Name">
      <summary>
            Used for result codes identified by a qualified name.
            </summary>
    </member>
    <member name="P:Opc.ResultID.Code">
      <summary>
            Used for result codes identified by a integer.
            </summary>
    </member>
    <member name="M:Opc.ResultID.op_Equality(Opc.ResultID,Opc.ResultID)">
      <summary>
            Returns true if the objects are equal.
            </summary>
    </member>
    <member name="M:Opc.ResultID.op_Inequality(Opc.ResultID,Opc.ResultID)">
      <summary>
            Returns true if the objects are not equal.
            </summary>
    </member>
    <member name="M:Opc.ResultID.Succeeded">
      <summary>
            Checks for the 'S_' prefix that indicates a success condition.
            </summary>
    </member>
    <member name="M:Opc.ResultID.Failed">
      <summary>
            Checks for the 'E_' prefix that indicates an error condition.
            </summary>
    </member>
    <member name="M:Opc.ResultID.#ctor(System.Xml.XmlQualifiedName)">
      <summary>
            Initializes a result code identified by a qualified name.
            </summary>
    </member>
    <member name="M:Opc.ResultID.#ctor(System.Int64)">
      <summary>
            Initializes a result code identified by an integer.
            </summary>
    </member>
    <member name="M:Opc.ResultID.#ctor(System.String,System.String)">
      <summary>
            Initializes a result code identified by a qualified name.
            </summary>
    </member>
    <member name="M:Opc.ResultID.#ctor(Opc.ResultID,System.Int64)">
      <summary>
            Initializes a result code with a general result code and a specific result code.
            </summary>
    </member>
    <member name="M:Opc.ResultID.Equals(System.Object)">
      <summary>
            Returns true if the target object is equal to the object.
            </summary>
    </member>
    <member name="M:Opc.ResultID.ToString">
      <summary>
            Formats the result identifier as a string.
            </summary>
    </member>
    <member name="M:Opc.ResultID.GetHashCode">
      <summary>
            Returns a useful hash code for the object.
            </summary>
    </member>
    <member name="F:Opc.ResultID.S_OK">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.S_FALSE">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.E_FAIL">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.E_INVALIDARG">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.E_TIMEDOUT">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.E_OUTOFMEMORY">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.E_NETWORK_ERROR">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.E_ACCESS_DENIED">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.E_NOTSUPPORTED">
      <remarks />
    </member>
    <member name="T:Opc.ResultID.Da">
      <summary>
            Results codes for Data Access.
            </summary>
    </member>
    <member name="F:Opc.ResultID.Da.S_DATAQUEUEOVERFLOW">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Da.S_UNSUPPORTEDRATE">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Da.S_CLAMP">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Da.E_INVALIDHANDLE">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Da.E_UNKNOWN_ITEM_NAME">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Da.E_INVALID_ITEM_NAME">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Da.E_UNKNOWN_ITEM_PATH">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Da.E_INVALID_ITEM_PATH">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Da.E_INVALID_PID">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Da.E_READONLY">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Da.E_WRITEONLY">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Da.E_BADTYPE">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Da.E_RANGE">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Da.E_INVALID_FILTER">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Da.E_INVALIDCONTINUATIONPOINT">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Da.E_NO_WRITEQT">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Da.E_NO_ITEM_DEADBAND">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Da.E_NO_ITEM_SAMPLING">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Da.E_NO_ITEM_BUFFERING">
      <remarks />
    </member>
    <member name="T:Opc.ResultID.Cpx">
      <summary>
            Results codes for Complex Data.
            </summary>
    </member>
    <member name="F:Opc.ResultID.Cpx.E_TYPE_CHANGED">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Cpx.E_FILTER_DUPLICATE">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Cpx.E_FILTER_INVALID">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Cpx.E_FILTER_ERROR">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Cpx.S_FILTER_NO_DATA">
      <remarks />
    </member>
    <member name="T:Opc.ResultID.Hda">
      <summary>
            Results codes for Historical Data Access.
            </summary>
    </member>
    <member name="F:Opc.ResultID.Hda.E_MAXEXCEEDED">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Hda.S_NODATA">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Hda.S_MOREDATA">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Hda.E_INVALIDAGGREGATE">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Hda.S_CURRENTVALUE">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Hda.S_EXTRADATA">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Hda.W_NOFILTER">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Hda.E_UNKNOWNATTRID">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Hda.E_NOT_AVAIL">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Hda.E_INVALIDDATATYPE">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Hda.E_DATAEXISTS">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Hda.E_INVALIDATTRID">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Hda.E_NODATAEXISTS">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Hda.S_INSERTED">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Hda.S_REPLACED">
      <remarks />
    </member>
    <member name="T:Opc.ResultID.Dx">
      <summary>
            Results codes for Data eXchange.
            </summary>
    </member>
    <member name="F:Opc.ResultID.Dx.E_PERSISTING">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Dx.E_NOITEMLIST">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Dx.E_SERVER_STATE">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Dx.E_VERSION_MISMATCH">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Dx.E_UNKNOWN_ITEM_PATH">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Dx.E_UNKNOWN_ITEM_NAME">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Dx.E_INVALID_ITEM_PATH">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Dx.E_INVALID_ITEM_NAME">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Dx.E_INVALID_NAME">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Dx.E_DUPLICATE_NAME">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Dx.E_INVALID_BROWSE_PATH">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Dx.E_INVALID_SERVER_URL">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Dx.E_INVALID_SERVER_TYPE">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Dx.E_UNSUPPORTED_SERVER_TYPE">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Dx.E_CONNECTIONS_EXIST">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Dx.E_TOO_MANY_CONNECTIONS">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Dx.E_OVERRIDE_BADTYPE">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Dx.E_OVERRIDE_RANGE">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Dx.E_SUBSTITUTE_BADTYPE">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Dx.E_SUBSTITUTE_RANGE">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Dx.E_INVALID_TARGET_ITEM">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Dx.E_UNKNOWN_TARGET_ITEM">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Dx.E_TARGET_ALREADY_CONNECTED">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Dx.E_UNKNOWN_SERVER_NAME">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Dx.E_UNKNOWN_SOURCE_ITEM">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Dx.E_INVALID_SOURCE_ITEM">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Dx.E_INVALID_QUEUE_SIZE">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Dx.E_INVALID_DEADBAND">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Dx.E_INVALID_CONFIG_FILE">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Dx.E_PERSIST_FAILED">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Dx.E_TARGET_FAULT">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Dx.E_TARGET_NO_ACCESSS">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Dx.E_SOURCE_SERVER_FAULT">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Dx.E_SOURCE_SERVER_NO_ACCESSS">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Dx.E_SUBSCRIPTION_FAULT">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Dx.E_SOURCE_ITEM_BADRIGHTS">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Dx.E_SOURCE_ITEM_BAD_QUALITY">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Dx.E_SOURCE_ITEM_BADTYPE">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Dx.E_SOURCE_ITEM_RANGE">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Dx.E_SOURCE_SERVER_NOT_CONNECTED">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Dx.E_SOURCE_SERVER_TIMEOUT">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Dx.E_TARGET_ITEM_DISCONNECTED">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Dx.E_TARGET_NO_WRITES_ATTEMPTED">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Dx.E_TARGET_ITEM_BADTYPE">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Dx.E_TARGET_ITEM_RANGE">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Dx.S_TARGET_SUBSTITUTED">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Dx.S_TARGET_OVERRIDEN">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Dx.S_CLAMP">
      <remarks />
    </member>
    <member name="T:Opc.ResultID.Ae">
      <summary>
            Results codes for Alarms and Events
            </summary>
    </member>
    <member name="F:Opc.ResultID.Ae.S_ALREADYACKED">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Ae.S_INVALIDBUFFERTIME">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Ae.S_INVALIDMAXSIZE">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Ae.S_INVALIDKEEPALIVETIME">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Ae.E_INVALIDBRANCHNAME">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Ae.E_INVALIDTIME">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Ae.E_BUSY">
      <remarks />
    </member>
    <member name="F:Opc.ResultID.Ae.E_NOINFO">
      <remarks />
    </member>
    <member name="T:Opc.ResultIDException">
      <summary>
            Used to raise an exception with associated with a specified result code.
            </summary>
    </member>
    <member name="P:Opc.ResultIDException.Result">
      <remarks />
    </member>
    <member name="M:Opc.ResultIDException.#ctor(Opc.ResultID)">
      <remarks />
    </member>
    <member name="M:Opc.ResultIDException.#ctor(Opc.ResultID,System.String)">
      <remarks />
    </member>
    <member name="M:Opc.ResultIDException.#ctor(Opc.ResultID,System.String,System.Exception)">
      <remarks />
    </member>
    <member name="M:Opc.ResultIDException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <remarks />
    </member>
    <member name="F:Opc.ResultIDException.m_result">
      <remarks />
    </member>
    <member name="T:Opc.Server">
      <summary>
            A base class for an in-process object used to access OPC servers.
            </summary>
    </member>
    <member name="M:Opc.Server.#ctor(Opc.Factory,Opc.URL)">
      <summary>
            Initializes the object with a factory and a default URL.
            </summary>
      <param name="factory">The Opc.Factory used to connect to remote servers.</param>
      <param name="url">The network address of a remote server.</param>
    </member>
    <member name="M:Opc.Server.Finalize">
      <summary>
            The finalizer.
            </summary>
    </member>
    <member name="M:Opc.Server.Dispose">
      <summary>
            Releases unmanaged resources held by the object.
            </summary>
    </member>
    <member name="M:Opc.Server.Dispose(System.Boolean)">
      <summary>
            Releases unmanaged resources held by the object.
            </summary>
    </member>
    <member name="T:Opc.Server.Names">
      <summary>
            A set of names for fields used in serialization.
            </summary>
    </member>
    <member name="M:Opc.Server.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Contructs a server by de-serializing its URL from the stream.
            </summary>
    </member>
    <member name="M:Opc.Server.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Serializes a server into a stream.
            </summary>
    </member>
    <member name="M:Opc.Server.Clone">
      <summary>
            Returns an unconnected copy of the server with the same URL. 
            </summary>
    </member>
    <member name="P:Opc.Server.Name">
      <summary>
            A short descriptive name for the server assigned by the client.
            </summary>
    </member>
    <member name="P:Opc.Server.Url">
      <summary>
            The URL that describes the network location of the server.
            </summary>
    </member>
    <member name="P:Opc.Server.Locale">
      <summary>
            The default of locale used by the remote server.
            </summary>
    </member>
    <member name="P:Opc.Server.SupportedLocales">
      <summary>
            The set of locales supported by the remote server.
            </summary>
    </member>
    <member name="P:Opc.Server.IsConnected">
      <summary>
            Whether the remote server is currently connected.
            </summary>
    </member>
    <member name="M:Opc.Server.Connect">
      <summary>
            Establishes a physical connection to the remote server.
            </summary>
    </member>
    <member name="M:Opc.Server.Connect(Opc.ConnectData)">
      <summary>
            Establishes a physical connection to the remote server.
            </summary>
      <param name="connectData">Any protocol configuration or user authenication information.</param>
    </member>
    <member name="M:Opc.Server.Connect(Opc.URL,Opc.ConnectData)">
      <summary>
            Establishes a physical connection to the remote server identified by a URL.
            </summary>
      <param name="url">The network address of the remote server.</param>
      <param name="connectData">Any protocol configuration or user authenication information.</param>
    </member>
    <member name="M:Opc.Server.Disconnect">
      <summary>
            Disconnects from the server and releases all network resources.
            </summary>
    </member>
    <member name="M:Opc.Server.Duplicate">
      <summary>
            Creates a new instance of a server object with the same factory and url.
            </summary>
      <remarks>This method does not copy the value of any properties.</remarks>
      <returns>An unconnected duplicate instance of the server object.</returns>
    </member>
    <member name="E:Opc.Server.ServerShutdown">
      <summary>
            An event to receive server shutdown notifications.
            </summary>
    </member>
    <member name="M:Opc.Server.GetLocale">
      <summary>
            The locale used in any error messages or results returned to the client.
            </summary>
      <returns>The locale name in the format "[languagecode]-[country/regioncode]".</returns>
    </member>
    <member name="M:Opc.Server.SetLocale(System.String)">
      <summary>
            Sets the locale used in any error messages or results returned to the client.
            </summary>
      <param name="locale">The locale name in the format "[languagecode]-[country/regioncode]".</param>
      <returns>A locale that the server supports and is the best match for the requested locale.</returns>
    </member>
    <member name="M:Opc.Server.GetSupportedLocales">
      <summary>
            Returns the locales supported by the server
            </summary>
      <remarks>The first element in the array must be the default locale for the server.</remarks>
      <returns>An array of locales with the format "[languagecode]-[country/regioncode]".</returns>
    </member>
    <member name="M:Opc.Server.GetErrorText(System.String,Opc.ResultID)">
      <summary>
            Returns the localized text for the specified result code.
            </summary>
      <param name="locale">The locale name in the format "[languagecode]-[country/regioncode]".</param>
      <param name="resultID">The result code identifier.</param>
      <returns>A message localized for the best match for the requested locale.</returns>
    </member>
    <member name="M:Opc.Server.GetString(System.String)">
      <summary>
            Returns a localized string with the specified name.
            </summary>
    </member>
    <member name="M:Opc.Server.SetUrl(Opc.URL)">
      <summary>
            Updates the URL for the server.
            </summary>
    </member>
    <member name="M:Opc.Server.FindBestLocale(System.String,System.String[])">
      <summary>
            Finds the best matching locale given a set of supported locales.
            </summary>
    </member>
    <member name="F:Opc.Server.m_server">
      <summary>
            The remote server object.
            </summary>
    </member>
    <member name="F:Opc.Server.m_url">
      <summary>
            The URL that describes the network location of the server.
            </summary>
    </member>
    <member name="F:Opc.Server.m_factory">
      <summary>
            The factory used to instantiate the remote server.
            </summary>
    </member>
    <member name="F:Opc.Server.m_connectData">
      <summary>
            The last set of credentials used to connect successfully to the server.
            </summary>
    </member>
    <member name="F:Opc.Server.m_name">
      <summary>
            A short name for the server.
            </summary>
    </member>
    <member name="F:Opc.Server.m_locale">
      <summary>
            The default locale used by the server.
            </summary>
    </member>
    <member name="F:Opc.Server.m_supportedLocales">
      <summary>
            The set of locales supported by the remote server.
            </summary>
    </member>
    <member name="F:Opc.Server.m_resourceManager">
      <summary>
            The resource manager used to access localized resources.
            </summary>
    </member>
    <member name="T:Opc.ConnectAsyncDelegate">
      <summary>
            The asynchronous delegate for Connect.
            </summary>
    </member>
    <member name="T:Opc.DisconnectAsyncDelegate">
      <summary>
            The asynchronous delegate for Disconnect.
            </summary>
    </member>
    <member name="T:Opc.GetLocaleAsyncDelegate">
      <summary>
            The asynchronous delegate for GetLocale.
            </summary>
    </member>
    <member name="T:Opc.SetLocaleAsyncDelegate">
      <summary>
            The asynchronous delegate for SetLocale.
            </summary>
    </member>
    <member name="T:Opc.GetSupportedLocalesAsyncDelegate">
      <summary>
            The asynchronous delegate for GetSupportedLocales.
            </summary>
    </member>
    <member name="T:Opc.GetErrorTextAsyncDelegate">
      <summary>
            The asynchronous delegate for GetErrorText.
            </summary>
    </member>
    <member name="T:Opc.AlreadyConnectedException">
      <summary>
            Raised if an operation cannot be executed because the server is not connected.
            </summary>
    </member>
    <member name="M:Opc.AlreadyConnectedException.#ctor">
      <remarks />
    </member>
    <member name="M:Opc.AlreadyConnectedException.#ctor(System.String)">
      <remarks />
    </member>
    <member name="M:Opc.AlreadyConnectedException.#ctor(System.Exception)">
      <remarks />
    </member>
    <member name="M:Opc.AlreadyConnectedException.#ctor(System.String,System.Exception)">
      <remarks />
    </member>
    <member name="M:Opc.AlreadyConnectedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <remarks />
    </member>
    <member name="T:Opc.NotConnectedException">
      <summary>
            Raised if an operation cannot be executed because the server is not connected.
            </summary>
    </member>
    <member name="M:Opc.NotConnectedException.#ctor">
      <remarks />
    </member>
    <member name="M:Opc.NotConnectedException.#ctor(System.String)">
      <remarks />
    </member>
    <member name="M:Opc.NotConnectedException.#ctor(System.Exception)">
      <remarks />
    </member>
    <member name="M:Opc.NotConnectedException.#ctor(System.String,System.Exception)">
      <remarks />
    </member>
    <member name="M:Opc.NotConnectedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <remarks />
    </member>
    <member name="T:Opc.ConnectFailedException">
      <summary>
            Raised if an operation cannot be executed because the server is not reachable.
            </summary>
    </member>
    <member name="M:Opc.ConnectFailedException.#ctor">
      <remarks />
    </member>
    <member name="M:Opc.ConnectFailedException.#ctor(System.String)">
      <remarks />
    </member>
    <member name="M:Opc.ConnectFailedException.#ctor(System.Exception)">
      <remarks />
    </member>
    <member name="M:Opc.ConnectFailedException.#ctor(System.String,System.Exception)">
      <remarks />
    </member>
    <member name="M:Opc.ConnectFailedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <remarks />
    </member>
    <member name="T:Opc.AccessDeniedException">
      <summary>
            Raised if an operation cannot be executed because the server refuses access.
            </summary>
    </member>
    <member name="M:Opc.AccessDeniedException.#ctor">
      <remarks />
    </member>
    <member name="M:Opc.AccessDeniedException.#ctor(System.String)">
      <remarks />
    </member>
    <member name="M:Opc.AccessDeniedException.#ctor(System.Exception)">
      <remarks />
    </member>
    <member name="M:Opc.AccessDeniedException.#ctor(System.String,System.Exception)">
      <remarks />
    </member>
    <member name="M:Opc.AccessDeniedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <remarks />
    </member>
    <member name="T:Opc.ServerTimeoutException">
      <summary>
            Raised an remote operation by the server timed out
            </summary>
    </member>
    <member name="M:Opc.ServerTimeoutException.#ctor">
      <remarks />
    </member>
    <member name="M:Opc.ServerTimeoutException.#ctor(System.String)">
      <remarks />
    </member>
    <member name="M:Opc.ServerTimeoutException.#ctor(System.Exception)">
      <remarks />
    </member>
    <member name="M:Opc.ServerTimeoutException.#ctor(System.String,System.Exception)">
      <remarks />
    </member>
    <member name="M:Opc.ServerTimeoutException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <remarks />
    </member>
    <member name="T:Opc.InvalidResponseException">
      <summary>
            Raised an remote operation by the server returned unusable or invalid results.
            </summary>
    </member>
    <member name="M:Opc.InvalidResponseException.#ctor">
      <remarks />
    </member>
    <member name="M:Opc.InvalidResponseException.#ctor(System.String)">
      <remarks />
    </member>
    <member name="M:Opc.InvalidResponseException.#ctor(System.Exception)">
      <remarks />
    </member>
    <member name="M:Opc.InvalidResponseException.#ctor(System.String,System.Exception)">
      <remarks />
    </member>
    <member name="M:Opc.InvalidResponseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <remarks />
    </member>
    <member name="T:Opc.BrowseCannotContinueException">
      <summary>
            Raised if the browse position is not valid.
            </summary>
    </member>
    <member name="M:Opc.BrowseCannotContinueException.#ctor">
      <remarks />
    </member>
    <member name="M:Opc.BrowseCannotContinueException.#ctor(System.String)">
      <remarks />
    </member>
    <member name="M:Opc.BrowseCannotContinueException.#ctor(System.String,System.Exception)">
      <remarks />
    </member>
    <member name="M:Opc.BrowseCannotContinueException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <remarks />
    </member>
    <member name="T:Opc.Type">
      <summary>
            Defines constants for standard data types.
            </summary>
    </member>
    <member name="F:Opc.Type.SBYTE">
      <remarks />
    </member>
    <member name="F:Opc.Type.BYTE">
      <remarks />
    </member>
    <member name="F:Opc.Type.SHORT">
      <remarks />
    </member>
    <member name="F:Opc.Type.USHORT">
      <remarks />
    </member>
    <member name="F:Opc.Type.INT">
      <remarks />
    </member>
    <member name="F:Opc.Type.UINT">
      <remarks />
    </member>
    <member name="F:Opc.Type.LONG">
      <remarks />
    </member>
    <member name="F:Opc.Type.ULONG">
      <remarks />
    </member>
    <member name="F:Opc.Type.FLOAT">
      <remarks />
    </member>
    <member name="F:Opc.Type.DOUBLE">
      <remarks />
    </member>
    <member name="F:Opc.Type.DECIMAL">
      <remarks />
    </member>
    <member name="F:Opc.Type.BOOLEAN">
      <remarks />
    </member>
    <member name="F:Opc.Type.DATETIME">
      <remarks />
    </member>
    <member name="F:Opc.Type.DURATION">
      <remarks />
    </member>
    <member name="F:Opc.Type.STRING">
      <remarks />
    </member>
    <member name="F:Opc.Type.ANY_TYPE">
      <remarks />
    </member>
    <member name="F:Opc.Type.BINARY">
      <remarks />
    </member>
    <member name="F:Opc.Type.ARRAY_SHORT">
      <remarks />
    </member>
    <member name="F:Opc.Type.ARRAY_USHORT">
      <remarks />
    </member>
    <member name="F:Opc.Type.ARRAY_INT">
      <remarks />
    </member>
    <member name="F:Opc.Type.ARRAY_UINT">
      <remarks />
    </member>
    <member name="F:Opc.Type.ARRAY_LONG">
      <remarks />
    </member>
    <member name="F:Opc.Type.ARRAY_ULONG">
      <remarks />
    </member>
    <member name="F:Opc.Type.ARRAY_FLOAT">
      <remarks />
    </member>
    <member name="F:Opc.Type.ARRAY_DOUBLE">
      <remarks />
    </member>
    <member name="F:Opc.Type.ARRAY_DECIMAL">
      <remarks />
    </member>
    <member name="F:Opc.Type.ARRAY_BOOLEAN">
      <remarks />
    </member>
    <member name="F:Opc.Type.ARRAY_DATETIME">
      <remarks />
    </member>
    <member name="F:Opc.Type.ARRAY_STRING">
      <remarks />
    </member>
    <member name="F:Opc.Type.ARRAY_ANY_TYPE">
      <remarks />
    </member>
    <member name="F:Opc.Type.ILLEGAL_TYPE">
      <remarks />
    </member>
    <member name="M:Opc.Type.Enumerate">
      <summary>
            Returns an array of all well-known types.
            </summary>
    </member>
    <member name="T:OpcCom.Ae.Interop">
      <summary>
            Defines COM marshalling/unmarshalling functions for AE.
            </summary>
    </member>
    <member name="M:OpcCom.Ae.Interop.Convert(System.Runtime.InteropServices.ComTypes.FILETIME)">
      <summary>
            Converts a standard FILETIME to an OpcRcw.Ae.FILETIME structure.
            </summary>
    </member>
    <member name="M:OpcCom.Ae.Interop.Convert(OpcRcw.Ae.FILETIME)">
      <summary>
            Converts an OpcRcw.Ae.FILETIME to a standard FILETIME structure.
            </summary>
    </member>
    <member name="M:OpcCom.Ae.Interop.GetResultID(System.Int32)">
      <summary>
            Converts the HRESULT to a system type.
            </summary>
    </member>
    <member name="M:OpcCom.Ae.Interop.GetServerStatus(System.IntPtr@,System.Boolean)">
      <summary>
            Unmarshals and deallocates a OPCEVENTSERVERSTATUS structure.
            </summary>
    </member>
    <member name="M:OpcCom.Ae.Interop.GetBrowseType(Opc.Ae.BrowseType)">
      <summary>
            Converts a NodeType value to the OPCAEBROWSETYPE equivalent.
            </summary>
    </member>
    <member name="M:OpcCom.Ae.Interop.GetEventNotifications(OpcRcw.Ae.ONEVENTSTRUCT[])">
      <summary>
            Converts an array of ONEVENTSTRUCT structs to an array of EventNotification objects.
            </summary>
    </member>
    <member name="M:OpcCom.Ae.Interop.GetEventNotification(OpcRcw.Ae.ONEVENTSTRUCT)">
      <summary>
            Converts a ONEVENTSTRUCT struct to a EventNotification object.
            </summary>
    </member>
    <member name="M:OpcCom.Ae.Interop.GetConditions(System.IntPtr@,System.Int32,System.Boolean)">
      <summary>
            Converts an array of OpcRcw.Ae.OPCCONDITIONSTATE structs to an array of Opc.Ae.Condition objects.
            </summary>
    </member>
    <member name="T:OpcCom.Ae.ResultIDs">
      <summary>
            Defines all well known COM AE HRESULT codes.
            </summary>
    </member>
    <member name="F:OpcCom.Ae.ResultIDs.S_ALREADYACKED">
      <remarks />
    </member>
    <member name="F:OpcCom.Ae.ResultIDs.S_INVALIDBUFFERTIME">
      <remarks />
    </member>
    <member name="F:OpcCom.Ae.ResultIDs.S_INVALIDMAXSIZE">
      <remarks />
    </member>
    <member name="F:OpcCom.Ae.ResultIDs.S_INVALIDKEEPALIVETIME">
      <remarks />
    </member>
    <member name="F:OpcCom.Ae.ResultIDs.E_INVALIDBRANCHNAME">
      <remarks />
    </member>
    <member name="F:OpcCom.Ae.ResultIDs.E_INVALIDTIME">
      <remarks />
    </member>
    <member name="F:OpcCom.Ae.ResultIDs.E_BUSY">
      <remarks />
    </member>
    <member name="F:OpcCom.Ae.ResultIDs.E_NOINFO">
      <remarks />
    </member>
    <member name="T:OpcCom.Ae.Server">
      <summary>
            A .NET wrapper for a COM server that implements the AE server interfaces.
            </summary>
    </member>
    <member name="M:OpcCom.Ae.Server.#ctor(Opc.URL,System.Object)">
      <summary>
            Initializes the object with the specified URL and COM server.
            </summary>
    </member>
    <member name="M:OpcCom.Ae.Server.Dispose(System.Boolean)">
      <summary>
            Releases unmanaged resources held by the object.
            </summary>
    </member>
    <member name="M:OpcCom.Ae.Server.GetStatus">
      <summary>
            Returns the current server status.
            </summary>
      <returns>The current server status.</returns>
    </member>
    <member name="M:OpcCom.Ae.Server.CreateSubscription(Opc.Ae.SubscriptionState)">
      <summary>
            Creates a new event subscription.
            </summary>
      <param name="state">The initial state for the subscription.</param>
      <returns>The new subscription object.</returns>
    </member>
    <member name="M:OpcCom.Ae.Server.QueryAvailableFilters">
      <summary>
            Returns the event filters supported by the server.
            </summary>
      <returns>A bit mask of all event filters supported by the server.</returns>
    </member>
    <member name="M:OpcCom.Ae.Server.QueryEventCategories(System.Int32)">
      <summary>		
            Returns the event categories supported by the server for the specified event types.
            </summary>
      <param name="eventType">A bit mask for the event types of interest.</param>
      <returns>A collection of event categories.</returns>
    </member>
    <member name="M:OpcCom.Ae.Server.QueryConditionNames(System.Int32)">
      <summary>
            Returns the condition names supported by the server for the specified event categories.
            </summary>
      <param name="eventCategory">A bit mask for the event categories of interest.</param>
      <returns>A list of condition names.</returns>
    </member>
    <member name="M:OpcCom.Ae.Server.QuerySubConditionNames(System.String)">
      <summary>
            Returns the sub-condition names supported by the server for the specified event condition.
            </summary>
      <param name="conditionName">The name of the condition.</param>
      <returns>A list of sub-condition names.</returns>
    </member>
    <member name="M:OpcCom.Ae.Server.QueryConditionNames(System.String)">
      <summary>
            Returns the condition names supported by the server for the specified event source.
            </summary>
      <param name="sourceName">The name of the event source.</param>
      <returns>A list of condition names.</returns>
    </member>
    <member name="M:OpcCom.Ae.Server.QueryEventAttributes(System.Int32)">
      <summary>		
            Returns the event attributes supported by the server for the specified event categories.
            </summary>
      <param name="eventCategory">A bit mask for the event categories of interest.</param>
      <returns>A collection of event attributes.</returns>
    </member>
    <member name="M:OpcCom.Ae.Server.TranslateToItemIDs(System.String,System.Int32,System.String,System.String,System.Int32[])">
      <summary>
            Returns the DA item ids for a set of attribute ids belonging to events which meet the specified filter criteria.
            </summary>
      <param name="sourceName">The event source of interest.</param>
      <param name="eventCategory">The id of the event category for the events of interest.</param>
      <param name="conditionName">The name of a condition within the event category.</param>
      <param name="subConditionName">The name of a sub-condition within a multi-state condition.</param>
      <param name="attributeIDs">The ids of the attributes to return item ids for.</param>
      <returns>A list of item urls for each specified attribute.</returns>
    </member>
    <member name="M:OpcCom.Ae.Server.GetConditionState(System.String,System.String,System.Int32[])">
      <summary>
            Returns the current state information for the condition instance corresponding to the source and condition name.
            </summary>
      <param name="sourceName">The source name</param>
      <param name="conditionName">A condition name for the source.</param>
      <param name="attributeIDs">The list of attributes to return with the condition state.</param>
      <returns>The current state of the connection.</returns>
    </member>
    <member name="M:OpcCom.Ae.Server.EnableConditionByArea(System.String[])">
      <summary>
            Places the specified process areas into the enabled state.
            </summary>
      <param name="areas">A list of fully qualified area names.</param>
      <returns>The results of the operation for each area.</returns>
    </member>
    <member name="M:OpcCom.Ae.Server.DisableConditionByArea(System.String[])">
      <summary>
            Places the specified process areas into the disabled state.
            </summary>
      <param name="areas">A list of fully qualified area names.</param>
      <returns>The results of the operation for each area.</returns>
    </member>
    <member name="M:OpcCom.Ae.Server.EnableConditionBySource(System.String[])">
      <summary>
            Places the specified process areas into the enabled state.
            </summary>
      <param name="sources">A list of fully qualified source names.</param>
      <returns>The results of the operation for each area.</returns>
    </member>
    <member name="M:OpcCom.Ae.Server.DisableConditionBySource(System.String[])">
      <summary>
            Places the specified process areas into the disabled state.
            </summary>
      <param name="sources">A list of fully qualified source names.</param>
      <returns>The results of the operation for each area.</returns>
    </member>
    <member name="M:OpcCom.Ae.Server.GetEnableStateByArea(System.String[])">
      <summary>
            Returns the enabled state for the specified process areas. 
            </summary>
      <param name="areas">A list of fully qualified area names.</param>
    </member>
    <member name="M:OpcCom.Ae.Server.GetEnableStateBySource(System.String[])">
      <summary>
            Returns the enabled state for the specified event sources. 
            </summary>
      <param name="sources">A list of fully qualified source names.</param>
    </member>
    <member name="M:OpcCom.Ae.Server.AcknowledgeCondition(System.String,System.String,Opc.Ae.EventAcknowledgement[])">
      <summary>
            Used to acknowledge one or more conditions in the event server.
            </summary>
      <param name="acknowledgerID">The identifier for who is acknowledging the condition.</param>
      <param name="comment">A comment associated with the acknowledgment.</param>
      <param name="conditions">The conditions being acknowledged.</param>
      <returns>A list of result id indictaing whether each condition was successfully acknowledged.</returns>
    </member>
    <member name="M:OpcCom.Ae.Server.Browse(System.String,Opc.Ae.BrowseType,System.String)">
      <summary>
            Browses for all children of the specified area that meet the filter criteria.
            </summary>
      <param name="areaID">The full-qualified id for the area.</param>
      <param name="browseType">The type of children to return.</param>
      <param name="browseFilter">The expression used to filter the names of children returned.</param>
      <returns>The set of elements that meet the filter criteria.</returns>
    </member>
    <member name="M:OpcCom.Ae.Server.Browse(System.String,Opc.Ae.BrowseType,System.String,System.Int32,Opc.IBrowsePosition@)">
      <summary>
            Browses for all children of the specified area that meet the filter criteria.
            </summary>
      <param name="areaID">The full-qualified id for the area.</param>
      <param name="browseType">The type of children to return.</param>
      <param name="browseFilter">The expression used to filter the names of children returned.</param>
      <param name="maxElements">The maximum number of elements to return.</param>
      <param name="position">The object used to continue the browse if the number nodes exceeds the maximum specified.</param>
      <returns>The set of elements that meet the filter criteria.</returns>
    </member>
    <member name="M:OpcCom.Ae.Server.BrowseNext(System.Int32,Opc.IBrowsePosition@)">
      <summary>
            Continues browsing the server's address space at the specified position.
            </summary>
      <param name="maxElements">The maximum number of elements to return.</param>
      <param name="position">The position object used to continue a browse operation.</param>
      <returns>The set of elements that meet the filter criteria.</returns>
    </member>
    <member name="M:OpcCom.Ae.Server.InitializeBrowser">
      <summary>
            Creates an area browser object for use by all browse requests.
            </summary>
    </member>
    <member name="M:OpcCom.Ae.Server.ChangeBrowsePosition(System.String)">
      <summary>
            Moves the browse position prior to executing a browse operation.
            </summary>
    </member>
    <member name="M:OpcCom.Ae.Server.CreateEnumerator(Opc.Ae.BrowseType,System.String)">
      <summary>
            Creates an enumerator for the names at the current position.
            </summary>
    </member>
    <member name="M:OpcCom.Ae.Server.GetQualifiedName(System.String,Opc.Ae.BrowseType)">
      <summary>
            Returns the qualified name for the node at the current position.
            </summary>
    </member>
    <member name="M:OpcCom.Ae.Server.FetchElements(Opc.Ae.BrowseType,System.Int32,System.Runtime.InteropServices.UCOMIEnumString,System.Collections.ArrayList)">
      <summary>
            Fetches up to max elements and returns an flag indicating whether there are any elements left.
            </summary>
    </member>
    <member name="T:OpcCom.Ae.BrowsePosition">
      <summary>
            Stores the state of a browse operation.
            </summary>
    </member>
    <member name="M:OpcCom.Ae.BrowsePosition.#ctor(System.String,Opc.Ae.BrowseType,System.String,System.Runtime.InteropServices.UCOMIEnumString)">
      <summary>
            Saves the parameters for an incomplete browse information.
            </summary>
    </member>
    <member name="M:OpcCom.Ae.BrowsePosition.Dispose(System.Boolean)">
      <summary>
            Releases unmanaged resources held by the object.
            </summary>
    </member>
    <member name="P:OpcCom.Ae.BrowsePosition.Enumerator">
      <summary>
            Returns the enumerator stored in the object.
            </summary>
    </member>
    <member name="T:OpcCom.Ae.Subscription">
      <summary>
            A .NET wrapper for a COM server that implements the AE subscription interfaces.
            </summary>
    </member>
    <member name="M:OpcCom.Ae.Subscription.#ctor(Opc.Ae.SubscriptionState,System.Object)">
      <summary>
            Initializes the object with the specified URL and COM server.
            </summary>
    </member>
    <member name="M:OpcCom.Ae.Subscription.Finalize">
      <summary>
            The finalizer.
            </summary>
    </member>
    <member name="M:OpcCom.Ae.Subscription.Dispose">
      <summary>
            Releases unmanaged resources held by the object.
            </summary>
    </member>
    <member name="M:OpcCom.Ae.Subscription.Dispose(System.Boolean)">
      <summary>
            Releases unmanaged resources held by the object.
            </summary>
    </member>
    <member name="E:OpcCom.Ae.Subscription.EventChanged">
      <summary>
            An event to receive data change updates.
            </summary>
    </member>
    <member name="M:OpcCom.Ae.Subscription.GetState">
      <summary>
            Returns the current state of the subscription.
            </summary>
      <returns>The current state of the subscription.</returns>
    </member>
    <member name="M:OpcCom.Ae.Subscription.ModifyState(System.Int32,Opc.Ae.SubscriptionState)">
      <summary>
            Changes the state of a subscription.
            </summary>
      <param name="masks">A bit mask that indicates which elements of the subscription state are changing.</param>
      <param name="state">The new subscription state.</param>
      <returns>The actual subscption state after applying the changes.</returns>
    </member>
    <member name="M:OpcCom.Ae.Subscription.GetFilters">
      <summary>
            Returns the current filters for the subscription.
            </summary>
      <returns>The current filters for the subscription.</returns>
    </member>
    <member name="M:OpcCom.Ae.Subscription.SetFilters(Opc.Ae.SubscriptionFilters)">
      <summary>
            Sets the current filters for the subscription.
            </summary>
      <param name="filters">The new filters to use for the subscription.</param>
    </member>
    <member name="M:OpcCom.Ae.Subscription.GetReturnedAttributes(System.Int32)">
      <summary>
            Returns the set of attributes to return with event notifications.
            </summary>
      <returns>The set of attributes to returned with event notifications.</returns>
    </member>
    <member name="M:OpcCom.Ae.Subscription.SelectReturnedAttributes(System.Int32,System.Int32[])">
      <summary>
            Selects the set of attributes to return with event notifications.
            </summary>
      <param name="eventCategory">The specific event category for which the attributes apply.</param>
      <param name="attributeIDs">The list of attribute ids to return.</param>
    </member>
    <member name="M:OpcCom.Ae.Subscription.Refresh">
      <summary>
            Force a refresh for all active conditions and inactive, unacknowledged conditions whose event notifications match the filter of the event subscription.
            </summary>
    </member>
    <member name="M:OpcCom.Ae.Subscription.CancelRefresh">
      <summary>
            Cancels an outstanding refresh request.
            </summary>
    </member>
    <member name="T:OpcCom.Ae.Subscription.Callback">
      <summary>
            A class that implements the IOPCEventSink interface.
            </summary>
    </member>
    <member name="M:OpcCom.Ae.Subscription.Callback.#ctor(System.Object)">
      <summary>
            Initializes the object with the containing subscription object.
            </summary>
    </member>
    <member name="E:OpcCom.Ae.Subscription.Callback.EventChanged">
      <summary>
            Raised when data changed callbacks arrive.
            </summary>
    </member>
    <member name="M:OpcCom.Ae.Subscription.Callback.OnEvent(System.Int32,System.Int32,System.Int32,System.Int32,OpcRcw.Ae.ONEVENTSTRUCT[])">
      <summary>
            Called when a data changed event is received.
            </summary>
    </member>
    <member name="M:OpcCom.Ae.Subscription.Advise">
      <summary>
            Establishes a connection point callback with the COM server.
            </summary>
    </member>
    <member name="M:OpcCom.Ae.Subscription.Unadvise">
      <summary>
            Closes a connection point callback with the COM server.
            </summary>
    </member>
    <member name="T:OpcCom.Da10.Server">
      <summary>
            An in-process wrapper for a remote OPC Data Access 1.0 server.
            </summary>
    </member>
    <member name="M:OpcCom.Da10.Server.#ctor">
      <summary>
            The default constructor for the object.
            </summary>
    </member>
    <member name="M:OpcCom.Da10.Server.#ctor(Opc.URL,System.Object)">
      <summary>
            Initializes the object with the specifed COM server.
            </summary>
    </member>
    <member name="M:OpcCom.Da10.Server.Dispose(System.Boolean)">
      <summary>
            Releases unmanaged resources held by the object.
            </summary>
    </member>
    <member name="M:OpcCom.Da10.Server.Initialize(Opc.URL,Opc.ConnectData)">
      <summary>
            Connects to the server with the specified URL and credentials.
            </summary>
    </member>
    <member name="F:OpcCom.Da10.Server.m_group">
      <summary>
            A global group used for various item level operations. 
            </summary>
    </member>
    <member name="F:OpcCom.Da10.Server.m_groupHandle">
      <summary>
            The server handle for the global group.
            </summary>
    </member>
    <member name="F:OpcCom.Da10.Server.m_separators">
      <summary>
            A list of seperators used in the browse paths.
            </summary>
    </member>
    <member name="M:OpcCom.Da10.Server.Read(Opc.Da.Item[])">
      <summary>
            Reads the values for the specified items.
            </summary>
    </member>
    <member name="M:OpcCom.Da10.Server.Write(Opc.Da.ItemValue[])">
      <summary>
            Write the values for the specified items.
            </summary>
    </member>
    <member name="M:OpcCom.Da10.Server.Browse(Opc.ItemIdentifier,Opc.Da.BrowseFilters,Opc.Da.BrowsePosition@)">
      <summary>
            Fetches child elements of the specified branch which match the filter criteria.
            </summary>
    </member>
    <member name="M:OpcCom.Da10.Server.BrowseNext(Opc.Da.BrowsePosition@)">
      <summary>
            Continues a browse operation with previously specified search criteria.
            </summary>
    </member>
    <member name="M:OpcCom.Da10.Server.GetProperties(Opc.ItemIdentifier[],Opc.Da.PropertyID[],System.Boolean)">
      <summary>
            Returns the specified properties for a set of items.
            </summary>
    </member>
    <member name="M:OpcCom.Da10.Server.AddItems(Opc.Da.Item[])">
      <summary>
            Adds a set of temporary items used for a read/write operation.
            </summary>
    </member>
    <member name="M:OpcCom.Da10.Server.RemoveItems(Opc.IdentifiedResult[])">
      <summary>
            Removes a set of temporary items used for a read/write operation.
            </summary>
    </member>
    <member name="M:OpcCom.Da10.Server.ReadValues(Opc.Da.Item[],Opc.Da.ItemValueResult[],System.Boolean)">
      <summary>
            Reads a set of values.
            </summary>
    </member>
    <member name="M:OpcCom.Da10.Server.GetAvailableProperties(System.String)">
      <summary>
            Returns the set of available properties for the item.
            </summary>
    </member>
    <member name="M:OpcCom.Da10.Server.GetItemIDs(System.String,Opc.Da.ItemProperty[])">
      <summary>
            Fetches the property item id for the specified set of properties.
            </summary>
    </member>
    <member name="M:OpcCom.Da10.Server.GetValues(System.String,Opc.Da.ItemProperty[])">
      <summary>
            Fetches the property values for the specified set of properties.
            </summary>
    </member>
    <member name="M:OpcCom.Da10.Server.GetProperties(System.String,Opc.Da.PropertyID[],System.Boolean)">
      <summary>
            Gets the specified properties for the specified item.
            </summary>
    </member>
    <member name="M:OpcCom.Da10.Server.GetEnumerator(System.String,System.Collections.Generic.IEnumerable{System.String},Opc.Da.BrowseFilters,System.Boolean,System.Boolean)">
      <summary>
            Returns an enumerator for the children of the specified branch.
            </summary>
    </member>
    <member name="M:OpcCom.Da10.Server.DetectAndSaveSeparators(System.String,System.String)">
      <summary>
            Detects the separators used in the item id.
            </summary>
    </member>
    <member name="M:OpcCom.Da10.Server.GetElement(Opc.ItemIdentifier,System.String,Opc.Da.BrowseFilters,System.Boolean)">
      <summary>
            Reads a single value from the enumerator and returns a browse element.
            </summary>
    </member>
    <member name="M:OpcCom.Da10.Server.GetElements(System.Int32,Opc.ItemIdentifier,Opc.Da.BrowseFilters,System.Boolean,OpcCom.Da20.BrowsePosition@)">
      <summary>
            Returns a list of child elements that meet the filter criteria.
            </summary>
    </member>
    <member name="M:OpcCom.Da10.Server.CreateSubscription(System.Object,Opc.Da.SubscriptionState,System.Int32)">
      <summary>
            Creates a new instance of a subscription.
            </summary>
    </member>
    <member name="T:OpcCom.Da10.Subscription">
      <summary>
            An in-process wrapper for a remote OPC Data Access 1.0 group.
            </summary>
      <remarks>See list of methods and its implementations for DA1.0, DA2.0 or DA3.0 at the end of file.</remarks>
    </member>
    <member name="M:OpcCom.Da10.Subscription.#ctor(System.Object,Opc.Da.SubscriptionState,System.Int32)">
      <summary>
            Initializes a new instance of a subscription.
            </summary>
    </member>
    <member name="M:OpcCom.Da10.Subscription.Cancel(Opc.IRequest,Opc.Da.CancelCompleteEventHandler)">
      <summary>
            Cancels an asynchronous read or write operation.
            </summary>
      <param name="request">The object returned from the BeginRead or BeginWrite request.</param>
      <param name="callback">The function to invoke when the cancel completes.</param>
    </member>
    <member name="M:OpcCom.Da10.Subscription.Refresh">
      <summary>
            Tells the server to send an data change update for all subscription items containing the cached values. 
            </summary>
    </member>
    <member name="M:OpcCom.Da10.Subscription.SetEnabled(System.Boolean)">
      <summary>
            Sets whether data change callbacks are enabled.
            </summary>
    </member>
    <member name="M:OpcCom.Da10.Subscription.GetEnabled">
      <summary>
            Gets whether data change callbacks are enabled.
            </summary>
    </member>
    <member name="M:OpcCom.Da10.Subscription.Read(Opc.ItemIdentifier[],Opc.Da.Item[])">
      <summary>
            Reads a set of items using DA1.0 interfaces.
            </summary>
    </member>
    <member name="M:OpcCom.Da10.Subscription.Read(Opc.Da.ItemValueResult[],System.Boolean)">
      <summary>
            Reads a set of values.
            </summary>
    </member>
    <member name="M:OpcCom.Da10.Subscription.Write(Opc.ItemIdentifier[],Opc.Da.ItemValue[])">
      <summary>
            Writes a set of items using DA1.0 interfaces.
            </summary>
    </member>
    <member name="M:OpcCom.Da10.Subscription.BeginRead(Opc.ItemIdentifier[],Opc.Da.Item[],System.Int32,System.Int32@)">
      <summary>
            Begins an asynchronous read of a set of items using DA1.0 interfaces.
            </summary>
    </member>
    <member name="M:OpcCom.Da10.Subscription.BeginWrite(Opc.ItemIdentifier[],Opc.Da.ItemValue[],System.Int32,System.Int32@)">
      <summary>
            Begins an asynchronous write for a set of items using DA1.0 interfaces.
            </summary>
    </member>
    <member name="T:OpcCom.Da20.Server">
      <summary>
            An in-process wrapper for a remote OPC Data Access 2.0X server.
            </summary>
    </member>
    <member name="M:OpcCom.Da20.Server.#ctor">
      <summary>
            The default constructor for the object.
            </summary>
    </member>
    <member name="M:OpcCom.Da20.Server.#ctor(Opc.URL,System.Object)">
      <summary>
            Initializes the object with the specifed COM server.
            </summary>
    </member>
    <member name="M:OpcCom.Da20.Server.Dispose(System.Boolean)">
      <summary>
            Releases unmanaged resources held by the object.
            </summary>
    </member>
    <member name="M:OpcCom.Da20.Server.Initialize(Opc.URL,Opc.ConnectData)">
      <summary>
            Connects to the server with the specified URL and credentials.
            </summary>
    </member>
    <member name="F:OpcCom.Da20.Server.m_group">
      <summary>
            A global group used for various item level operations. 
            </summary>
    </member>
    <member name="F:OpcCom.Da20.Server.m_groupHandle">
      <summary>
            The server handle for the global group.
            </summary>
    </member>
    <member name="F:OpcCom.Da20.Server.m_separators">
      <summary>
            A list of seperators used in the browse paths.
            </summary>
    </member>
    <member name="M:OpcCom.Da20.Server.Read(Opc.Da.Item[])">
      <summary>
            Reads the values for the specified items.
            </summary>
    </member>
    <member name="M:OpcCom.Da20.Server.Write(Opc.Da.ItemValue[])">
      <summary>
            Write the values for the specified items.
            </summary>
    </member>
    <member name="M:OpcCom.Da20.Server.Browse(Opc.ItemIdentifier,Opc.Da.BrowseFilters,Opc.Da.BrowsePosition@)">
      <summary>
            Fetches child elements of the specified branch which match the filter criteria.
            </summary>
    </member>
    <member name="M:OpcCom.Da20.Server.BrowseNext(Opc.Da.BrowsePosition@)">
      <summary>
            Continues a browse operation with previously specified search criteria.
            </summary>
    </member>
    <member name="M:OpcCom.Da20.Server.GetProperties(Opc.ItemIdentifier[],Opc.Da.PropertyID[],System.Boolean)">
      <summary>
            Returns the specified properties for a set of items.
            </summary>
    </member>
    <member name="M:OpcCom.Da20.Server.AddItems(Opc.Da.Item[])">
      <summary>
            Adds a set of temporary items used for a read/write operation.
            </summary>
    </member>
    <member name="M:OpcCom.Da20.Server.RemoveItems(Opc.IdentifiedResult[])">
      <summary>
            Removes a set of temporary items used for a read/write operation.
            </summary>
    </member>
    <member name="M:OpcCom.Da20.Server.ReadValues(Opc.Da.Item[],Opc.Da.ItemValueResult[],System.Boolean)">
      <summary>
            Reads a set of values.
            </summary>
    </member>
    <member name="M:OpcCom.Da20.Server.GetAvailableProperties(System.String)">
      <summary>
            Returns the set of available properties for the item.
            </summary>
    </member>
    <member name="M:OpcCom.Da20.Server.GetItemIDs(System.String,Opc.Da.ItemProperty[])">
      <summary>
            Fetches the property item id for the specified set of properties.
            </summary>
    </member>
    <member name="M:OpcCom.Da20.Server.GetValues(System.String,Opc.Da.ItemProperty[])">
      <summary>
            Fetches the property values for the specified set of properties.
            </summary>
    </member>
    <member name="M:OpcCom.Da20.Server.GetProperties(System.String,Opc.Da.PropertyID[],System.Boolean)">
      <summary>
            Gets the specified properties for the specified item.
            </summary>
    </member>
    <member name="M:OpcCom.Da20.Server.GetEnumerator(System.String,System.Collections.Generic.IEnumerable{System.String},Opc.Da.BrowseFilters,System.Boolean,System.Boolean)">
      <summary>
            Returns an enumerator for the children of the specified branch.
            </summary>
    </member>
    <member name="M:OpcCom.Da20.Server.DetectAndSaveSeparators(System.String,System.String)">
      <summary>
            Detects the separators used in the item id.
            </summary>
    </member>
    <member name="M:OpcCom.Da20.Server.GetElement(Opc.ItemIdentifier,System.String,Opc.Da.BrowseFilters,System.Boolean)">
      <summary>
            Reads a single value from the enumerator and returns a browse element.
            </summary>
    </member>
    <member name="M:OpcCom.Da20.Server.GetElements(System.Int32,Opc.ItemIdentifier,Opc.Da.BrowseFilters,System.Boolean,OpcCom.Da20.BrowsePosition@)">
      <summary>
            Returns a list of child elements that meet the filter criteria.
            </summary>
    </member>
    <member name="M:OpcCom.Da20.Server.CreateSubscription(System.Object,Opc.Da.SubscriptionState,System.Int32)">
      <summary>
            Creates a new instance of a subscription.
            </summary>
    </member>
    <member name="T:OpcCom.Da20.BrowsePosition">
      <summary>
            Implements an object that handles multi-step browse operations for DA2.05 servers.
            </summary>
    </member>
    <member name="F:OpcCom.Da20.BrowsePosition.Enumerator">
      <summary>
            The enumerator for a browse operation.
            </summary>
    </member>
    <member name="F:OpcCom.Da20.BrowsePosition.IsBranch">
      <summary>
            Whether the current enumerator returns branches or leaves.
            </summary>
    </member>
    <member name="F:OpcCom.Da20.BrowsePosition.Names">
      <summary>
            The pre-fetched set of names.
            </summary>
    </member>
    <member name="F:OpcCom.Da20.BrowsePosition.Index">
      <summary>
            The current index in the pre-fetched names.
            </summary>
    </member>
    <member name="M:OpcCom.Da20.BrowsePosition.#ctor(Opc.ItemIdentifier,Opc.Da.BrowseFilters,OpcCom.EnumString,System.Boolean)">
      <summary>
            Initializes a browse position 
            </summary>
    </member>
    <member name="M:OpcCom.Da20.BrowsePosition.Dispose(System.Boolean)">
      <summary>
            Releases unmanaged resources held by the object.
            </summary>
    </member>
    <member name="M:OpcCom.Da20.BrowsePosition.Clone">
      <summary>
            Creates a deep copy of the object.
            </summary>
    </member>
    <member name="T:OpcCom.Da20.Subscription">
      <summary>
            An in-process wrapper for a remote OPC Data Access 2.0X group.
            </summary>
    </member>
    <member name="M:OpcCom.Da20.Subscription.#ctor(System.Object,Opc.Da.SubscriptionState,System.Int32)">
      <summary>
            Initializes a new instance of a subscription.
            </summary>
    </member>
    <member name="M:OpcCom.Da20.Subscription.Refresh">
      <summary>
            Tells the server to send an data change update for all subscription items containing the cached values. 
            </summary>
    </member>
    <member name="M:OpcCom.Da20.Subscription.SetEnabled(System.Boolean)">
      <summary>
            Sets whether data change callbacks are enabled.
            </summary>
    </member>
    <member name="M:OpcCom.Da20.Subscription.GetEnabled">
      <summary>
            Gets whether data change callbacks are enabled.
            </summary>
    </member>
    <member name="M:OpcCom.Da20.Subscription.Read(Opc.ItemIdentifier[],Opc.Da.Item[])">
      <summary>
            Reads a set of items using DA2.0 interfaces.
            </summary>
    </member>
    <member name="M:OpcCom.Da20.Subscription.Read(Opc.Da.ItemValueResult[],System.Boolean)">
      <summary>
            Reads a set of values.
            </summary>
    </member>
    <member name="M:OpcCom.Da20.Subscription.Write(Opc.ItemIdentifier[],Opc.Da.ItemValue[])">
      <summary>
            Writes a set of items using DA2.0 interfaces.
            </summary>
    </member>
    <member name="M:OpcCom.Da20.Subscription.BeginRead(Opc.ItemIdentifier[],Opc.Da.Item[],System.Int32,System.Int32@)">
      <summary>
            Begins an asynchronous read of a set of items using DA2.0 interfaces.
            </summary>
    </member>
    <member name="M:OpcCom.Da20.Subscription.BeginWrite(Opc.ItemIdentifier[],Opc.Da.ItemValue[],System.Int32,System.Int32@)">
      <summary>
            Begins an asynchronous write for a set of items using DA2.0 interfaces.
            </summary>
    </member>
    <member name="T:OpcCom.Da.BrowsePosition">
      <summary>
            Implements an object that handles multi-step browse operations.
            </summary>
    </member>
    <member name="F:OpcCom.Da.BrowsePosition.ContinuationPoint">
      <summary>
            The continuation point for a browse operation.
            </summary>
    </member>
    <member name="F:OpcCom.Da.BrowsePosition.MoreElements">
      <summary>
            Indicates that elements that meet the filter criteria have not been returned.
            </summary>
    </member>
    <member name="M:OpcCom.Da.BrowsePosition.#ctor(Opc.ItemIdentifier,Opc.Da.BrowseFilters,System.String)">
      <summary>
            Initializes a browse position 
            </summary>
    </member>
    <member name="T:OpcCom.Da.Interop">
      <summary>
            Contains state information for a single asynchronous OpcCom.Da.Interop.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Interop.Convert(System.Runtime.InteropServices.ComTypes.FILETIME)">
      <summary>
            Converts a standard FILETIME to an OpcRcw.Da.FILETIME structure.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Interop.Convert(OpcRcw.Da.FILETIME)">
      <summary>
            Converts an OpcRcw.Da.FILETIME to a standard FILETIME structure.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Interop.GetServerStatus(Opc.Da.ServerStatus,System.Int32)">
      <summary>
            Allocates and marshals a OPCSERVERSTATUS structure.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Interop.GetServerStatus(System.IntPtr@,System.Boolean)">
      <summary>
            Unmarshals and deallocates a OPCSERVERSTATUS structure.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Interop.GetBrowseFilter(Opc.Da.browseFilter)">
      <summary>
            Converts a browseFilter values to the COM equivalent.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Interop.GetBrowseFilter(OpcRcw.Da.OPCBROWSEFILTER)">
      <summary>
            Converts a browseFilter values from the COM equivalent.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Interop.GetHRESULTs(Opc.IResult[])">
      <summary>
            Allocates and marshals an array of HRESULT codes.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Interop.GetBrowseElements(System.IntPtr@,System.Int32,System.Boolean)">
      <summary>
            Unmarshals and deallocates an array of OPCBROWSEELEMENT structures.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Interop.GetBrowseElements(Opc.Da.BrowseElement[],System.Boolean)">
      <summary>
            Allocates and marshals an array of OPCBROWSEELEMENT structures.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Interop.GetBrowseElement(System.IntPtr,System.Boolean)">
      <summary>
            Unmarshals and deallocates a OPCBROWSEELEMENT structures.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Interop.GetBrowseElement(Opc.Da.BrowseElement,System.Boolean)">
      <summary>
            Allocates and marshals an OPCBROWSEELEMENT structure.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Interop.GetPropertyIDs(Opc.Da.PropertyID[])">
      <summary>
            Creates an array of property codes.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Interop.GetPropertyIDs(System.Int32[])">
      <summary>
            Creates an array of property codes.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Interop.GetItemPropertyCollections(System.IntPtr@,System.Int32,System.Boolean)">
      <summary>
            Unmarshals and deallocates an array of OPCITEMPROPERTIES structures.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Interop.GetItemPropertyCollections(Opc.Da.ItemPropertyCollection[])">
      <summary>
            Allocates and marshals an array of OPCITEMPROPERTIES structures.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Interop.GetItemProperties(OpcRcw.Da.OPCITEMPROPERTIES@,System.Boolean)">
      <summary>
            Unmarshals and deallocates a OPCITEMPROPERTIES structures.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Interop.GetItemProperties(Opc.Da.ItemProperty[])">
      <summary>
            Allocates and marshals an array of OPCITEMPROPERTIES structures.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Interop.GetItemProperty(System.IntPtr,System.Boolean)">
      <summary>
            Unmarshals and deallocates a OPCITEMPROPERTY structures.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Interop.GetItemProperty(Opc.Da.ItemProperty)">
      <summary>
            Allocates and marshals an arary of OPCITEMPROPERTY structures.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Interop.GetPropertyID(System.Int32)">
      <remarks />
    </member>
    <member name="M:OpcCom.Da.Interop.UnmarshalPropertyValue(Opc.Da.PropertyID,System.Object)">
      <summary>
            Converts the property value to a type supported by the unified interface.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Interop.MarshalPropertyValue(Opc.Da.PropertyID,System.Object)">
      <summary>
            Converts the property value to a type supported by COM-DA interface.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Interop.GetOPCITEMVQTs(Opc.Da.ItemValue[])">
      <summary>
            Converts an array of item values to an array of OPCITEMVQT objects.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Interop.GetOPCITEMDEFs(Opc.Da.Item[])">
      <summary>
            Converts an array of item objects to an array of GetOPCITEMDEF objects.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Interop.GetItemValues(System.IntPtr@,System.Int32,System.Boolean)">
      <summary>
            Unmarshals and deallocates a OPCITEMSTATE structures.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Interop.GetItemResults(System.IntPtr@,System.Int32,System.Boolean)">
      <summary>
            Unmarshals and deallocates a OPCITEMRESULT structures.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Interop.GetItemStates(Opc.Da.ItemValueResult[])">
      <summary>
            Allocates and marshals an array of OPCBROWSEELEMENT structures.
            </summary>
    </member>
    <member name="T:OpcCom.Da.ResultIDs">
      <summary>
            Defines all well known COM DA HRESULT codes.
            </summary>
    </member>
    <member name="F:OpcCom.Da.ResultIDs.S_OK">
      <remarks />
    </member>
    <member name="F:OpcCom.Da.ResultIDs.S_FALSE">
      <remarks />
    </member>
    <member name="F:OpcCom.Da.ResultIDs.E_NOTIMPL">
      <remarks />
    </member>
    <member name="F:OpcCom.Da.ResultIDs.E_OUTOFMEMORY">
      <remarks />
    </member>
    <member name="F:OpcCom.Da.ResultIDs.E_INVALIDARG">
      <remarks />
    </member>
    <member name="F:OpcCom.Da.ResultIDs.E_NOINTERFACE">
      <remarks />
    </member>
    <member name="F:OpcCom.Da.ResultIDs.E_POINTER">
      <remarks />
    </member>
    <member name="F:OpcCom.Da.ResultIDs.E_FAIL">
      <remarks />
    </member>
    <member name="F:OpcCom.Da.ResultIDs.CONNECT_E_NOCONNECTION">
      <remarks />
    </member>
    <member name="F:OpcCom.Da.ResultIDs.CONNECT_E_ADVISELIMIT">
      <remarks />
    </member>
    <member name="F:OpcCom.Da.ResultIDs.DISP_E_TYPEMISMATCH">
      <remarks />
    </member>
    <member name="F:OpcCom.Da.ResultIDs.DISP_E_OVERFLOW">
      <remarks />
    </member>
    <member name="F:OpcCom.Da.ResultIDs.E_INVALIDHANDLE">
      <remarks />
    </member>
    <member name="F:OpcCom.Da.ResultIDs.E_BADTYPE">
      <remarks />
    </member>
    <member name="F:OpcCom.Da.ResultIDs.E_PUBLIC">
      <remarks />
    </member>
    <member name="F:OpcCom.Da.ResultIDs.E_BADRIGHTS">
      <remarks />
    </member>
    <member name="F:OpcCom.Da.ResultIDs.E_UNKNOWNITEMID">
      <remarks />
    </member>
    <member name="F:OpcCom.Da.ResultIDs.E_INVALIDITEMID">
      <remarks />
    </member>
    <member name="F:OpcCom.Da.ResultIDs.E_INVALIDFILTER">
      <remarks />
    </member>
    <member name="F:OpcCom.Da.ResultIDs.E_UNKNOWNPATH">
      <remarks />
    </member>
    <member name="F:OpcCom.Da.ResultIDs.E_RANGE">
      <remarks />
    </member>
    <member name="F:OpcCom.Da.ResultIDs.E_DUPLICATENAME">
      <remarks />
    </member>
    <member name="F:OpcCom.Da.ResultIDs.S_UNSUPPORTEDRATE">
      <remarks />
    </member>
    <member name="F:OpcCom.Da.ResultIDs.S_CLAMP">
      <remarks />
    </member>
    <member name="F:OpcCom.Da.ResultIDs.S_INUSE">
      <remarks />
    </member>
    <member name="F:OpcCom.Da.ResultIDs.E_INVALIDCONFIGFILE">
      <remarks />
    </member>
    <member name="F:OpcCom.Da.ResultIDs.E_NOTFOUND">
      <remarks />
    </member>
    <member name="F:OpcCom.Da.ResultIDs.E_INVALID_PID">
      <remarks />
    </member>
    <member name="F:OpcCom.Da.ResultIDs.E_DEADBANDNOTSET">
      <remarks />
    </member>
    <member name="F:OpcCom.Da.ResultIDs.E_DEADBANDNOTSUPPORTED">
      <remarks />
    </member>
    <member name="F:OpcCom.Da.ResultIDs.E_NOBUFFERING">
      <remarks />
    </member>
    <member name="F:OpcCom.Da.ResultIDs.E_INVALIDCONTINUATIONPOINT">
      <remarks />
    </member>
    <member name="F:OpcCom.Da.ResultIDs.S_DATAQUEUEOVERFLOW">
      <remarks />
    </member>
    <member name="F:OpcCom.Da.ResultIDs.E_RATENOTSET">
      <remarks />
    </member>
    <member name="F:OpcCom.Da.ResultIDs.E_NOTSUPPORTED">
      <remarks />
    </member>
    <member name="T:OpcCom.Da.Server">
      <summary>
            A .NET wrapper for a COM server that implements the DA server interfaces.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Server.#ctor">
      <summary>
            Initializes the object.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Server.#ctor(Opc.URL,System.Object)">
      <summary>
            Initializes the object with the specifed COM server.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Server.Dispose(System.Boolean)">
      <summary>
            Releases unmanaged resources held by the object.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Server.GetErrorText(System.String,Opc.ResultID)">
      <summary>
            Returns the localized text for the specified result code.
            </summary>
      <param name="locale">The locale name in the format "[languagecode]-[country/regioncode]".</param>
      <param name="resultID">The result code identifier.</param>
      <returns>A message localized for the best match for the requested locale.</returns>
    </member>
    <member name="M:OpcCom.Da.Server.GetResultFilters">
      <summary>
            Returns the filters applied by the server to any item results returned to the client.
            </summary>
      <returns>A bit mask indicating which fields should be returned in any item results.</returns>
    </member>
    <member name="M:OpcCom.Da.Server.SetResultFilters(System.Int32)">
      <summary>
            Sets the filters applied by the server to any item results returned to the client.
            </summary>
      <param name="filters">A bit mask indicating which fields should be returned in any item results.</param>
    </member>
    <member name="M:OpcCom.Da.Server.GetStatus">
      <summary>
            Returns the current server status.
            </summary>
      <returns>The current server status.</returns>
    </member>
    <member name="M:OpcCom.Da.Server.Read(Opc.Da.Item[])">
      <summary>
            Reads the current values for a set of items. 
            </summary>
      <param name="items">The set of items to read.</param>
      <returns>The results of the read operation for each item.</returns>
    </member>
    <member name="M:OpcCom.Da.Server.Write(Opc.Da.ItemValue[])">
      <summary>
            Writes the value, quality and timestamp for a set of items.
            </summary>
      <param name="items">The set of item values to write.</param>
      <returns>The results of the write operation for each item.</returns>
    </member>
    <member name="M:OpcCom.Da.Server.CreateSubscription(Opc.Da.SubscriptionState)">
      <summary>
            Creates a new subscription.
            </summary>
      <param name="state">The initial state of the subscription.</param>
      <returns>The new subscription object.</returns>
    </member>
    <member name="M:OpcCom.Da.Server.CancelSubscription(Opc.Da.ISubscription)">
      <summary>
            Cancels a subscription and releases all resources allocated for it.
            </summary>
      <param name="subscription">The subscription to cancel.</param>
    </member>
    <member name="M:OpcCom.Da.Server.Browse(Opc.ItemIdentifier,Opc.Da.BrowseFilters,Opc.Da.BrowsePosition@)">
      <summary>
            Fetches the children of a branch that meet the filter criteria.
            </summary>
      <param name="itemID">The identifier of branch which is the target of the search.</param>
      <param name="filters">The filters to use to limit the set of child elements returned.</param>
      <param name="position">An object used to continue a browse that could not be completed.</param>
      <returns>The set of elements found.</returns>
    </member>
    <member name="M:OpcCom.Da.Server.BrowseNext(Opc.Da.BrowsePosition@)">
      <summary>
            Continues a browse operation with previously specified search criteria.
            </summary>
      <param name="position">An object containing the browse operation state information.</param>
      <returns>The set of elements found.</returns>
    </member>
    <member name="M:OpcCom.Da.Server.GetProperties(Opc.ItemIdentifier[],Opc.Da.PropertyID[],System.Boolean)">
      <summary>
            Returns the item properties for a set of items.
            </summary>
      <param name="itemIDs">A list of item identifiers.</param>
      <param name="propertyIDs">A list of properties to fetch for each item.</param>
      <param name="returnValues">Whether the property values should be returned with the properties.</param>
      <returns>A list of properties for each item.</returns>
    </member>
    <member name="M:OpcCom.Da.Server.BrowseAccessPath(Opc.ItemIdentifier)">
      <summary>
            Provides a way to browse the available AccessPath for an item.
            </summary>
      <param name="itemID">The identifier for which the access paths will be browsed.</param>
      <returns>An array of possible access paths to the item.</returns>
    </member>
    <member name="M:OpcCom.Da.Server.ChangeType(System.Object,System.Type,System.String)">
      <summary>
            Converts a value to the specified type using the specified locale.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Server.CreateSubscription(System.Object,Opc.Da.SubscriptionState,System.Int32)">
      <summary>
            Creates a new instance of a subscription.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Server.ProcessResults(Opc.Da.BrowseElement[],Opc.Da.PropertyID[])">
      <summary>
            Updates the properties to convert COM values to OPC .NET API results.
            </summary>
    </member>
    <member name="F:OpcCom.Da.Server.m_filters">
      <summary>
            The default result filters for the server.
            </summary>
    </member>
    <member name="F:OpcCom.Da.Server.m_subscriptions">
      <summary>
            A table of active subscriptions for the server.
            </summary>
    </member>
    <member name="T:OpcCom.Da.Subscription">
      <summary>
            A .NET wrapper for a COM server that implements the DA group interfaces.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Subscription.#ctor(System.Object,Opc.Da.SubscriptionState,System.Int32)">
      <summary>
            Initializes a new instance of a subscription.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Subscription.Finalize">
      <summary>
            The finalizer.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Subscription.Dispose">
      <summary>
            Releases unmanaged resources held by the object.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Subscription.Dispose(System.Boolean)">
      <summary>
            Releases unmanaged resources held by the object.
            </summary>
    </member>
    <member name="F:OpcCom.Da.Subscription.m_group">
      <summary>
            The COM server for the group object.
            </summary>
    </member>
    <member name="F:OpcCom.Da.Subscription.m_connection">
      <summary>
            A connect point with the COM server.
            </summary>
    </member>
    <member name="F:OpcCom.Da.Subscription.m_callback">
      <summary>
            The internal object that implements the IOPCDataCallback interface.
            </summary>
    </member>
    <member name="F:OpcCom.Da.Subscription.m_name">
      <summary>
            The name of the group on the server.
            </summary>
    </member>
    <member name="F:OpcCom.Da.Subscription.m_handle">
      <summary>
            A handle assigned by the client for the subscription.
            </summary>
    </member>
    <member name="F:OpcCom.Da.Subscription.m_filters">
      <summary>
            The default result filters for the subscription.
            </summary>
    </member>
    <member name="F:OpcCom.Da.Subscription.m_items">
      <summary>
            A table of all item identifers which are indexed by internal handle.
            </summary>
    </member>
    <member name="F:OpcCom.Da.Subscription.m_counter">
      <summary>
            A counter used to assign unique internal client handles.
            </summary>
    </member>
    <member name="E:OpcCom.Da.Subscription.DataChanged">
      <summary>
            An event to receive data change updates.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Subscription.GetResultFilters">
      <summary>
            Returns the filters applied by the server to any item results returned to the client.
            </summary>
      <returns>A bit mask indicating which fields should be returned in any item results.</returns>
    </member>
    <member name="M:OpcCom.Da.Subscription.SetResultFilters(System.Int32)">
      <summary>
            Sets the filters applied by the server to any item results returned to the client.
            </summary>
      <param name="filters">A bit mask indicating which fields should be returned in any item results.</param>
    </member>
    <member name="M:OpcCom.Da.Subscription.GetState">
      <summary>
            Returns the current state of the subscription.
            </summary>
      <returns>The current state of the subscription.</returns>
    </member>
    <member name="M:OpcCom.Da.Subscription.ModifyState(System.Int32,Opc.Da.SubscriptionState)">
      <summary>
            Changes the state of a subscription.
            </summary>
      <param name="masks">A bit mask that indicates which elements of the subscription state are changing.</param>
      <param name="state">The new subscription state.</param>
      <returns>The actual subscption state after applying the changes.</returns>
    </member>
    <member name="M:OpcCom.Da.Subscription.AddItems(Opc.Da.Item[])">
      <summary>
            Adds items to the subscription.
            </summary>
      <param name="items">The set of items to add to the subscription.</param>
      <returns>The results of the add item operation for each item.</returns>
    </member>
    <member name="M:OpcCom.Da.Subscription.ModifyItems(System.Int32,Opc.Da.Item[])">
      <summary>
            Modifies the state of items in the subscription
            </summary>
      <param name="masks">Specifies which item state parameters are being modified.</param>
      <param name="items">The new state for each item.</param>
      <returns>The results of the modify item operation for each item.</returns>
    </member>
    <member name="M:OpcCom.Da.Subscription.RemoveItems(Opc.ItemIdentifier[])">
      <summary>
            Removes items from the subscription.
            </summary>
      <param name="items">The identifiers (i.e. server handles) for the items being removed.</param>
      <returns>The results of the remove item operation for each item.</returns>
    </member>
    <member name="M:OpcCom.Da.Subscription.Read(Opc.Da.Item[])">
      <summary>
            Reads the values for a set of items in the subscription.
            </summary>
      <param name="items">The identifiers (i.e. server handles) for the items being read.</param>
      <returns>The value for each of items.</returns>
    </member>
    <member name="M:OpcCom.Da.Subscription.Write(Opc.Da.ItemValue[])">
      <summary>
            Writes the value, quality and timestamp for a set of items in the subscription.
            </summary>
      <param name="items">The item values to write.</param>
      <returns>The results of the write operation for each item.</returns>
    </member>
    <member name="M:OpcCom.Da.Subscription.Read(Opc.Da.Item[],System.Object,Opc.Da.ReadCompleteEventHandler,Opc.IRequest@)">
      <summary>
            Begins an asynchronous read operation for a set of items.
            </summary>
      <param name="items">The set of items to read (must include the server handle).</param>
      <param name="requestHandle">An identifier for the request assigned by the caller.</param>
      <param name="callback">A delegate used to receive notifications when the request completes.</param>
      <param name="request">An object that contains the state of the request (used to cancel the request).</param>
      <returns>A set of results containing any errors encountered when the server validated the items.</returns>
    </member>
    <member name="M:OpcCom.Da.Subscription.Write(Opc.Da.ItemValue[],System.Object,Opc.Da.WriteCompleteEventHandler,Opc.IRequest@)">
      <summary>
            Begins an asynchronous write operation for a set of items.
            </summary>
      <param name="items">The set of item values to write (must include the server handle).</param>
      <param name="requestHandle">An identifier for the request assigned by the caller.</param>
      <param name="callback">A delegate used to receive notifications when the request completes.</param>
      <param name="request">An object that contains the state of the request (used to cancel the request).</param>
      <returns>A set of results containing any errors encountered when the server validated the items.</returns>
    </member>
    <member name="M:OpcCom.Da.Subscription.Cancel(Opc.IRequest,Opc.Da.CancelCompleteEventHandler)">
      <summary>
            Cancels an asynchronous read or write operation.
            </summary>
      <param name="request">The object returned from the BeginRead or BeginWrite request.</param>
      <param name="callback">The function to invoke when the cancel completes.</param>
    </member>
    <member name="M:OpcCom.Da.Subscription.Refresh">
      <summary>
            Causes the server to send a data changed notification for all active items. 
            </summary>
    </member>
    <member name="M:OpcCom.Da.Subscription.Refresh(System.Object,Opc.IRequest@)">
      <summary>
            Causes the server to send a data changed notification for all active items. 
            </summary>
      <param name="requestHandle">An identifier for the request assigned by the caller.</param>
      <param name="request">An object that contains the state of the request (used to cancel the request).</param>
      <returns>A set of results containing any errors encountered when the server validated the items.</returns>
    </member>
    <member name="M:OpcCom.Da.Subscription.SetEnabled(System.Boolean)">
      <summary>
            Enables or disables data change notifications from the server.
            </summary>
      <param name="enabled">Whether data change notifications are enabled.</param>
    </member>
    <member name="M:OpcCom.Da.Subscription.GetEnabled">
      <summary>
            Checks whether data change notifications from the server are enabled.
            </summary>
      <returns>Whether data change notifications are enabled.</returns>
    </member>
    <member name="M:OpcCom.Da.Subscription.Read(Opc.ItemIdentifier[],Opc.Da.Item[])">
      <summary>
            Reads a set of items using DA3.0 interfaces.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Subscription.Write(Opc.ItemIdentifier[],Opc.Da.ItemValue[])">
      <summary>
            Writes a set of items using DA3.0 interfaces.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Subscription.BeginRead(Opc.ItemIdentifier[],Opc.Da.Item[],System.Int32,System.Int32@)">
      <summary>
            Begins an asynchronous read of a set of items using DA3.0 interfaces.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Subscription.BeginWrite(Opc.ItemIdentifier[],Opc.Da.ItemValue[],System.Int32,System.Int32@)">
      <summary>
            Begins an asynchronous write for a set of items using DA3.0 interfaces.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Subscription.SetReqTypes(Opc.Da.ItemResult[])">
      <summary>
            Sets the requested data type for the specified items.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Subscription.SetActive(Opc.Da.ItemResult[],System.Boolean)">
      <summary>
            Sets the active state for the specified items.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Subscription.UpdateActive(Opc.Da.ItemResult[])">
      <summary>
            Update the active state for the specified items.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Subscription.SetDeadbands(Opc.Da.ItemResult[])">
      <summary>
            Sets the deadbands for the specified items.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Subscription.ClearDeadbands(Opc.Da.ItemResult[])">
      <summary>
            Clears the deadbands for the specified items.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Subscription.UpdateDeadbands(Opc.Da.ItemResult[],System.Boolean)">
      <summary>
            Update the deadbands for the specified items.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Subscription.SetSamplingRates(Opc.Da.ItemResult[])">
      <summary>
            Sets the sampling rates for the specified items.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Subscription.ClearSamplingRates(Opc.Da.ItemResult[])">
      <summary>
            Clears the sampling rates for the specified items.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Subscription.UpdateSamplingRates(Opc.Da.ItemResult[],System.Boolean)">
      <summary>
            Update the sampling rates for the specified items.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Subscription.SetEnableBuffering(Opc.Da.ItemResult[])">
      <summary>
            Sets the enable buffering flags.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Subscription.Advise">
      <summary>
            Establishes a connection point callback with the COM server.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Subscription.Unadvise">
      <summary>
            Closes a connection point callback with the COM server.
            </summary>
    </member>
    <member name="T:OpcCom.Da.Subscription.ItemTable">
      <summary>
            A table of item identifiers indexed by internal handle.
            </summary>
    </member>
    <member name="P:OpcCom.Da.Subscription.ItemTable.Item(System.Object)">
      <summary>
            Looks up an item identifier for the specified internal handle.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Subscription.ItemTable.GetInvalidHandle">
      <summary>
            Returns a server handle that must be treated as invalid by the server,
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:OpcCom.Da.Subscription.ItemTable.GetItemIDs(Opc.ItemIdentifier[])">
      <summary>
            Copies a set of items an substitutes the client and server handles for use by the server.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Subscription.ItemTable.CreateItems(Opc.Da.Item[])">
      <summary>
            Creates a item result list from a set of items and sets the handles for use by the server.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Subscription.ItemTable.ApplyFilters(System.Int32,Opc.ItemIdentifier[])">
      <summary>
            Updates a result list based on the request options and sets the handles for use by the client.
            </summary>
    </member>
    <member name="F:OpcCom.Da.Subscription.ItemTable.m_items">
      <summary>
            The table of known item identifiers.
            </summary>
    </member>
    <member name="T:OpcCom.Da.Subscription.Callback">
      <summary>
            A class that implements the IOPCDataCallback interface.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Subscription.Callback.#ctor(System.Object,System.Int32,OpcCom.Da.Subscription.ItemTable)">
      <summary>
            Initializes the object with the containing subscription object.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Subscription.Callback.SetFilters(System.Object,System.Int32)">
      <summary>
            Updates the result filters and subscription handle.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Subscription.Callback.BeginRequest(OpcCom.Da.Request)">
      <summary>
            Adds an asynchrounous request.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Subscription.Callback.CancelRequest(OpcCom.Da.Request)">
      <summary>
            Returns true is an asynchrounous request can be cancelled.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Subscription.Callback.EndRequest(OpcCom.Da.Request)">
      <summary>
            Remvoes an asynchrounous request.
            </summary>
    </member>
    <member name="F:OpcCom.Da.Subscription.Callback.m_handle">
      <summary>
            The handle to return with any callbacks. 
            </summary>
    </member>
    <member name="F:OpcCom.Da.Subscription.Callback.m_filters">
      <summary>
            The current request options for the subscription.
            </summary>
    </member>
    <member name="F:OpcCom.Da.Subscription.Callback.m_items">
      <summary>
            A table of item identifiers indexed by internal handle.
            </summary>
    </member>
    <member name="F:OpcCom.Da.Subscription.Callback.m_requests">
      <summary>
            A table of autstanding asynchronous requests.
            </summary>
    </member>
    <member name="E:OpcCom.Da.Subscription.Callback.DataChanged">
      <summary>
            Raised when data changed callbacks arrive.
            </summary>
    </member>
    <member name="E:OpcCom.Da.Subscription.Callback.m_dataChanged">
      <remarks />
    </member>
    <member name="M:OpcCom.Da.Subscription.Callback.OnDataChange(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32[],System.Object[],System.Int16[],OpcRcw.Da.FILETIME[],System.Int32[])">
      <summary>
            Called when a data changed event is received.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Subscription.Callback.UnmarshalValues(System.Int32,System.Int32[],System.Object[],System.Int16[],OpcRcw.Da.FILETIME[],System.Int32[])">
      <summary>
            Creates an array of item value result objects from the callback data.
            </summary>
    </member>
    <member name="T:OpcCom.Da.Request">
      <summary>
            Contains the state of an asynchronous request to a COM server.
            </summary>
    </member>
    <member name="F:OpcCom.Da.Request.RequestID">
      <summary>
            The unique id assigned by the subscription.
            </summary>
    </member>
    <member name="F:OpcCom.Da.Request.CancelID">
      <summary>
            The unique id assigned by the server.
            </summary>
    </member>
    <member name="F:OpcCom.Da.Request.Callback">
      <summary>
            The callback used when the request completes.
            </summary>
    </member>
    <member name="F:OpcCom.Da.Request.Filters">
      <summary>
            The result filters to use for the request.
            </summary>
    </member>
    <member name="F:OpcCom.Da.Request.InitialResults">
      <summary>
            The set of initial results.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Request.#ctor(Opc.Da.ISubscription,System.Object,System.Int32,System.Int32,System.Delegate)">
      <summary>
            Initializes the object with a subscription and a unique id.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Request.BeginRead(System.Int32,Opc.IdentifiedResult[])">
      <summary>
            Begins a read request by storing the initial results.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Request.BeginWrite(System.Int32,Opc.IdentifiedResult[])">
      <summary>
            Begins a write request by storing the initial results.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Request.BeginRefresh(System.Int32)">
      <summary>
            Begins a refersh request by saving the cancel id.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Request.EndRequest">
      <summary>
            Completes a read request by processing the values and invoking the callback.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Request.EndRequest(Opc.Da.ItemValueResult[])">
      <summary>
            Completes a read request by processing the values and invoking the callback.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Request.EndRequest(Opc.IdentifiedResult[])">
      <summary>
            Completes a write request by processing the values and invoking the callback.
            </summary>
    </member>
    <member name="T:OpcCom.Da.Wrapper.Server">
      <summary>
            A class that implements the COM-DA interfaces.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Wrapper.Server.#ctor">
      <summary>
            Initializes the object with the default values.
            </summary>
    </member>
    <member name="P:OpcCom.Da.Wrapper.Server.IServer">
      <summary>
            The data access server object that is being wrapped and exposed via COM.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Wrapper.Server.SetGroupName(System.String,System.String)">
      <summary>
            Changes the name of an existing group.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Wrapper.Server.CreateException(System.Exception)">
      <summary>
            Converts an exception to an exception that returns a COM error code.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Wrapper.Server.CreateException(System.Int32)">
      <summary>
            Creates an exception from a COM error code.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Wrapper.Server.CreateGroup(Opc.Da.SubscriptionState@,System.Int32,System.Int32)">
      <summary>
            Creates a new group.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Wrapper.Server.Load(System.Guid)">
      <summary>
            Called when the object is loaded by the COM wrapper process.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Wrapper.Server.Unload">
      <summary>
            Called when the object is unloaded by the COM wrapper process.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Wrapper.Server.SetLocaleID(System.Int32)">
      <remarks />
    </member>
    <member name="M:OpcCom.Da.Wrapper.Server.QueryAvailableLocaleIDs(System.Int32@,System.IntPtr@)">
      <remarks />
    </member>
    <member name="M:OpcCom.Da.Wrapper.Server.GetLocaleID(System.Int32@)">
      <remarks />
    </member>
    <member name="M:OpcCom.Da.Wrapper.Server.OpcRcw#Comn#IOPCCommon#GetErrorString(System.Int32,System.String@)">
      <remarks />
    </member>
    <member name="M:OpcCom.Da.Wrapper.Server.SetClientName(System.String)">
      <remarks />
    </member>
    <member name="M:OpcCom.Da.Wrapper.Server.GetGroupByName(System.String,System.Guid@,System.Object@)">
      <remarks />
    </member>
    <member name="M:OpcCom.Da.Wrapper.Server.GetErrorString(System.Int32,System.Int32,System.String@)">
      <remarks />
    </member>
    <member name="M:OpcCom.Da.Wrapper.Server.RemoveGroup(System.Int32,System.Int32)">
      <remarks />
    </member>
    <member name="M:OpcCom.Da.Wrapper.Server.CreateGroupEnumerator(OpcRcw.Da.OPCENUMSCOPE,System.Guid@,System.Object@)">
      <remarks />
    </member>
    <member name="M:OpcCom.Da.Wrapper.Server.AddGroup(System.String,System.Int32,System.Int32,System.Int32,System.IntPtr,System.IntPtr,System.Int32,System.Int32@,System.Int32@,System.Guid@,System.Object@)">
      <remarks />
    </member>
    <member name="M:OpcCom.Da.Wrapper.Server.GetStatus(System.IntPtr@)">
      <remarks />
    </member>
    <member name="M:OpcCom.Da.Wrapper.Server.Browse(System.String,System.IntPtr@,System.Int32,OpcRcw.Da.OPCBROWSEFILTER,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32[],System.Int32@,System.Int32@,System.IntPtr@)">
      <remarks />
    </member>
    <member name="M:OpcCom.Da.Wrapper.Server.GetProperties(System.Int32,System.String[],System.Int32,System.Int32,System.Int32[],System.IntPtr@)">
      <remarks />
    </member>
    <member name="M:OpcCom.Da.Wrapper.Server.GetItemID(System.String,System.String@)">
      <remarks />
    </member>
    <member name="M:OpcCom.Da.Wrapper.Server.BrowseAccessPaths(System.String,OpcRcw.Comn.IEnumString@)">
      <remarks />
    </member>
    <member name="M:OpcCom.Da.Wrapper.Server.QueryOrganization(OpcRcw.Da.OPCNAMESPACETYPE@)">
      <remarks />
    </member>
    <member name="M:OpcCom.Da.Wrapper.Server.ChangeBrowsePosition(OpcRcw.Da.OPCBROWSEDIRECTION,System.String)">
      <remarks />
    </member>
    <member name="M:OpcCom.Da.Wrapper.Server.BrowseOPCItemIDs(OpcRcw.Da.OPCBROWSETYPE,System.String,System.Int16,System.Int32,OpcRcw.Comn.IEnumString@)">
      <remarks />
    </member>
    <member name="M:OpcCom.Da.Wrapper.Server.LookupItemIDs(System.String,System.Int32,System.Int32[],System.IntPtr@,System.IntPtr@)">
      <remarks />
    </member>
    <member name="M:OpcCom.Da.Wrapper.Server.QueryAvailableProperties(System.String,System.Int32@,System.IntPtr@,System.IntPtr@,System.IntPtr@)">
      <remarks />
    </member>
    <member name="M:OpcCom.Da.Wrapper.Server.GetItemProperties(System.String,System.Int32,System.Int32[],System.IntPtr@,System.IntPtr@)">
      <remarks />
    </member>
    <member name="M:OpcCom.Da.Wrapper.Server.WriteVQT(System.Int32,System.String[],OpcRcw.Da.OPCITEMVQT[],System.IntPtr@)">
      <remarks />
    </member>
    <member name="M:OpcCom.Da.Wrapper.Server.Read(System.Int32,System.String[],System.Int32[],System.IntPtr@,System.IntPtr@,System.IntPtr@,System.IntPtr@)">
      <remarks />
    </member>
    <member name="M:OpcCom.Da.Wrapper.Server.CleanupContinuationPoints">
      <summary>
            Removes all expired continuation points.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Wrapper.Server.IsItem(System.String)">
      <summary>
            Finds the item id at the current browse position corresponding the name.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Wrapper.Server.FindChild(System.String)">
      <summary>
            Finds the item id at the current browse position corresponding the name.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Wrapper.Server.BuildBrowseStack(Opc.ItemIdentifier)">
      <summary>
            Recursively rebuilds the browse stack.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Wrapper.Server.BuildBrowseStack(Opc.ItemIdentifier,Opc.ItemIdentifier)">
      <summary>
            Recursively rebuilds the browse stack.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Wrapper.Server.Browse(Opc.ItemIdentifier,OpcRcw.Da.OPCBROWSETYPE,System.String,System.Int16,System.Int32,System.Collections.ArrayList)">
      <summary>
            Browses for children of the specified item.
            </summary>
    </member>
    <member name="T:OpcCom.Da.Wrapper.Server.ContinuationPoint">
      <summary>
            Stores information about a continuation point.
            </summary>
    </member>
    <member name="T:OpcCom.Da.Wrapper.Group">
      <summary>
            A class that implements the COM-DA interfaces.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Wrapper.Group.#ctor(OpcCom.Da.Wrapper.Server,System.String,System.Int32,System.Int32,System.Int32,Opc.Da.ISubscription)">
      <summary>
            Initializes the object with the default values.
            </summary>
    </member>
    <member name="P:OpcCom.Da.Wrapper.Group.Name">
      <summary>
            The unique name for the group.
            </summary>
    </member>
    <member name="P:OpcCom.Da.Wrapper.Group.ServerHandle">
      <summary>
            The unique server assigned handle for the group.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Wrapper.Group.OnAdvise(System.Guid)">
      <summary>
            Called when a IConnectionPoint.Advise is called.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Wrapper.Group.OnUnadvise(System.Guid)">
      <summary>
            Called when a IConnectionPoint.Unadvise is called.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Wrapper.Group.Finalize">
      <summary>
            The finalizer.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Wrapper.Group.Dispose">
      <summary>
            Releases unmanaged resources held by the object.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Wrapper.Group.Dispose(System.Boolean)">
      <summary>
            Releases unmanaged resources held by the object.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Wrapper.Group.SetActiveState(System.Int32,System.Int32[],System.Int32,System.IntPtr@)">
      <remarks />
    </member>
    <member name="M:OpcCom.Da.Wrapper.Group.AddItems(System.Int32,OpcRcw.Da.OPCITEMDEF[],System.IntPtr@,System.IntPtr@)">
      <remarks />
    </member>
    <member name="M:OpcCom.Da.Wrapper.Group.SetClientHandles(System.Int32,System.Int32[],System.Int32[],System.IntPtr@)">
      <remarks />
    </member>
    <member name="M:OpcCom.Da.Wrapper.Group.SetDatatypes(System.Int32,System.Int32[],System.Int16[],System.IntPtr@)">
      <remarks />
    </member>
    <member name="M:OpcCom.Da.Wrapper.Group.ValidateItems(System.Int32,OpcRcw.Da.OPCITEMDEF[],System.Int32,System.IntPtr@,System.IntPtr@)">
      <remarks />
    </member>
    <member name="M:OpcCom.Da.Wrapper.Group.CreateEnumerator(System.Guid@,System.Object@)">
      <remarks />
    </member>
    <member name="M:OpcCom.Da.Wrapper.Group.RemoveItems(System.Int32,System.Int32[],System.IntPtr@)">
      <remarks />
    </member>
    <member name="M:OpcCom.Da.Wrapper.Group.Read(OpcRcw.Da.OPCDATASOURCE,System.Int32,System.Int32[],System.IntPtr@,System.IntPtr@)">
      <remarks />
    </member>
    <member name="M:OpcCom.Da.Wrapper.Group.Write(System.Int32,System.Int32[],System.Object[],System.IntPtr@)">
      <remarks />
    </member>
    <member name="M:OpcCom.Da.Wrapper.Group.ReadMaxAge(System.Int32,System.Int32[],System.Int32[],System.IntPtr@,System.IntPtr@,System.IntPtr@,System.IntPtr@)">
      <remarks />
    </member>
    <member name="M:OpcCom.Da.Wrapper.Group.WriteVQT(System.Int32,System.Int32[],OpcRcw.Da.OPCITEMVQT[],System.IntPtr@)">
      <remarks />
    </member>
    <member name="M:OpcCom.Da.Wrapper.Group.Read(System.Int32,System.Int32[],System.Int32,System.Int32@,System.IntPtr@)">
      <remarks />
    </member>
    <member name="M:OpcCom.Da.Wrapper.Group.Write(System.Int32,System.Int32[],System.Object[],System.Int32,System.Int32@,System.IntPtr@)">
      <remarks />
    </member>
    <member name="M:OpcCom.Da.Wrapper.Group.Cancel2(System.Int32)">
      <remarks />
    </member>
    <member name="M:OpcCom.Da.Wrapper.Group.Refresh2(OpcRcw.Da.OPCDATASOURCE,System.Int32,System.Int32@)">
      <remarks />
    </member>
    <member name="M:OpcCom.Da.Wrapper.Group.SetEnable(System.Int32)">
      <remarks />
    </member>
    <member name="M:OpcCom.Da.Wrapper.Group.GetEnable(System.Int32@)">
      <remarks />
    </member>
    <member name="M:OpcCom.Da.Wrapper.Group.ReadMaxAge(System.Int32,System.Int32[],System.Int32[],System.Int32,System.Int32@,System.IntPtr@)">
      <remarks />
    </member>
    <member name="M:OpcCom.Da.Wrapper.Group.WriteVQT(System.Int32,System.Int32[],OpcRcw.Da.OPCITEMVQT[],System.Int32,System.Int32@,System.IntPtr@)">
      <remarks />
    </member>
    <member name="M:OpcCom.Da.Wrapper.Group.RefreshMaxAge(System.Int32,System.Int32,System.Int32@)">
      <remarks />
    </member>
    <member name="M:OpcCom.Da.Wrapper.Group.GetState(System.Int32@,System.Int32@,System.String@,System.Int32@,System.Single@,System.Int32@,System.Int32@,System.Int32@)">
      <remarks />
    </member>
    <member name="M:OpcCom.Da.Wrapper.Group.CloneGroup(System.String,System.Guid@,System.Object@)">
      <remarks />
    </member>
    <member name="M:OpcCom.Da.Wrapper.Group.SetName(System.String)">
      <remarks />
    </member>
    <member name="M:OpcCom.Da.Wrapper.Group.SetState(System.IntPtr,System.Int32@,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
      <remarks />
    </member>
    <member name="M:OpcCom.Da.Wrapper.Group.GetKeepAlive(System.Int32@)">
      <remarks />
    </member>
    <member name="M:OpcCom.Da.Wrapper.Group.SetKeepAlive(System.Int32,System.Int32@)">
      <remarks />
    </member>
    <member name="M:OpcCom.Da.Wrapper.Group.SetItemDeadband(System.Int32,System.Int32[],System.Single[],System.IntPtr@)">
      <remarks />
    </member>
    <member name="M:OpcCom.Da.Wrapper.Group.GetItemDeadband(System.Int32,System.Int32[],System.IntPtr@,System.IntPtr@)">
      <remarks />
    </member>
    <member name="M:OpcCom.Da.Wrapper.Group.ClearItemDeadband(System.Int32,System.Int32[],System.IntPtr@)">
      <remarks />
    </member>
    <member name="M:OpcCom.Da.Wrapper.Group.SetItemSamplingRate(System.Int32,System.Int32[],System.Int32[],System.IntPtr@,System.IntPtr@)">
      <remarks />
    </member>
    <member name="M:OpcCom.Da.Wrapper.Group.GetItemSamplingRate(System.Int32,System.Int32[],System.IntPtr@,System.IntPtr@)">
      <remarks />
    </member>
    <member name="M:OpcCom.Da.Wrapper.Group.ClearItemSamplingRate(System.Int32,System.Int32[],System.IntPtr@)">
      <remarks />
    </member>
    <member name="M:OpcCom.Da.Wrapper.Group.SetItemBufferEnable(System.Int32,System.Int32[],System.Int32[],System.IntPtr@)">
      <remarks />
    </member>
    <member name="M:OpcCom.Da.Wrapper.Group.GetItemBufferEnable(System.Int32,System.Int32[],System.IntPtr@,System.IntPtr@)">
      <remarks />
    </member>
    <member name="M:OpcCom.Da.Wrapper.Group.AssignHandle">
      <summary>
            Creates a unique handle for transactions.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Wrapper.Group.OnDataChanged(System.Object,System.Object,Opc.Da.ItemValueResult[])">
      <summary>
            A delegate to receive asynchronous dta changed notifications.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Wrapper.Group.OnReadComplete(System.Object,Opc.Da.ItemValueResult[])">
      <summary>
            A delegate to receive asynchronous read completed notifications.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Wrapper.Group.InvokeCallback(System.Object,Opc.Da.ItemValueResult[],System.Boolean)">
      <summary>
            A delegate to receive asynchronous read completed notifications.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Wrapper.Group.OnWriteComplete(System.Object,Opc.IdentifiedResult[])">
      <summary>
            A delegate to receive asynchronous write completed notifications.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Wrapper.Group.AddItems(Opc.Da.Item[])">
      <summary>
            Adds the items to group.
            </summary>
    </member>
    <member name="T:OpcCom.Da.Wrapper.ConnectionPointContainer">
      <summary>
            A class that implements the COM-DA interfaces.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Wrapper.ConnectionPointContainer.OnAdvise(System.Guid)">
      <summary>
            Called when a IConnectionPoint.Advise is called.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Wrapper.ConnectionPointContainer.OnUnadvise(System.Guid)">
      <summary>
            Called when a IConnectionPoint.Unadvise is called.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Wrapper.ConnectionPointContainer.#ctor">
      <summary>
            Initializes the object with default values.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Wrapper.ConnectionPointContainer.RegisterInterface(System.Guid)">
      <summary>
            Registers an interface as a connection point.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Wrapper.ConnectionPointContainer.UnregisterInterface(System.Guid)">
      <summary>
            Unregisters an interface as a connection point.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Wrapper.ConnectionPointContainer.GetCallback(System.Guid)">
      <summary>
            Returns the callback interface for the connection point (if currently connected).
            </summary>
    </member>
    <member name="M:OpcCom.Da.Wrapper.ConnectionPointContainer.IsConnected(System.Guid)">
      <summary>
            Whether a client has connected to the specified connection point.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Wrapper.ConnectionPointContainer.EnumConnectionPoints(OpcRcw.Comn.IEnumConnectionPoints@)">
      <remarks />
    </member>
    <member name="M:OpcCom.Da.Wrapper.ConnectionPointContainer.FindConnectionPoint(System.Guid@,OpcRcw.Comn.IConnectionPoint@)">
      <remarks />
    </member>
    <member name="T:OpcCom.Da.Wrapper.ConnectionPoint">
      <summary>
            A class that implements the COM-DA interfaces.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Wrapper.ConnectionPoint.#ctor(System.Guid,OpcCom.Da.Wrapper.ConnectionPointContainer)">
      <summary>
            Creates a connection point for the specified interface and container.
            </summary>
    </member>
    <member name="P:OpcCom.Da.Wrapper.ConnectionPoint.Callback">
      <summary>
            The current callback object.
            </summary>
    </member>
    <member name="P:OpcCom.Da.Wrapper.ConnectionPoint.IsConnected">
      <summary>
            Whether the client has connected to the connection point.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Wrapper.ConnectionPoint.Advise(System.Object,System.Int32@)">
      <remarks />
    </member>
    <member name="M:OpcCom.Da.Wrapper.ConnectionPoint.Unadvise(System.Int32)">
      <remarks />
    </member>
    <member name="M:OpcCom.Da.Wrapper.ConnectionPoint.GetConnectionInterface(System.Guid@)">
      <remarks />
    </member>
    <member name="M:OpcCom.Da.Wrapper.ConnectionPoint.EnumConnections(OpcRcw.Comn.IEnumConnections@)">
      <remarks />
    </member>
    <member name="M:OpcCom.Da.Wrapper.ConnectionPoint.GetConnectionPointContainer(OpcRcw.Comn.IConnectionPointContainer@)">
      <remarks />
    </member>
    <member name="T:OpcCom.Da.Wrapper.EnumConnectionPoints">
      <summary>
            A class that implements the COM-DA interfaces.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Wrapper.EnumConnectionPoints.#ctor(System.Collections.ICollection)">
      <summary>
            Initializes the object with a set of connection points.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Wrapper.EnumConnectionPoints.Skip(System.Int32)">
      <remarks />
    </member>
    <member name="M:OpcCom.Da.Wrapper.EnumConnectionPoints.Clone(OpcRcw.Comn.IEnumConnectionPoints@)">
      <remarks />
    </member>
    <member name="M:OpcCom.Da.Wrapper.EnumConnectionPoints.Reset">
      <remarks />
    </member>
    <member name="M:OpcCom.Da.Wrapper.EnumConnectionPoints.RemoteNext(System.Int32,System.IntPtr,System.Int32@)">
      <remarks />
    </member>
    <member name="T:OpcCom.Da.Wrapper.EnumOPCItemAttributes">
      <summary>
            A class that implements the COM-DA interfaces.
            </summary>
    </member>
    <member name="T:OpcCom.Da.Wrapper.EnumOPCItemAttributes.ItemAttributes">
      <remarks />
    </member>
    <member name="F:OpcCom.Da.Wrapper.EnumOPCItemAttributes.ItemAttributes.ItemID">
      <remarks />
    </member>
    <member name="F:OpcCom.Da.Wrapper.EnumOPCItemAttributes.ItemAttributes.AccessPath">
      <remarks />
    </member>
    <member name="F:OpcCom.Da.Wrapper.EnumOPCItemAttributes.ItemAttributes.ClientHandle">
      <remarks />
    </member>
    <member name="F:OpcCom.Da.Wrapper.EnumOPCItemAttributes.ItemAttributes.ServerHandle">
      <remarks />
    </member>
    <member name="F:OpcCom.Da.Wrapper.EnumOPCItemAttributes.ItemAttributes.Active">
      <remarks />
    </member>
    <member name="F:OpcCom.Da.Wrapper.EnumOPCItemAttributes.ItemAttributes.CanonicalDataType">
      <remarks />
    </member>
    <member name="F:OpcCom.Da.Wrapper.EnumOPCItemAttributes.ItemAttributes.RequestedDataType">
      <remarks />
    </member>
    <member name="F:OpcCom.Da.Wrapper.EnumOPCItemAttributes.ItemAttributes.AccessRights">
      <remarks />
    </member>
    <member name="F:OpcCom.Da.Wrapper.EnumOPCItemAttributes.ItemAttributes.EuType">
      <remarks />
    </member>
    <member name="F:OpcCom.Da.Wrapper.EnumOPCItemAttributes.ItemAttributes.MaxValue">
      <remarks />
    </member>
    <member name="F:OpcCom.Da.Wrapper.EnumOPCItemAttributes.ItemAttributes.MinValue">
      <remarks />
    </member>
    <member name="F:OpcCom.Da.Wrapper.EnumOPCItemAttributes.ItemAttributes.EuInfo">
      <remarks />
    </member>
    <member name="M:OpcCom.Da.Wrapper.EnumOPCItemAttributes.#ctor(System.Collections.ICollection)">
      <summary>
            Initializes the object with a set of connection points.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Wrapper.EnumOPCItemAttributes.Skip(System.Int32)">
      <remarks />
    </member>
    <member name="M:OpcCom.Da.Wrapper.EnumOPCItemAttributes.Clone(OpcRcw.Da.IEnumOPCItemAttributes@)">
      <remarks />
    </member>
    <member name="M:OpcCom.Da.Wrapper.EnumOPCItemAttributes.Reset">
      <remarks />
    </member>
    <member name="M:OpcCom.Da.Wrapper.EnumOPCItemAttributes.Next(System.Int32,System.IntPtr@,System.Int32@)">
      <remarks />
    </member>
    <member name="T:OpcCom.Da.Wrapper.EnumUnknown">
      <summary>
            A class that implements the COM-DA interfaces.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Wrapper.EnumUnknown.#ctor(System.Collections.ICollection)">
      <summary>
            Initializes the object with a set of interface pointers.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Wrapper.EnumUnknown.Skip(System.Int32)">
      <remarks />
    </member>
    <member name="M:OpcCom.Da.Wrapper.EnumUnknown.Clone(OpcRcw.Comn.IEnumUnknown@)">
      <remarks />
    </member>
    <member name="M:OpcCom.Da.Wrapper.EnumUnknown.Reset">
      <remarks />
    </member>
    <member name="M:OpcCom.Da.Wrapper.EnumUnknown.RemoteNext(System.Int32,System.IntPtr,System.Int32@)">
      <remarks />
    </member>
    <member name="T:OpcCom.Da.Wrapper.EnumString">
      <summary>
            A class that implements the COM-DA interfaces.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Wrapper.EnumString.#ctor(System.Collections.ICollection)">
      <summary>
            Initializes the object with a set of interface pointers.
            </summary>
    </member>
    <member name="M:OpcCom.Da.Wrapper.EnumString.Skip(System.Int32)">
      <remarks />
    </member>
    <member name="M:OpcCom.Da.Wrapper.EnumString.Clone(OpcRcw.Comn.IEnumString@)">
      <remarks />
    </member>
    <member name="M:OpcCom.Da.Wrapper.EnumString.Reset">
      <remarks />
    </member>
    <member name="M:OpcCom.Da.Wrapper.EnumString.RemoteNext(System.Int32,System.IntPtr,System.Int32@)">
      <remarks />
    </member>
    <member name="T:OpcCom.Cpx.ResultIDs">
      <summary>
            Defines all well known Complex Data HRESULT codes.
            </summary>
    </member>
    <member name="F:OpcCom.Cpx.ResultIDs.E_TYPE_CHANGED">
      <remarks />
    </member>
    <member name="F:OpcCom.Cpx.ResultIDs.E_FILTER_DUPLICATE">
      <remarks />
    </member>
    <member name="F:OpcCom.Cpx.ResultIDs.E_FILTER_INVALID">
      <remarks />
    </member>
    <member name="F:OpcCom.Cpx.ResultIDs.E_FILTER_ERROR">
      <remarks />
    </member>
    <member name="F:OpcCom.Cpx.ResultIDs.S_FILTER_NO_DATA">
      <remarks />
    </member>
    <member name="T:OpcCom.ConnectionPoint">
      <summary>
            Adds and removes a connection point to a server.
            </summary>
    </member>
    <member name="F:OpcCom.ConnectionPoint.m_server">
      <summary>
            The COM server that supports connection points.
            </summary>
    </member>
    <member name="F:OpcCom.ConnectionPoint.m_cookie">
      <summary>
            The id assigned to the connection by the COM server.
            </summary>
    </member>
    <member name="F:OpcCom.ConnectionPoint.m_refs">
      <summary>
            The number of times Advise() has been called without a matching Unadvise(). 
            </summary>
    </member>
    <member name="M:OpcCom.ConnectionPoint.#ctor(System.Object,System.Guid)">
      <summary>
            Initializes the object by finding the specified connection point.
            </summary>
    </member>
    <member name="M:OpcCom.ConnectionPoint.Dispose">
      <summary>
            Releases the COM server.
            </summary>
    </member>
    <member name="P:OpcCom.ConnectionPoint.Cookie">
      <summary> 
            The cookie returned in the advise call. 
            </summary>
    </member>
    <member name="M:OpcCom.ConnectionPoint.Advise(System.Object)">
      <summary>
            Establishes a connection, if necessary and increments the reference count.
            </summary>
    </member>
    <member name="M:OpcCom.ConnectionPoint.Unadvise">
      <summary>
            Decrements the reference count and closes the connection if no more references.
            </summary>
    </member>
    <member name="T:OpcCom.EnumGuid">
      <summary>
            Enumerates a set of GUIDs.
            </summary>
    </member>
    <member name="M:OpcCom.EnumGuid.#ctor(System.Object)">
      <summary>
            Saves a reference to the COM server.
            </summary>
    </member>
    <member name="M:OpcCom.EnumGuid.Release">
      <summary>
            releases the COM server.
            </summary>
    </member>
    <member name="M:OpcCom.EnumGuid.GetEnumerator">
      <summary>
            returns a reference to the COM server.
            </summary>
    </member>
    <member name="M:OpcCom.EnumGuid.GetAll">
      <summary>
            fetches all GUIDs. 
            </summary>
    </member>
    <member name="M:OpcCom.EnumGuid.Next(System.Int32)">
      <summary>
            fetches next group of GUIDs. 
            </summary>
    </member>
    <member name="M:OpcCom.EnumGuid.Skip(System.Int32)">
      <summary>
            skips elements.
            </summary>
    </member>
    <member name="M:OpcCom.EnumGuid.Reset">
      <summary>
            sets pointer to the start of the list.
            </summary>
    </member>
    <member name="M:OpcCom.EnumGuid.Clone">
      <summary>
            clones the enumerator.
            </summary>
    </member>
    <member name="T:OpcCom.EnumString">
      <summary>
            A wrapper for the COM IEnumString interface.
            </summary>
    </member>
    <member name="F:OpcCom.EnumString.m_enumerator">
      <summary>
            A reference to the remote COM object.
            </summary>
    </member>
    <member name="M:OpcCom.EnumString.#ctor(System.Object)">
      <summary>
            Initializes the object with an enumerator.
            </summary>
    </member>
    <member name="M:OpcCom.EnumString.Dispose">
      <summary>
            Releases the remote COM object.
            </summary>
    </member>
    <member name="M:OpcCom.EnumString.Next(System.Int32)">
      <summary>
            Fetches the next group of strings. 
            </summary>
    </member>
    <member name="M:OpcCom.EnumString.Skip(System.Int32)">
      <summary>
            Skips a number of strings.
            </summary>
    </member>
    <member name="M:OpcCom.EnumString.Reset">
      <summary>
            Sets pointer to the start of the list.
            </summary>
    </member>
    <member name="M:OpcCom.EnumString.Clone">
      <summary>
            Clones the enumerator.
            </summary>
    </member>
    <member name="T:OpcCom.Factory">
      <summary>
            The default class used to instantiate server objects.
            </summary>
    </member>
    <member name="M:OpcCom.Factory.#ctor">
      <summary>
            Initializes an instance for use for in process objects.
            </summary>
    </member>
    <member name="M:OpcCom.Factory.#ctor(System.Boolean)">
      <summary>
            Initializes an instance for use with .NET remoting.
            </summary>
    </member>
    <member name="M:OpcCom.Factory.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Contructs a server by de-serializing its URL from the stream.
            </summary>
    </member>
    <member name="M:OpcCom.Factory.CreateInstance(Opc.URL,Opc.ConnectData)">
      <summary>
            Creates a new instance of the server.
            </summary>
    </member>
    <member name="M:OpcCom.Factory.Connect(Opc.URL,Opc.ConnectData)">
      <summary>
            Connects to the specified COM server server.
            </summary>
    </member>
    <member name="T:OpcCom.Interop">
      <summary>
            Exposes WIN32 and COM API functions.
            </summary>
    </member>
    <member name="M:OpcCom.Interop.EnumComputers">
      <summary>
            Enumerates computers on the local network.
            </summary>
    </member>
    <member name="M:OpcCom.Interop.GetSystemMessage(System.Int32)">
      <summary>
            Retrieves the system message text for the specified error.
            </summary>
    </member>
    <member name="M:OpcCom.Interop.GetComputerName">
      <summary>
            Retrieves the name of the local computer.
            </summary>
    </member>
    <member name="T:OpcCom.Interop.ServerInfo">
      <summary>
            A class used to allocate and deallocate the elements of a COSERVERINFO structure.
            </summary>
    </member>
    <member name="M:OpcCom.Interop.ServerInfo.Allocate(System.String,System.Net.NetworkCredential,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            Allocates a COSERVERINFO structure.
            </summary>
    </member>
    <member name="M:OpcCom.Interop.ServerInfo.Deallocate">
      <summary>
            Deallocated memory allocated when the COSERVERINFO structure was created.
            </summary>
    </member>
    <member name="M:OpcCom.Interop.InitializeSecurity">
      <summary>
            Initializes COM security.
            </summary>
    </member>
    <member name="M:OpcCom.Interop.CreateInstance(System.Guid,System.String,System.Net.NetworkCredential,OpcLabs.BaseLib.Runtime.InteropServices.ComInstantiationParameters,OpcLabs.BaseLib.Runtime.InteropServices.ComSecurityParameters)">
      <summary>
            Creates an instance of a COM server.
            </summary>
    </member>
    <member name="M:OpcCom.Interop.CreateInstanceWithLicenseKey(System.Guid,System.String,System.Net.NetworkCredential,System.String,OpcLabs.BaseLib.Runtime.InteropServices.ComInstantiationParameters,OpcLabs.BaseLib.Runtime.InteropServices.ComSecurityParameters)">
      <summary>
            Creates an instance of a COM server using the specified license key.
            </summary>
    </member>
    <member name="M:OpcCom.Interop.GetInt32s(System.IntPtr@,System.Int32,System.Boolean)">
      <summary>
            Unmarshals and frees an array of 32 bit integers.
            </summary>
    </member>
    <member name="M:OpcCom.Interop.GetInt32s(System.Int32[])">
      <summary>
            Allocates and marshals an array of 32 bit integers.
            </summary>
    </member>
    <member name="M:OpcCom.Interop.GetInt16s(System.IntPtr@,System.Int32,System.Boolean)">
      <summary>
            Unmarshals and frees a array of 16 bit integers.
            </summary>
    </member>
    <member name="M:OpcCom.Interop.GetInt16s(System.Int16[])">
      <summary>
            Allocates and marshals an array of 16 bit integers.
            </summary>
    </member>
    <member name="M:OpcCom.Interop.GetUnicodeStrings(System.String[])">
      <summary>
            Marshals an array of strings into a unmanaged memory buffer
            </summary>
      <param name="values">The array of strings to marshal</param>
      <returns>The pointer to the unmanaged memory buffer</returns>
    </member>
    <member name="M:OpcCom.Interop.GetUnicodeStrings(System.IntPtr@,System.Int32,System.Boolean)">
      <summary>
            Unmarshals and frees a array of unicode strings.
            </summary>
    </member>
    <member name="P:OpcCom.Interop.PreserveUTC">
      <summary>
            This flag supresses the conversion to local time done during marhsalling.
            </summary>
    </member>
    <member name="M:OpcCom.Interop.GetFILETIME(System.DateTime)">
      <summary>
            Marshals a DateTime as a WIN32 FILETIME.
            </summary>
      <param name="datetime">The DateTime object to marshal</param>
      <returns>The WIN32 FILETIME</returns>
    </member>
    <member name="M:OpcCom.Interop.GetFILETIME(System.IntPtr)">
      <summary>
            Unmarshals a WIN32 FILETIME from a pointer.
            </summary>
      <param name="pFiletime">A pointer to a FILETIME structure.</param>
      <returns>A DateTime object.</returns>
    </member>
    <member name="M:OpcCom.Interop.GetFILETIME(System.Runtime.InteropServices.ComTypes.FILETIME)">
      <summary>
            Unmarshals a WIN32 FILETIME.
            </summary>
    </member>
    <member name="M:OpcCom.Interop.GetFILETIMEs(System.DateTime[])">
      <summary>
            Marshals an array of DateTimes into an unmanaged array of FILETIMEs
            </summary>
      <param name="datetimes">The array of DateTimes to marshal</param>
      <returns>The IntPtr array of FILETIMEs</returns>
    </member>
    <member name="M:OpcCom.Interop.GetFILETIMEs(System.IntPtr@,System.Int32,System.Boolean)">
      <summary>
            Unmarshals an array of WIN32 FILETIMEs as DateTimes.
            </summary>
    </member>
    <member name="T:OpcCom.Interop.GUID">
      <summary>
            WIN32 GUID struct declaration.
            </summary>
    </member>
    <member name="M:OpcCom.Interop.GetGUIDs(System.IntPtr@,System.Int32,System.Boolean)">
      <summary>
            Unmarshals an array of WIN32 GUIDs as Guid.
            </summary>
    </member>
    <member name="P:OpcCom.Interop.VARIANT_SIZE">
      <summary>
            The size, in bytes, of a VARIANT structure.
            </summary>
    </member>
    <member name="M:OpcCom.Interop.VariantClear(System.IntPtr)">
      <summary>
            Frees all memory referenced by a VARIANT stored in unmanaged memory.
            </summary>
    </member>
    <member name="M:OpcCom.Interop.GetVARIANT(System.Object)">
      <summary>
            Converts an object into a value that can be marshalled to a VARIANT.
            </summary>
      <param name="source">The object to convert.</param>
      <returns>The converted object.</returns>
    </member>
    <member name="M:OpcCom.Interop.GetVARIANTs(System.Object[],System.Boolean)">
      <summary>
            Marshals an array objects into an unmanaged array of VARIANTs.
            </summary>
      <param name="values">An array of the objects to be marshalled</param>
      <param name="preprocess">Whether the objects should have troublesome types removed before marhalling.</param>
      <returns>An pointer to the array in unmanaged memory</returns>
    </member>
    <member name="M:OpcCom.Interop.GetVARIANTs(System.IntPtr@,System.Int32,System.Boolean)">
      <summary>
            Unmarshals an array of VARIANTs as objects.
            </summary>
    </member>
    <member name="F:OpcCom.Interop.LOCALE_SYSTEM_DEFAULT">
      <summary>
            The constant used to selected the default locale.
            </summary>
    </member>
    <member name="M:OpcCom.Interop.GetLocale(System.Int32)">
      <summary>
            Converts a LCID to a Locale string.
            </summary>
    </member>
    <member name="M:OpcCom.Interop.GetLocale(System.String)">
      <summary>
            Converts a Locale string to a LCID.
            </summary>
    </member>
    <member name="M:OpcCom.Interop.GetType(System.Runtime.InteropServices.VarEnum)">
      <summary>
            Converts the VARTYPE to a system type.
            </summary>
    </member>
    <member name="M:OpcCom.Interop.GetType(System.Type)">
      <summary>
            Converts the system type to a VARTYPE.
            </summary>
    </member>
    <member name="M:OpcCom.Interop.GetResultID(System.Int32)">
      <summary>
            Converts the HRESULT to a system type.
            </summary>
    </member>
    <member name="M:OpcCom.Interop.GetResultID(Opc.ResultID)">
      <summary>
            Converts a result id to an HRESULT.
            </summary>
    </member>
    <member name="M:OpcCom.Interop.CreateException(System.String,System.Exception)">
      <summary>
            Returns an exception after extracting HRESULT from the exception.
            </summary>
    </member>
    <member name="M:OpcCom.Interop.CreateException(System.String,System.Int32)">
      <summary>
            Returns an exception after extracting HRESULT from the exception.
            </summary>
    </member>
    <member name="M:OpcCom.Interop.ReleaseServer(System.Object)">
      <summary>
            Releases the server if it is a true COM server.
            </summary>
    </member>
    <member name="T:OpcCom.Server">
      <summary>
            An in-process wrapper for a remote OPC COM-DA server (not thread safe).
            </summary>
    </member>
    <member name="M:OpcCom.Server.#ctor">
      <summary>
            Initializes the object.
            </summary>
    </member>
    <member name="M:OpcCom.Server.#ctor(Opc.URL,System.Object)">
      <summary>
            Initializes the object with the specifed COM server.
            </summary>
    </member>
    <member name="M:OpcCom.Server.Finalize">
      <summary>
            The finalizer.
            </summary>
    </member>
    <member name="M:OpcCom.Server.Dispose">
      <summary>
            Releases unmanaged resources held by the object.
            </summary>
    </member>
    <member name="M:OpcCom.Server.Dispose(System.Boolean)">
      <summary>
            Releases unmanaged resources held by the object.
            </summary>
    </member>
    <member name="M:OpcCom.Server.Initialize(Opc.URL,Opc.ConnectData)">
      <summary>
            Connects to the server with the specified URL and credentials.
            </summary>
    </member>
    <member name="M:OpcCom.Server.Uninitialize">
      <summary>
            Releases the remote server.
            </summary>
    </member>
    <member name="E:OpcCom.Server.ServerShutdown">
      <summary>
            An event to receive server shutdown notifications.
            </summary>
    </member>
    <member name="M:OpcCom.Server.GetLocale">
      <summary>
            The locale used in any error messages or results returned to the client.
            </summary>
      <returns>The locale name in the format "[languagecode]-[country/regioncode]".</returns>
    </member>
    <member name="M:OpcCom.Server.SetLocale(System.String)">
      <summary>
            Sets the locale used in any error messages or results returned to the client.
            </summary>
      <param name="locale">The locale name in the format "[languagecode]-[country/regioncode]".</param>
      <returns>A locale that the server supports and is the best match for the requested locale.</returns>
    </member>
    <member name="M:OpcCom.Server.GetSupportedLocales">
      <summary>
            Returns the locales supported by the server
            </summary>
      <remarks>The first element in the array must be the default locale for the server.</remarks>
      <returns>An array of locales with the format "[languagecode]-[country/regioncode]".</returns>
    </member>
    <member name="M:OpcCom.Server.GetErrorText(System.String,Opc.ResultID)">
      <summary>
            Returns the localized text for the specified result code.
            </summary>
      <param name="locale">The locale name in the format "[languagecode]-[country/regioncode]".</param>
      <param name="resultID">The result code identifier.</param>
      <returns>A message localized for the best match for the requested locale.</returns>
    </member>
    <member name="M:OpcCom.Server.Advise">
      <summary>
            Establishes a connection point callback with the COM server.
            </summary>
    </member>
    <member name="M:OpcCom.Server.Unadvise">
      <summary>
            Closes a connection point callback with the COM server.
            </summary>
    </member>
    <member name="T:OpcCom.Server.Callback">
      <summary>
            A class that implements the IOPCShutdown interface.
            </summary>
    </member>
    <member name="M:OpcCom.Server.Callback.#ctor(OpcCom.Server)">
      <summary>
            Initializes the object with the containing subscription object.
            </summary>
    </member>
    <member name="E:OpcCom.Server.Callback.ServerShutdown">
      <summary>
            An event to receive server shutdown notificiations.
            </summary>
    </member>
    <member name="F:OpcCom.Server.Callback.m_server">
      <summary>
            A table of item identifiers indexed by internal handle.
            </summary>
    </member>
    <member name="E:OpcCom.Server.Callback.m_serverShutdown">
      <summary>
            Raised when data changed callbacks arrive.
            </summary>
    </member>
    <member name="M:OpcCom.Server.Callback.ShutdownRequest(System.String)">
      <summary>
            Called when a shutdown event is received.
            </summary>
    </member>
    <member name="F:OpcCom.Server.m_server">
      <summary>
            The COM server wrapped by the object.
            </summary>
    </member>
    <member name="F:OpcCom.Server.m_url">
      <summary>
            The URL containing host, prog id and clsid information for the remote server.
            </summary>
    </member>
    <member name="F:OpcCom.Server.m_connection">
      <summary>
            A connect point with the COM server.
            </summary>
    </member>
    <member name="F:OpcCom.Server.m_callback">
      <summary>
            The internal object that implements the IOPCShutdown interface.
            </summary>
    </member>
    <member name="T:OpcCom.ServerEnumerator">
      <summary>
            A unique identifier for the result of an operation of an item.
            </summary>
    </member>
    <member name="M:OpcCom.ServerEnumerator.Dispose">
      <summary>
            Frees all unmanaged resources
            </summary>
    </member>
    <member name="M:OpcCom.ServerEnumerator.EnumerateHosts">
      <summary>
            Enumerates hosts that may be accessed for server discovery.
            </summary>
    </member>
    <member name="M:OpcCom.ServerEnumerator.GetAvailableServers(Opc.Specification)">
      <summary>
            Returns a list of servers that support the specified interface specification.
            </summary>
    </member>
    <member name="M:OpcCom.ServerEnumerator.GetAvailableServers(Opc.Specification,System.String,Opc.ConnectData)">
      <summary>
            Returns a list of servers that support the specified specification on the specified host.
            </summary>
    </member>
    <member name="M:OpcCom.ServerEnumerator.CLSIDFromProgID(System.String,System.String,Opc.ConnectData,System.Boolean)">
      <summary>
            Looks up the CLSID for the specified prog id on a remote host.
            </summary>
    </member>
    <member name="F:OpcCom.ServerEnumerator.m_server">
      <summary>
            The server enumerator COM server.
            </summary>
    </member>
    <member name="F:OpcCom.ServerEnumerator.m_host">
      <summary>
            The host where the servers are being enumerated.
            </summary>
    </member>
    <member name="F:OpcCom.ServerEnumerator.ProgID">
      <summary>
            The ProgID for the OPC Server Enumerator.
            </summary>
    </member>
    <member name="F:OpcCom.ServerEnumerator.CLSID">
      <summary>
            The CLSID for the OPC Server Enumerator.
            </summary>
    </member>
    <member name="M:OpcCom.ServerEnumerator.ReadClasses(OpcRcw.Comn.IOPCEnumGUID)">
      <summary>
            Reads the guids from the enumerator.
            </summary>
    </member>
    <member name="M:OpcCom.ServerEnumerator.CreateUrl(Opc.Specification,System.Guid)">
      <summary>
            Reads the server details from the enumerator.
            </summary>
    </member>
    <member name="T:OpcCom.IOPCWrappedServer">
      <summary>
            An interface that is invoked when the wrapper loads/unloads the server.
            </summary>
    </member>
    <member name="M:OpcCom.IOPCWrappedServer.Load(System.Guid)">
      <summary>
            Called when the object is loaded by the COM wrapper process.
            </summary>
    </member>
    <member name="M:OpcCom.IOPCWrappedServer.Unload">
      <summary>
            Called when the object is unloaded by the COM wrapper process.
            </summary>
    </member>
    <member name="T:OpcXml.Da.BrowsePosition">
      <summary>
            Implements an object that handles multi-step browse operations.
            </summary>
    </member>
    <member name="F:OpcXml.Da.BrowsePosition.ContinuationPoint">
      <summary>
            The continuation point for a browse operation.
            </summary>
    </member>
    <member name="F:OpcXml.Da.BrowsePosition.MoreElements">
      <summary>
            Indicates that elements that meet the filter criteria have not been returned.
            </summary>
    </member>
    <member name="F:OpcXml.Da.BrowsePosition.Locale">
      <summary>
            The locale used for the browse operation.
            </summary>
    </member>
    <member name="F:OpcXml.Da.BrowsePosition.ReturnErrorText">
      <summary>
            Whether localized error texts should be reurned with the browse results.
            </summary>
    </member>
    <member name="M:OpcXml.Da.BrowsePosition.#ctor(Opc.ItemIdentifier,Opc.Da.BrowseFilters,System.String,System.Boolean)">
      <summary>
            Initializes a browse posistion 
            </summary>
    </member>
    <member name="T:OpcXml.Da.RootBrowsePosition">
      <summary>
            Implements an object that handles multi-step browse operations at root
            </summary>
    </member>
    <member name="F:OpcXml.Da.RootBrowsePosition.Names">
      <summary>
            The names of servers at root.
            </summary>
    </member>
    <member name="F:OpcXml.Da.RootBrowsePosition.Index">
      <summary>
            The index in the names array.
            </summary>
    </member>
    <member name="M:OpcXml.Da.RootBrowsePosition.#ctor(Opc.ItemIdentifier,Opc.Da.BrowseFilters,System.String,System.Boolean)">
      <summary>
            Initializes a browse posistion 
            </summary>
    </member>
    <member name="T:OpcXml.Da.IServer">
      <summary>
            Defines functionality that is common to all XML-DA OPC servers.
            </summary>
    </member>
    <member name="P:OpcXml.Da.IServer.SupportedLocales">
      <summary>
            Returns the set of supported locales.
            </summary>
    </member>
    <member name="M:OpcXml.Da.IServer.GetStatus(System.String,System.String,Opc.Da.ServerStatus@)">
      <summary>
            Returns the current server status.
            </summary>
    </member>
    <member name="M:OpcXml.Da.IServer.Read(OpcXml.Da.RequestOptions,OpcXml.Da.ItemList,OpcXml.Da.ItemValueResultList@,OpcXml.Da.Error[]@)">
      <summary>
            Reads a set of items.
            </summary>
    </member>
    <member name="M:OpcXml.Da.IServer.Write(OpcXml.Da.RequestOptions,OpcXml.Da.ItemValueList,System.Boolean,OpcXml.Da.ItemValueResultList@,OpcXml.Da.Error[]@)">
      <summary>
            Writes a set of items and, if requested, returns the current values.
            </summary>
    </member>
    <member name="M:OpcXml.Da.IServer.Subscribe(OpcXml.Da.RequestOptions,OpcXml.Da.ItemList,System.TimeSpan,System.Boolean,System.String@,OpcXml.Da.ItemValueResultList@,OpcXml.Da.Error[]@)">
      <summary>
            Establishes a subscription for the set of items.
            </summary>
    </member>
    <member name="M:OpcXml.Da.IServer.PolledRefresh(OpcXml.Da.RequestOptions,System.String[],System.TimeSpan,System.TimeSpan,System.Boolean,System.String[]@,OpcXml.Da.ItemValueResultList[]@,OpcXml.Da.Error[]@,System.Boolean@)">
      <summary>
            Polls the server for the any item changes for one or more subscriptions.
            </summary>
    </member>
    <member name="M:OpcXml.Da.IServer.Unsubscribe(System.String)">
      <summary>
            Terminates one subscription.
            </summary>
    </member>
    <member name="M:OpcXml.Da.IServer.Browse(System.String,System.String,System.Boolean,Opc.ItemIdentifier,Opc.Da.BrowseFilters,System.String@,System.Boolean@,Opc.Da.BrowseElement[]@,OpcXml.Da.Error[]@)">
      <summary>
            Returns a set of elements at the specified position and that meet the filter criteria.
            </summary>
    </member>
    <member name="M:OpcXml.Da.IServer.GetProperties(System.String,System.String,System.Boolean,Opc.ItemIdentifier[],Opc.Da.PropertyID[],System.String,System.Boolean,Opc.Da.ItemPropertyCollection[]@,OpcXml.Da.Error[]@)">
      <summary>
            Returns the specified properties for a set of items.
            </summary>
    </member>
    <member name="T:OpcXml.Da.RequestOptions">
      <summary>
            The standard return parameter for XML-DA server methods.
            </summary>
    </member>
    <member name="F:OpcXml.Da.RequestOptions.RequestHandle">
      <summary>
            A request handle assigned by client.
            </summary>
    </member>
    <member name="F:OpcXml.Da.RequestOptions.RequestDeadline">
      <summary>
            The maximum time a server should wait before returning whatever results it has.
            </summary>
    </member>
    <member name="F:OpcXml.Da.RequestOptions.Locale">
      <summary>
            The locale to used for strings in the results.
            </summary>
    </member>
    <member name="F:OpcXml.Da.RequestOptions.Filters">
      <summary>
            The filters to apply to returned results.
            </summary>
    </member>
    <member name="T:OpcXml.Da.ReplyBase">
      <summary>
            The standard return parameter for XML-DA server methods.
            </summary>
    </member>
    <member name="F:OpcXml.Da.ReplyBase.RcvTime">
      <summary>
            The UTC time a request arrives at the server.
            </summary>
    </member>
    <member name="F:OpcXml.Da.ReplyBase.ReplyTime">
      <summary>
            The UTC time a response is returned from the server.
            </summary>
    </member>
    <member name="F:OpcXml.Da.ReplyBase.ClientRequestHandle">
      <summary>
            The request handle assigned by the client.
            </summary>
    </member>
    <member name="F:OpcXml.Da.ReplyBase.RevisedLocaleID">
      <summary>
            The actual locale id used by the server.
            </summary>
    </member>
    <member name="F:OpcXml.Da.ReplyBase.ServerState">
      <summary>
            The current state of the server.
            </summary>
    </member>
    <member name="T:OpcXml.Da.Error">
      <summary>
            Contains the localized text for a result code.
            </summary>
    </member>
    <member name="F:OpcXml.Da.Error.ID">
      <summary>
            The unique id for the result code.
            </summary>
    </member>
    <member name="F:OpcXml.Da.Error.Text">
      <summary>
            The localized verbose message,
            </summary>
    </member>
    <member name="F:OpcXml.Da.Error.E_FAIL">
      <summary>
            All errors that are defined in the XML-DA specification.
            </summary>summary&gt;
        </member>
    <member name="F:OpcXml.Da.Error.E_OUTOFMEMORY">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Error.E_SERVERSTATE">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Error.E_TIMEDOUT">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Error.E_BUSY">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Error.E_INVALIDCONTINUATIONPOINT">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Error.E_INVALIDFILTER">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Error.E_NOSUBSCRIPTION">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Error.E_INVALIDHOLDTIME">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Error.E_UNKNOWNITEMNAME">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Error.E_INVALIDITEMNAME">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Error.E_UNKNOWNITEMPATH">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Error.E_INVALIDITEMPATH">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Error.E_NOTSUPPORTED">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Error.E_BADTYPE">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Error.E_RANGE">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Error.E_READONLY">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Error.E_WRITEONLY">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Error.E_INVALIDPID">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Error.S_FALSE">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Error.S_CLAMP">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Error.S_UNSUPPORTEDRATE">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Error.S_DATAQUEUEOVERFLOW">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Error.E_TYPE_CHANGED">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Error.E_FILTER_DUPLICATE">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Error.E_FILTER_INVALID">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Error.E_FILTER_ERROR">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Error.S_FILTER_NO_DATA">
      <remarks />
    </member>
    <member name="T:OpcXml.Da.SubscribeItemValueResult">
      <summary>
            A XML-DA specific item value result that is used for subscriptions.
            </summary>
    </member>
    <member name="F:OpcXml.Da.SubscribeItemValueResult.SamplingRate">
      <summary>
            The actual sampling rate used for items in a subscription.
            </summary>
    </member>
    <member name="F:OpcXml.Da.SubscribeItemValueResult.SamplingRateSpecified">
      <remarks />
    </member>
    <member name="M:OpcXml.Da.SubscribeItemValueResult.#ctor">
      <summary>
            Initializes the object with the default values;
            </summary>
    </member>
    <member name="M:OpcXml.Da.SubscribeItemValueResult.#ctor(Opc.ItemIdentifier)">
      <summary>
            Initializes the object with an ItemIdentifier object.
            </summary>
    </member>
    <member name="M:OpcXml.Da.SubscribeItemValueResult.#ctor(Opc.Da.ItemValue)">
      <summary>
            Initializes the object with an ItemValue object.
            </summary>
    </member>
    <member name="T:OpcXml.Da.List">
      <summary>
            Contains properties that uniquely identify an OPC item list. 
            </summary>
    </member>
    <member name="F:OpcXml.Da.List.Name">
      <summary>
            An optional identifier for an item list.
            </summary>
    </member>
    <member name="F:OpcXml.Da.List.ClientHandle">
      <summary>
            A unique list identifier assigned by the client.
            </summary>
    </member>
    <member name="F:OpcXml.Da.List.ServerHandle">
      <summary>
            A unique list identifier assigned by the server.
            </summary>
    </member>
    <member name="T:OpcXml.Da.ItemList">
      <summary>
            Contain a list of items and default values for properties used to access an OPC item.
            </summary>
    </member>
    <member name="F:OpcXml.Da.ItemList.ItemPath">
      <summary>
            The default item path for items in the list.
            </summary>
    </member>
    <member name="F:OpcXml.Da.ItemList.ReqType">
      <summary>
            The default data type to use when reading items in the list.
            </summary>
    </member>
    <member name="F:OpcXml.Da.ItemList.MaxAge">
      <summary>
            The default maximum age to use when reading items in the list.
            </summary>
    </member>
    <member name="F:OpcXml.Da.ItemList.MaxAgeSpecified">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.ItemList.Deadband">
      <summary>
            The default deadband to use when subscribing to the items in the list.
            </summary>
    </member>
    <member name="F:OpcXml.Da.ItemList.DeadbandSpecified">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.ItemList.SamplingRate">
      <summary>
            The default sampling rate to use when subscribing to the items in the list.
            </summary>
    </member>
    <member name="F:OpcXml.Da.ItemList.SamplingRateSpecified">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.ItemList.EnableBuffering">
      <summary>
            The default buffering behavior to use when subscribing to the items in the list.
            </summary>
    </member>
    <member name="F:OpcXml.Da.ItemList.EnableBufferingSpecified">
      <remarks />
    </member>
    <member name="P:OpcXml.Da.ItemList.Item(System.Int32)">
      <summary>
            Accesses the item at the specified index.
            </summary>
    </member>
    <member name="T:OpcXml.Da.ItemValueResultList">
      <summary>
            Contains a list of item results and revised default values for item access properties.
            </summary>
    </member>
    <member name="F:OpcXml.Da.ItemValueResultList.SamplingRate">
      <summary>
            The actual sampling rate used for items in a subscription.
            </summary>
    </member>
    <member name="F:OpcXml.Da.ItemValueResultList.SamplingRateSpecified">
      <remarks />
    </member>
    <member name="P:OpcXml.Da.ItemValueResultList.Item(System.Int32)">
      <summary>
            Accesses the items at the specified index.
            </summary>
    </member>
    <member name="T:OpcXml.Da.ItemValueList">
      <summary>
            Contains a list of item values.
            </summary>
    </member>
    <member name="P:OpcXml.Da.ItemValueList.Item(System.Int32)">
      <summary>
            Accesses the items at the specified index.
            </summary>
    </member>
    <member name="T:OpcXml.Da.Property">
      <summary>
            Defines identifiers for well-known properties.
            </summary>
    </member>
    <member name="F:OpcXml.Da.Property.DATATYPE">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Property.VALUE">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Property.QUALITY">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Property.TIMESTAMP">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Property.ACCESSRIGHTS">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Property.SCANRATE">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Property.EUTYPE">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Property.EUINFO">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Property.ENGINEERINGUINTS">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Property.DESCRIPTION">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Property.HIGHEU">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Property.LOWEU">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Property.HIGHIR">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Property.LOWIR">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Property.CLOSELABEL">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Property.OPENLABEL">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Property.TIMEZONE">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Property.CONDITION_STATUS">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Property.ALARM_QUICK_HELP">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Property.ALARM_AREA_LIST">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Property.PRIMARY_ALARM_AREA">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Property.CONDITION_LOGIC">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Property.LIMIT_EXCEEDED">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Property.DEADBAND">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Property.HIHI_LIMIT">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Property.HI_LIMIT">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Property.LO_LIMIT">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Property.LOLO_LIMIT">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Property.RATE_CHANGE_LIMIT">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Property.DEVIATION_LIMIT">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Property.SOUNDFILE">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Property.TYPE_SYSTEM_ID">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Property.DICTIONARY_ID">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Property.TYPE_ID">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Property.DICTIONARY">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Property.TYPE_DESCRIPTION">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Property.CONSISTENCY_WINDOW">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Property.WRITE_BEHAVIOR">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Property.UNCONVERTED_ITEM_ID">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Property.UNFILTERED_ITEM_ID">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Property.DATA_FILTER_VALUE">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Property.MINIMUM_VALUE">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Property.MAXIMUM_VALUE">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Property.VALUE_PRECISION">
      <remarks />
    </member>
    <member name="T:OpcXml.Da.Server">
      <summary>
            An in-process wrapper for a remote OPC XML-DA server (not thread safe).
            </summary>
    </member>
    <member name="M:OpcXml.Da.Server.#ctor">
      <summary>
            Initializes the object.
            </summary>
    </member>
    <member name="M:OpcXml.Da.Server.Dispose">
      <summary>
            This must be called explicitly by clients to ensure the COM server is released.
            </summary>
    </member>
    <member name="M:OpcXml.Da.Server.Initialize(Opc.URL,Opc.ConnectData)">
      <summary>
            Connects to the server with the specified URL and credentials.
            </summary>
    </member>
    <member name="M:OpcXml.Da.Server.Uninitialize">
      <summary>
            Disconnects from the server and releases all network resources.
            </summary>
    </member>
    <member name="E:OpcXml.Da.Server.ServerShutdown">
      <summary>
            An event to receive server shutdown notifications.
            </summary>
    </member>
    <member name="M:OpcXml.Da.Server.GetLocale">
      <summary>
            The locale used in any error messages or results returned to the client.
            </summary>
      <returns>The locale name in the format "[languagecode]-[country/regioncode]".</returns>
    </member>
    <member name="M:OpcXml.Da.Server.SetLocale(System.String)">
      <summary>
            Sets the locale used in any error messages or results returned to the client.
            </summary>
      <param name="locale">The locale name in the format "[languagecode]-[country/regioncode]".</param>
      <returns>A locale that the server supports and is the best match for the requested locale.</returns>
    </member>
    <member name="M:OpcXml.Da.Server.GetSupportedLocales">
      <summary>
            Returns the locales supported by the server
            </summary>
      <remarks>The first element in the array must be the default locale for the server.</remarks>
      <returns>An array of locales with the format "[languagecode]-[country/regioncode]".</returns>
    </member>
    <member name="M:OpcXml.Da.Server.GetErrorText(System.String,Opc.ResultID)">
      <summary>
            Returns the localized text for the specified result code.
            </summary>
      <param name="locale">The locale name in the format "[languagecode]-[country/regioncode]".</param>
      <param name="resultID">The result code identifier.</param>
      <returns>A message localized for the best match for the requested locale.</returns>
    </member>
    <member name="M:OpcXml.Da.Server.GetResultFilters">
      <summary>
            Returns the filters applied by the server to any item results returned to the client.
            </summary>
      <returns>A bit mask indicating which fields should be returned in any item results.</returns>
    </member>
    <member name="M:OpcXml.Da.Server.SetResultFilters(System.Int32)">
      <summary>
            Sets the filters applied by the server to any item results returned to the client.
            </summary>
      <param name="filters">A bit mask indicating which fields should be returned in any item results.</param>
    </member>
    <member name="M:OpcXml.Da.Server.GetStatus">
      <summary>
            Returns the current server status.
            </summary>
      <returns>The current server status.</returns>
    </member>
    <member name="M:OpcXml.Da.Server.Read(Opc.Da.Item[])">
      <summary>
            Reads the current values for a set of items. 
            </summary>
      <param name="items">The set of items to read.</param>
      <returns>The results of the read operation for each item.</returns>
    </member>
    <member name="M:OpcXml.Da.Server.Write(Opc.Da.ItemValue[])">
      <summary>
            Writes the value, quality and timestamp for a set of items.
            </summary>
      <param name="items">The set of item values to write.</param>
      <returns>The results of the write operation for each item.</returns>
    </member>
    <member name="M:OpcXml.Da.Server.CreateSubscription(Opc.Da.SubscriptionState)">
      <summary>
            Creates a new subscription.
            </summary>
      <param name="state">The initial state of the subscription.</param>
      <returns>The new subscription object.</returns>
    </member>
    <member name="M:OpcXml.Da.Server.CancelSubscription(Opc.Da.ISubscription)">
      <summary>
            Creates a new instance of the appropriate subcription object.
            </summary>
      <param name="subscription">The remote subscription object.</param>
    </member>
    <member name="M:OpcXml.Da.Server.Browse(Opc.ItemIdentifier,Opc.Da.BrowseFilters,Opc.Da.BrowsePosition@)">
      <summary>
            Fetches the children of a branch that meet the filter criteria.
            </summary>
      <param name="itemID">The identifier of branch which is the target of the search.</param>
      <param name="filters">The filters to use to limit the set of child elements returned.</param>
      <param name="position">An object used to continue a browse that could not be completed.</param>
      <returns>The set of elements found.</returns>
    </member>
    <member name="M:OpcXml.Da.Server.BrowseNext(Opc.Da.BrowsePosition@)">
      <summary>
            Continues a browse operation with previously specified search criteria.
            </summary>
      <param name="position">An object containing the browse operation state information.</param>
      <returns>The set of elements found.</returns>
    </member>
    <member name="M:OpcXml.Da.Server.GetProperties(Opc.ItemIdentifier[],Opc.Da.PropertyID[],System.Boolean)">
      <summary>
            Returns the item properties for a set of items.
            </summary>
      <param name="itemIDs">A list of item identifiers.</param>
      <param name="propertyIDs">A list of properties to fetch for each item.</param>
      <param name="returnValues">Whether the property values should be returned with the properties.</param>
      <returns>A list of properties for each item.</returns>
    </member>
    <member name="M:OpcXml.Da.Server.BrowseAccessPath(Opc.ItemIdentifier)">
      <summary>
            Provides a way to browse the available AccessPath for an item.
            </summary>
      <param name="itemID">The identifier for which the access paths will be browsed.</param>
      <returns>An array of possible access paths to the item.</returns>
    </member>
    <member name="F:OpcXml.Da.Server.m_proxy">
      <summary>
            The autogenerated proxy object for the XML-DA 1.0 web service.
            </summary>
    </member>
    <member name="F:OpcXml.Da.Server.m_url">
      <summary>
            The URL referencing the web service.
            </summary>
    </member>
    <member name="F:OpcXml.Da.Server.m_options">
      <summary>
            The default reqeust options for the server.
            </summary>
    </member>
    <member name="F:OpcXml.Da.Server.m_timebias">
      <summary>
            Keeps track of the difference between the server clock and the local clock.
            </summary>
    </member>
    <member name="F:OpcXml.Da.Server.m_lastUpdateTime">
      <summary>
            The last time an update was received from the server.
            </summary>
    </member>
    <member name="P:OpcXml.Da.Server.ServerTime">
      <summary>
            Returns an estimate of the UTC time at the server.
            </summary>
    </member>
    <member name="F:OpcXml.Da.Server.m_messageTables">
      <summary>
            Stores tables of error messages indexed by locale.
            </summary>
    </member>
    <member name="M:OpcXml.Da.Server.CacheResponse(System.String,OpcXml.Da10.ReplyBase,OpcXml.Da10.OPCError[])">
      <summary>
            Caches error messages and request statistics after each request.
            </summary>
    </member>
    <member name="M:OpcXml.Da.Server.PollCompleted(System.String,OpcXml.Da10.ReplyBase,OpcXml.Da10.OPCError[])">
      <summary>
            Called when a subscription receives a polled refresh response.
            </summary>
    </member>
    <member name="T:OpcXml.Da.Subscription">
      <summary>
            A subscription for a set of items on a single XML-DA server.
            </summary>
    </member>
    <member name="M:OpcXml.Da.Subscription.#ctor(OpcXml.Da.Server,OpcXml.Da10.Service,Opc.Da.SubscriptionState,System.Int32)">
      <summary>
            Initializes a new instance of a subscription.
            </summary>
    </member>
    <member name="M:OpcXml.Da.Subscription.Dispose">
      <summary>
            Releases any unmanaged resources used by the subscription.
            </summary>
    </member>
    <member name="P:OpcXml.Da.Subscription.Server">
      <summary>
            The server that the subscription is attached to.
            </summary>
    </member>
    <member name="E:OpcXml.Da.Subscription.DataChanged">
      <summary>
            An event to receive data change updates.
            </summary>
    </member>
    <member name="M:OpcXml.Da.Subscription.GetResultFilters">
      <summary>
            Returns the filters applied by the server to any item results returned to the client.
            </summary>
      <returns>A bit mask indicating which fields should be returned in any item results.</returns>
    </member>
    <member name="M:OpcXml.Da.Subscription.SetResultFilters(System.Int32)">
      <summary>
            Sets the filters applied by the server to any item results returned to the client.
            </summary>
      <param name="filters">A bit mask indicating which fields should be returned in any item results.</param>
    </member>
    <member name="M:OpcXml.Da.Subscription.GetState">
      <summary>
            Returns the current state of the subscription.
            </summary>
      <returns>The current state of the subscription.</returns>
    </member>
    <member name="M:OpcXml.Da.Subscription.ModifyState(System.Int32,Opc.Da.SubscriptionState)">
      <summary>
            Changes the state of a subscription.
            </summary>
      <param name="masks">A bit mask that indicates which elements of the subscription state are changing.</param>
      <param name="state">The new subscription state.</param>
      <returns>The actual subscption state after applying the changes.</returns>
    </member>
    <member name="M:OpcXml.Da.Subscription.AddItems(Opc.Da.Item[])">
      <summary>
            Adds items to the subscription.
            </summary>
      <param name="items">The set of items to add to the subscription.</param>
      <returns>The results of the add item operation for each item.</returns>
    </member>
    <member name="M:OpcXml.Da.Subscription.ModifyItems(System.Int32,Opc.Da.Item[])">
      <summary>
            Modifies the state of items in the subscription
            </summary>
      <param name="masks">Specifies which item state parameters are being modified.</param>
      <param name="items">The new state for each item.</param>
      <returns>The results of the modify item operation for each item.</returns>
    </member>
    <member name="M:OpcXml.Da.Subscription.RemoveItems(Opc.ItemIdentifier[])">
      <summary>
            Removes items from the subscription.
            </summary>
      <param name="items">The identifiers (i.e. server handles) for the items being removed.</param>
      <returns>The results of the remove item operation for each item.</returns>
    </member>
    <member name="M:OpcXml.Da.Subscription.Read(Opc.Da.Item[])">
      <summary>
            Reads the values for a set of items in the subscription.
            </summary>
      <param name="items">The identifiers (i.e. server handles) for the items being read.</param>
      <returns>The value for each of items.</returns>
    </member>
    <member name="M:OpcXml.Da.Subscription.Write(Opc.Da.ItemValue[])">
      <summary>
            Writes the value, quality and timestamp for a set of items in the subscription.
            </summary>
      <param name="items">The item values to write.</param>
      <returns>The results of the write operation for each item.</returns>
    </member>
    <member name="M:OpcXml.Da.Subscription.Read(Opc.Da.Item[],System.Object,Opc.Da.ReadCompleteEventHandler,Opc.IRequest@)">
      <summary>
            Begins an asynchronous read operation for a set of items.
            </summary>
      <param name="items">The set of items to read (must include the server handle).</param>
      <param name="requestHandle">An identifier for the request assigned by the caller.</param>
      <param name="callback">A delegate used to receive notifications when the request completes.</param>
      <param name="request">An object that contains the state of the request (used to cancel the request).</param>
      <returns>A set of results containing any errors encountered when the server validated the items.</returns>
    </member>
    <member name="M:OpcXml.Da.Subscription.Write(Opc.Da.ItemValue[],System.Object,Opc.Da.WriteCompleteEventHandler,Opc.IRequest@)">
      <summary>
            Begins an asynchronous write operation for a set of items.
            </summary>
      <param name="items">The set of item values to write (must include the server handle).</param>
      <param name="requestHandle">An identifier for the request assigned by the caller.</param>
      <param name="callback">A delegate used to receive notifications when the request completes.</param>
      <param name="request">An object that contains the state of the request (used to cancel the request).</param>
      <returns>A set of results containing any errors encountered when the server validated the items.</returns>
    </member>
    <member name="M:OpcXml.Da.Subscription.Cancel(Opc.IRequest,Opc.Da.CancelCompleteEventHandler)">
      <summary>
            Cancels an asynchronous read or write operation.
            </summary>
      <param name="request">The object returned from the BeginRead or BeginWrite request.</param>
      <param name="callback">The function to invoke when the cancel completes.</param>
    </member>
    <member name="M:OpcXml.Da.Subscription.Refresh">
      <summary>
            Causes the server to send a data changed notification for all active items. 
            </summary>
    </member>
    <member name="M:OpcXml.Da.Subscription.Refresh(System.Object,Opc.IRequest@)">
      <summary>
            Causes the server to send a data changed notification for all active items. 
            </summary>
      <param name="requestHandle">An identifier for the request assigned by the caller.</param>
      <param name="request">An object that contains the state of the request (used to cancel the request).</param>
      <returns>A set of results containing any errors encountered when the server validated the items.</returns>
    </member>
    <member name="M:OpcXml.Da.Subscription.SetEnabled(System.Boolean)">
      <summary>
            Enables or disables data change notifications from the server.
            </summary>
      <param name="enabled">Whether data change notifications are enabled.</param>
    </member>
    <member name="M:OpcXml.Da.Subscription.GetEnabled">
      <summary>
            Checks whether data change notifications from the server are enabled.
            </summary>
      <returns>Whether data change notifications are enabled.</returns>
    </member>
    <member name="F:OpcXml.Da.Subscription.m_pingRate">
      <summary>
            The maximum time between polled refreshes.
            </summary>
    </member>
    <member name="F:OpcXml.Da.Subscription.m_enabled">
      <summary>
            Whether the subscription is currently enabled.
            </summary>
    </member>
    <member name="F:OpcXml.Da.Subscription.m_items">
      <summary>
            An ordered list of all items which are part of the subscription.
            </summary>
    </member>
    <member name="F:OpcXml.Da.Subscription.m_pollTimer">
      <summary>
            A timer used to schedule polled refreshes.
            </summary>
    </member>
    <member name="F:OpcXml.Da.Subscription.m_basicPollTimer">
      <summary>
            A timer used to waiting for hold time in basic polled subscription.
            </summary>
    </member>
    <member name="F:OpcXml.Da.Subscription.m_counter">
      <summary>
            A counter used to create unique subscription names.
            </summary>
    </member>
    <member name="F:OpcXml.Da.Subscription.m_server">
      <summary>
            The containing server object.
            </summary>
    </member>
    <member name="F:OpcXml.Da.Subscription.m_proxy">
      <summary>
            The autogenerated proxy object for the XML-DA 1.0 web service.
            </summary>
    </member>
    <member name="E:OpcXml.Da.Subscription.m_callback">
      <summary>
            The event raised when data change events occur.
            </summary>
    </member>
    <member name="F:OpcXml.Da.Subscription.m_filters">
      <summary>
            The current subscription result filters options.
            </summary>
    </member>
    <member name="F:OpcXml.Da.Subscription.m_state">
      <summary>
            The current subscription state.
            </summary>
    </member>
    <member name="M:OpcXml.Da.Subscription.OnDataChange(OpcXml.Da.ItemValueResultList)">
      <summary>
            Sends data change notifications for all active items.
            </summary>
    </member>
    <member name="M:OpcXml.Da.Subscription.Subscribe(System.Collections.ArrayList)">
      <summary>
            Establishes a subscription for the current set of items.
            </summary>
    </member>
    <member name="M:OpcXml.Da.Subscription.Unsubscribe">
      <summary>
            Closes the current subscription with the server.
            </summary>
    </member>
    <member name="M:OpcXml.Da.Subscription.OnPollCompleted(System.IAsyncResult)">
      <summary>
            Called when a poll completes.
            </summary>
    </member>
    <member name="M:OpcXml.Da.Subscription.SchedulePoll">
      <summary>
            Starts polling for the current subscription.
            </summary>
    </member>
    <member name="M:OpcXml.Da.Subscription.Poll(System.Object)">
      <summary>
            Starts polling for the current subscription.
            </summary>
    </member>
    <member name="T:OpcXml.Da.Type">
      <summary>
            Defines constants for all supported XML-DA types.
            </summary>
    </member>
    <member name="F:OpcXml.Da.Type.ANY_TYPE">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Type.SBYTE">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Type.BYTE">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Type.SHORT">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Type.USHORT">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Type.INT">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Type.UINT">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Type.LONG">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Type.ULONG">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Type.FLOAT">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Type.DOUBLE">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Type.DECIMAL">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Type.DATETIME">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Type.TIME">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Type.DATE">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Type.DURATION">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Type.BOOLEAN">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Type.STRING">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Type.QNAME">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Type.BINARY">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Type.ARRAY_SBYTE">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Type.ARRAY_BYTE">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Type.ARRAY_SHORT">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Type.ARRAY_USHORT">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Type.ARRAY_INT">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Type.ARRAY_UINT">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Type.ARRAY_LONG">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Type.ARRAY_ULONG">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Type.ARRAY_FLOAT">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Type.ARRAY_DOUBLE">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Type.ARRAY_DECIMAL">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Type.ARRAY_DATETIME">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Type.ARRAY_BOOLEAN">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Type.ARRAY_STRING">
      <remarks />
    </member>
    <member name="F:OpcXml.Da.Type.ARRAY_ANY_TYPE">
      <remarks />
    </member>
    <member name="T:OpcXml.Da.Wrapper.RemoteSubscription">
      <summary>
            Manages an item value cache for a subscription.
            </summary>
    </member>
    <member name="M:OpcXml.Da.Wrapper.RemoteSubscription.#ctor">
      <summary>
            Initializes the object.
            </summary>
    </member>
    <member name="P:OpcXml.Da.Wrapper.RemoteSubscription.ItemPath">
      <summary>
            The item path which identifies the remote server which handles the subscription.
            </summary>
    </member>
    <member name="P:OpcXml.Da.Wrapper.RemoteSubscription.UpdateRate">
      <summary>
            The update rate for the subscription.
            </summary>
    </member>
    <member name="P:OpcXml.Da.Wrapper.RemoteSubscription.Deadband">
      <summary>
            The nominal deadband for the subscription.
            </summary>
    </member>
    <member name="E:OpcXml.Da.Wrapper.RemoteSubscription.DataChanged">
      <summary>
            A event raised when a new data change update arrives from the remote server.
            </summary>
    </member>
    <member name="M:OpcXml.Da.Wrapper.RemoteSubscription.Initialize(System.String,System.Collections.Hashtable,OpcXml.Da.ItemList,OpcXml.Da.SubscribeItemValueResult[],System.Boolean,Opc.Da.ItemResult[])">
      <summary>
            Initializes the object by creating the remote subscription. 
            </summary>
    </member>
    <member name="M:OpcXml.Da.Wrapper.RemoteSubscription.AddItems(OpcXml.Da.ItemList,OpcXml.Da.SubscribeItemValueResult[],System.Boolean,Opc.Da.ItemResult[])">
      <summary>
            Adds items to the subscription.
            </summary>
    </member>
    <member name="M:OpcXml.Da.Wrapper.RemoteSubscription.RemoveItems(Opc.ItemIdentifier[])">
      <summary>
            Removes items from the subscription.
            </summary>
    </member>
    <member name="M:OpcXml.Da.Wrapper.RemoteSubscription.Dispose">
      <summary>
            Disposes of the subscription and disposes all contained cache objects.
            </summary>
    </member>
    <member name="M:OpcXml.Da.Wrapper.RemoteSubscription.OnIncomingDataChanged(System.Object,System.Object,Opc.Da.ItemValueResult[])">
      <summary>
            Handles data changed events from the remote server.
            </summary>
    </member>
    <member name="T:OpcXml.Da.Wrapper.Server">
      <summary>
            A XML-DA server implementation that wraps a COM-DA server.
            </summary>
    </member>
    <member name="M:OpcXml.Da.Wrapper.Server.#ctor">
      <summary>
            Initializes the XML-DA server.
            </summary>
    </member>
    <member name="M:OpcXml.Da.Wrapper.Server.Dispose">
      <summary>
            Releases any unmanaged resources used by the server.
            </summary>
    </member>
    <member name="P:OpcXml.Da.Wrapper.Server.SupportedLocales">
      <summary>
            The names of the locales supported by the server.
            </summary>
    </member>
    <member name="M:OpcXml.Da.Wrapper.Server.WrapServer(System.String,Opc.Da.IServer,System.Boolean)">
      <summary>
            Connects to the server with the specified address.
            </summary>
    </member>
    <member name="M:OpcXml.Da.Wrapper.Server.GetStatus(System.String,System.String,Opc.Da.ServerStatus@)">
      <summary>
            Returns the current server status.
            </summary>
    </member>
    <member name="M:OpcXml.Da.Wrapper.Server.Read(OpcXml.Da.RequestOptions,OpcXml.Da.ItemList,OpcXml.Da.ItemValueResultList@,OpcXml.Da.Error[]@)">
      <summary>
            Reads a set of items.
            </summary>
    </member>
    <member name="M:OpcXml.Da.Wrapper.Server.Write(OpcXml.Da.RequestOptions,OpcXml.Da.ItemValueList,System.Boolean,OpcXml.Da.ItemValueResultList@,OpcXml.Da.Error[]@)">
      <summary>
            Writes a set of items and, if requested, returns the current values.
            </summary>
    </member>
    <member name="M:OpcXml.Da.Wrapper.Server.Subscribe(OpcXml.Da.RequestOptions,OpcXml.Da.ItemList,System.TimeSpan,System.Boolean,System.String@,OpcXml.Da.ItemValueResultList@,OpcXml.Da.Error[]@)">
      <summary>
            Establishes a subscription for the set of items.
            </summary>
    </member>
    <member name="M:OpcXml.Da.Wrapper.Server.PolledRefresh(OpcXml.Da.RequestOptions,System.String[],System.TimeSpan,System.TimeSpan,System.Boolean,System.String[]@,OpcXml.Da.ItemValueResultList[]@,OpcXml.Da.Error[]@,System.Boolean@)">
      <summary>
            Polls the server for the any item changes for one or more subscriptions.
            </summary>
    </member>
    <member name="M:OpcXml.Da.Wrapper.Server.Unsubscribe(System.String)">
      <summary>
            Terminates one or more subscriptions.
            </summary>
    </member>
    <member name="M:OpcXml.Da.Wrapper.Server.Browse(System.String,System.String,System.Boolean,Opc.ItemIdentifier,Opc.Da.BrowseFilters,System.String@,System.Boolean@,Opc.Da.BrowseElement[]@,OpcXml.Da.Error[]@)">
      <summary>
            Returns a set of elements at the specified position and that meet the filter criteria.
            </summary>
    </member>
    <member name="M:OpcXml.Da.Wrapper.Server.BrowseRoot(Opc.Da.BrowseElement[],Opc.ItemIdentifier,Opc.Da.BrowseFilters,System.String,System.Boolean,Opc.Da.BrowsePosition@)">
      <summary>
            Returns the names of the wrapped servers.
            </summary>
    </member>
    <member name="M:OpcXml.Da.Wrapper.Server.GetProperties(System.String,System.String,System.Boolean,Opc.ItemIdentifier[],Opc.Da.PropertyID[],System.String,System.Boolean,Opc.Da.ItemPropertyCollection[]@,OpcXml.Da.Error[]@)">
      <summary>
            Returns the specified properties for a set of items.
            </summary>
    </member>
    <member name="F:OpcXml.Da.Wrapper.Server.m_servers">
      <summary>
            The set of COM servers being wrapped by the XML-DA server.
            </summary>
    </member>
    <member name="F:OpcXml.Da.Wrapper.Server.m_primaryServer">
      <summary>
            The item path for the wrapped server that should be used for get status requests.
            </summary>
    </member>
    <member name="F:OpcXml.Da.Wrapper.Server.m_status">
      <summary>
            The current status of the XML-DA server (distinct from the status of the COM-DA server).
            </summary>
    </member>
    <member name="F:OpcXml.Da.Wrapper.Server.m_pingTimer">
      <summary>
            A timer that clears out expired subscriptions.
            </summary>
    </member>
    <member name="F:OpcXml.Da.Wrapper.Server.m_subscriptionPollTimes">
      <summary>
            A table of last pool times indexed by subscription handle.
            </summary>
    </member>
    <member name="F:OpcXml.Da.Wrapper.Server.m_supportedLocales">
      <summary>
            The names of the locales supported by the server.
            </summary>
    </member>
    <member name="F:OpcXml.Da.Wrapper.Server.m_resourceManager">
      <summary>
            The resource manager used to access localized resources.
            </summary>
    </member>
    <member name="F:OpcXml.Da.Wrapper.Server.m_positions">
      <summary>
            Stores browse positions for incomplete browse operations.
            </summary>
    </member>
    <member name="F:OpcXml.Da.Wrapper.Server.m_subscriptions">
      <summary>
            Currently active client subscriptions.
            </summary>
    </member>
    <member name="F:OpcXml.Da.Wrapper.Server.m_remoteSubscriptions">
      <summary>
            Current remote subscriptions.
            </summary>
    </member>
    <member name="M:OpcXml.Da.Wrapper.Server.GetString(System.String,System.String)">
      <summary>
            Returns a localized string with the specified name.
            </summary>
    </member>
    <member name="M:OpcXml.Da.Wrapper.Server.CreateReply(System.String,System.String)">
      <summary>
            Initializes a reply object.
            </summary>
    </member>
    <member name="M:OpcXml.Da.Wrapper.Server.CheckState(System.String,System.Boolean)">
      <summary>
            Checks that the server is aply to process requests.
            </summary>
    </member>
    <member name="M:OpcXml.Da.Wrapper.Server.CreateException(System.String,System.Xml.XmlQualifiedName)">
      <summary>
            Creates a SOAP exception for the specified error.
            </summary>
    </member>
    <member name="M:OpcXml.Da.Wrapper.Server.CreateException(System.String,System.Exception)">
      <summary>
            Creates a SOAP exception for the specified exception.
            </summary>
    </member>
    <member name="M:OpcXml.Da.Wrapper.Server.CheckDeadline(System.String,System.DateTime)">
      <summary>
            Verifies that the request deadline has been met.
            </summary>
    </member>
    <member name="M:OpcXml.Da.Wrapper.Server.ApplyItemListDefaults(OpcXml.Da.ItemList)">
      <summary>
            Updates the item objects with values specified at the list level.
            </summary>
    </member>
    <member name="M:OpcXml.Da.Wrapper.Server.CheckDeadline(System.String,System.DateTime,System.Object)">
      <summary>
            Generates a list of error results if the deadline has already passed.
            </summary>
    </member>
    <member name="M:OpcXml.Da.Wrapper.Server.ApplyOptions(System.String,OpcXml.Da.RequestOptions,System.Object)">
      <summary>
            Applies the request objects to the results.
            </summary>
    </member>
    <member name="M:OpcXml.Da.Wrapper.Server.GetError(System.String,System.String,Opc.ResultID)">
      <summary>
            Constructs an error object for a result identifier.
            </summary>
    </member>
    <member name="M:OpcXml.Da.Wrapper.Server.GetErrors(System.String,System.Object)">
      <summary>
            Constructs an error object for a result identifier.
            </summary>
    </member>
    <member name="M:OpcXml.Da.Wrapper.Server.CleanupSubscriptions(System.Object)">
      <summary>
            Cleans up any inactive subscriptions.
            </summary>
    </member>
    <member name="M:OpcXml.Da.Wrapper.Server.CancelSubscription(OpcXml.Da.Wrapper.Subscription)">
      <summary>
            Cancels a subscription and releases all resources.
            </summary>
    </member>
    <member name="M:OpcXml.Da.Wrapper.Server.DataChanged(System.Object,System.Object,Opc.Da.ItemValueResult[])">
      <summary>
            Notify each subscription object that new data has arrived.
            </summary>
    </member>
    <member name="M:OpcXml.Da.Wrapper.Server.Read(System.String,System.String,Opc.Da.Item[],Opc.Da.ItemValueResult[])">
      <summary>
            Reads all items with the specifed item path.
            </summary>
    </member>
    <member name="M:OpcXml.Da.Wrapper.Server.Write(System.String,System.String,Opc.Da.ItemValue[],System.Boolean,Opc.Da.ItemValueResult[])">
      <summary>
            Writes all items with the specifed item path.
            </summary>
    </member>
    <member name="M:OpcXml.Da.Wrapper.Server.GetProperties(System.String,System.String,Opc.ItemIdentifier[],Opc.Da.PropertyID[],System.Boolean,Opc.Da.ItemPropertyCollection[])">
      <summary>
            Gets the properties with for specified items with the specifed item path.
            </summary>
    </member>
    <member name="M:OpcXml.Da.Wrapper.Server.CheckStringValue(Opc.Da.ItemValue)">
      <summary>
            Ensures that the item value contains valid data.
            </summary>
    </member>
    <member name="M:OpcXml.Da.Wrapper.Server.CheckStringValue(Opc.Da.ItemProperty)">
      <summary>
            Ensures that the item property contains valid data.
            </summary>
    </member>
    <member name="T:OpcXml.Da.Wrapper.Subscription">
      <summary>
            Manages an item value cache for a subscription.
            </summary>
    </member>
    <member name="P:OpcXml.Da.Wrapper.Subscription.Handle">
      <summary>
            The unique handle assigned to the subscription.
            </summary>
    </member>
    <member name="P:OpcXml.Da.Wrapper.Subscription.PingTime">
      <summary>
            The ping time used for the subscription.
            </summary>
    </member>
    <member name="M:OpcXml.Da.Wrapper.Subscription.#ctor(System.String,System.TimeSpan)">
      <summary>
            Initializes the cache with a table of servers, a handle and a ping time.
            </summary>
    </member>
    <member name="M:OpcXml.Da.Wrapper.Subscription.Initialize(Opc.Da.ItemResult[],OpcXml.Da.SubscribeItemValueResult[])">
      <summary>
            Initializes the cache with the initial set of results. 
            </summary>
    </member>
    <member name="M:OpcXml.Da.Wrapper.Subscription.HasExpired">
      <summary>
            Checks if the subcription has expired.
            </summary>
    </member>
    <member name="M:OpcXml.Da.Wrapper.Subscription.GetItems">
      <summary>
            Returns the current set of item values.
            </summary>
    </member>
    <member name="M:OpcXml.Da.Wrapper.Subscription.GetItemValues(System.Boolean)">
      <summary>
            Returns the current set of item values.
            </summary>
    </member>
    <member name="M:OpcXml.Da.Wrapper.Subscription.OnDataChanged(Opc.Da.ItemValueResult[])">
      <summary>
            Called when data updates are received from the server.
            </summary>
    </member>
    <member name="T:OpcXml.Da10.Request">
      <summary>
            Contains state information for a single asynchronous request.
            </summary>
    </member>
    <member name="M:OpcXml.Da10.Request.GetRelativeTime(System.DateTime)">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Request.GetRequestOptions(OpcXml.Da10.RequestOptions)">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Request.GetRequestOptions(System.String,System.Int32)">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Request.GetReplyBase(System.String,OpcXml.Da.ReplyBase)">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Request.GetErrors(OpcXml.Da.Error[])">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Request.GetErrors(OpcXml.Da10.OPCError[])">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Request.GetResultID(System.Xml.XmlQualifiedName)">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Request.GetResultID(Opc.ResultID)">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Request.GetBrowseFilter(Opc.Da.browseFilter)">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Request.GetBrowseFilter(OpcXml.Da10.browseFilter)">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Request.GetPropertyIDs(System.Xml.XmlQualifiedName[])">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Request.GetPropertyID(System.Xml.XmlQualifiedName)">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Request.GetPropertyNames(Opc.Da.PropertyID[])">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Request.GetPropertyName(Opc.Da.PropertyID)">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Request.GetBrowseElements(OpcXml.Da10.BrowseElement[])">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Request.GetBrowseElements(Opc.Da.BrowseElement[])">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Request.GetBrowseElement(OpcXml.Da10.BrowseElement)">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Request.GetBrowseElement(Opc.Da.BrowseElement)">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Request.GetItemProperty(OpcXml.Da10.ItemProperty)">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Request.GetItemProperty(Opc.Da.ItemProperty)">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Request.MarshalPropertyValue(Opc.Da.PropertyID,System.Object)">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Request.UnmarshalPropertyValue(Opc.Da.PropertyID,System.Object)">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Request.GetType(System.Type)">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Request.GetType(System.Xml.XmlQualifiedName)">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Request.GetItemIdentifiers(OpcXml.Da10.ItemIdentifier[])">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Request.GetItemIdentifiers(Opc.ItemIdentifier[])">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Request.GetItemPropertyCollections(OpcXml.Da10.PropertyReplyList[])">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Request.GetItemPropertyCollections(Opc.Da.ItemPropertyCollection[])">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Request.GetServerState(OpcXml.Da10.serverState)">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Request.GetServerState(Opc.Da.serverState)">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Request.GetServerStatus(OpcXml.Da10.ReplyBase,OpcXml.Da10.ServerStatus)">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Request.GetServerStatus(Opc.Da.ServerStatus,System.String[])">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Request.GetSubscribeLists(OpcXml.Da10.SubscribeRequestItemList[])">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Request.GetSubscribeLists(OpcXml.Da.ItemList[])">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Request.GetSubscribeList(OpcXml.Da10.SubscribeRequestItemList)">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Request.GetSubscribeList(OpcXml.Da.ItemList)">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Request.GetSubscribeItem(OpcXml.Da10.SubscribeRequestItem)">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Request.GetSubscribeItem(Opc.Da.Item)">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Request.GetSubscribeRefreshLists(OpcXml.Da10.SubscribePolledRefreshReplyItemList[])">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Request.GetSubscribeRefreshLists(OpcXml.Da.ItemValueResultList[])">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Request.GetSubscribeRefreshList(OpcXml.Da10.SubscribePolledRefreshReplyItemList)">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Request.GetSubscribeRefreshList(OpcXml.Da.ItemValueResultList)">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Request.GetItemLists(OpcXml.Da10.ReadRequestItemList[])">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Request.GetItemLists(OpcXml.Da.ItemList[])">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Request.GetItemList(OpcXml.Da10.ReadRequestItemList)">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Request.GetItemList(OpcXml.Da.ItemList)">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Request.GetItem(OpcXml.Da10.ReadRequestItem)">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Request.GetItem(Opc.Da.Item)">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Request.GetItemValueLists(OpcXml.Da10.WriteRequestItemList[])">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Request.GetItemValueLists(OpcXml.Da.ItemValueList[])">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Request.GetItemValueList(OpcXml.Da10.WriteRequestItemList)">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Request.GetItemValueList(OpcXml.Da.ItemValueList)">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Request.GetItemValue(OpcXml.Da10.ItemValue)">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Request.GetItemValue(Opc.Da.ItemValue)">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Request.GetResultLists(OpcXml.Da10.ReplyItemList[])">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Request.GetResultLists(OpcXml.Da.ItemValueResultList[])">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Request.GetResultList(OpcXml.Da10.ReplyItemList)">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Request.GetResultList(OpcXml.Da.ItemValueResultList)">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Request.GetResultItem(OpcXml.Da10.ItemValue)">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Request.GetResultItem(Opc.Da.ItemValueResult)">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Request.GetSubscribeResultLists(OpcXml.Da10.SubscribeReplyItemList[])">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Request.GetSubscribeResultLists(OpcXml.Da.ItemValueResultList[])">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Request.GetSubscribeResultList(OpcXml.Da10.SubscribeReplyItemList)">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Request.GetSubscribeResultList(OpcXml.Da.ItemValueResultList)">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Request.GetSubscribeResultItem(OpcXml.Da10.SubscribeItemValue)">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Request.GetSubscribeResultItem(OpcXml.Da.SubscribeItemValueResult)">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Request.GetQuality(OpcXml.Da10.OPCQuality)">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Request.GetQuality(Opc.Da.Quality)">
      <remarks />
    </member>
    <member name="T:OpcXml.Da10.Service">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Service.#ctor">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Service.GetStatus(System.String,System.String,OpcXml.Da10.ServerStatus@)">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Service.BeginGetStatus(System.String,System.String,System.AsyncCallback,System.Object)">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Service.EndGetStatus(System.IAsyncResult,OpcXml.Da10.ServerStatus@)">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Service.Read(OpcXml.Da10.RequestOptions,OpcXml.Da10.ReadRequestItemList,OpcXml.Da10.ReplyItemList@,OpcXml.Da10.OPCError[]@)">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Service.BeginRead(OpcXml.Da10.RequestOptions,OpcXml.Da10.ReadRequestItemList,System.AsyncCallback,System.Object)">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Service.EndRead(System.IAsyncResult,OpcXml.Da10.ReplyItemList@,OpcXml.Da10.OPCError[]@)">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Service.Write(OpcXml.Da10.RequestOptions,OpcXml.Da10.WriteRequestItemList,System.Boolean,OpcXml.Da10.ReplyItemList@,OpcXml.Da10.OPCError[]@)">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Service.BeginWrite(OpcXml.Da10.RequestOptions,OpcXml.Da10.WriteRequestItemList,System.Boolean,System.AsyncCallback,System.Object)">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Service.EndWrite(System.IAsyncResult,OpcXml.Da10.ReplyItemList@,OpcXml.Da10.OPCError[]@)">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Service.Subscribe(OpcXml.Da10.RequestOptions,OpcXml.Da10.SubscribeRequestItemList,System.Boolean,System.Int32,OpcXml.Da10.SubscribeReplyItemList@,OpcXml.Da10.OPCError[]@,System.String@)">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Service.BeginSubscribe(OpcXml.Da10.RequestOptions,OpcXml.Da10.SubscribeRequestItemList,System.Boolean,System.Int32,System.AsyncCallback,System.Object)">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Service.EndSubscribe(System.IAsyncResult,OpcXml.Da10.SubscribeReplyItemList@,OpcXml.Da10.OPCError[]@,System.String@)">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Service.SubscriptionPolledRefresh(OpcXml.Da10.RequestOptions,System.String[],System.DateTime,System.Boolean,System.Int32,System.Boolean,System.String[]@,OpcXml.Da10.SubscribePolledRefreshReplyItemList[]@,OpcXml.Da10.OPCError[]@,System.Boolean@)">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Service.BeginSubscriptionPolledRefresh(OpcXml.Da10.RequestOptions,System.String[],System.DateTime,System.Boolean,System.Int32,System.Boolean,System.AsyncCallback,System.Object,System.Int32)">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Service.EndSubscriptionPolledRefresh(System.IAsyncResult,System.String[]@,OpcXml.Da10.SubscribePolledRefreshReplyItemList[]@,OpcXml.Da10.OPCError[]@,System.Boolean@)">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Service.SubscriptionCancel(System.String,System.String@)">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Service.BeginSubscriptionCancel(System.String,System.String,System.AsyncCallback,System.Object)">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Service.EndSubscriptionCancel(System.IAsyncResult,System.String@)">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Service.Browse(System.Xml.XmlQualifiedName[],System.String,System.String,System.String,System.String,System.String@,System.Int32,OpcXml.Da10.browseFilter,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,OpcXml.Da10.BrowseElement[]@,OpcXml.Da10.OPCError[]@,System.Boolean@)">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Service.BeginBrowse(System.Xml.XmlQualifiedName[],System.String,System.String,System.String,System.String,System.String,System.Int32,OpcXml.Da10.browseFilter,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.AsyncCallback,System.Object)">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Service.EndBrowse(System.IAsyncResult,System.String@,OpcXml.Da10.BrowseElement[]@,OpcXml.Da10.OPCError[]@,System.Boolean@)">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Service.GetProperties(OpcXml.Da10.ItemIdentifier[],System.Xml.XmlQualifiedName[],System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,OpcXml.Da10.PropertyReplyList[]@,OpcXml.Da10.OPCError[]@)">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Service.BeginGetProperties(OpcXml.Da10.ItemIdentifier[],System.Xml.XmlQualifiedName[],System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.AsyncCallback,System.Object)">
      <remarks />
    </member>
    <member name="M:OpcXml.Da10.Service.EndGetProperties(System.IAsyncResult,OpcXml.Da10.PropertyReplyList[]@,OpcXml.Da10.OPCError[]@)">
      <remarks />
    </member>
    <member name="T:OpcXml.Da10.BeginInvokeWatcher">
      <summary>
            Watch BeginInvoke whether callback method is called.
            </summary>
    </member>
    <member name="T:OpcXml.Da10.ReplyBase">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.ReplyBase.RcvTime">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.ReplyBase.ReplyTime">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.ReplyBase.ClientRequestHandle">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.ReplyBase.RevisedLocaleID">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.ReplyBase.ServerState">
      <remarks />
    </member>
    <member name="T:OpcXml.Da10.serverState">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.serverState.running">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.serverState.failed">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.serverState.noConfig">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.serverState.suspended">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.serverState.test">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.serverState.commFault">
      <remarks />
    </member>
    <member name="T:OpcXml.Da10.PropertyReplyList">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.PropertyReplyList.Properties">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.PropertyReplyList.ItemPath">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.PropertyReplyList.ItemName">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.PropertyReplyList.ResultID">
      <remarks />
    </member>
    <member name="T:OpcXml.Da10.ItemProperty">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.ItemProperty.Value">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.ItemProperty.Name">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.ItemProperty.Description">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.ItemProperty.ItemPath">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.ItemProperty.ItemName">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.ItemProperty.ResultID">
      <remarks />
    </member>
    <member name="T:OpcXml.Da10.ItemIdentifier">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.ItemIdentifier.ItemPath">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.ItemIdentifier.ItemName">
      <remarks />
    </member>
    <member name="T:OpcXml.Da10.BrowseElement">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.BrowseElement.Properties">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.BrowseElement.Name">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.BrowseElement.ItemPath">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.BrowseElement.ItemName">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.BrowseElement.IsItem">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.BrowseElement.HasChildren">
      <remarks />
    </member>
    <member name="T:OpcXml.Da10.SubscribePolledRefreshReplyItemList">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.SubscribePolledRefreshReplyItemList.Items">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.SubscribePolledRefreshReplyItemList.SubscriptionHandle">
      <remarks />
    </member>
    <member name="T:OpcXml.Da10.ItemValue">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.ItemValue.DiagnosticInfo">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.ItemValue.Value">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.ItemValue.Quality">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.ItemValue.ItemPath">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.ItemValue.ItemName">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.ItemValue.ClientItemHandle">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.ItemValue.Timestamp">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.ItemValue.TimestampSpecified">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.ItemValue.ResultID">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.ItemValue.ValueTypeQualifier">
      <remarks />
    </member>
    <member name="T:OpcXml.Da10.OPCQuality">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.OPCQuality.QualityField">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.OPCQuality.LimitField">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.OPCQuality.VendorField">
      <remarks />
    </member>
    <member name="T:OpcXml.Da10.qualityBits">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.qualityBits.bad">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.qualityBits.badConfigurationError">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.qualityBits.badNotConnected">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.qualityBits.badDeviceFailure">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.qualityBits.badSensorFailure">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.qualityBits.badLastKnownValue">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.qualityBits.badCommFailure">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.qualityBits.badOutOfService">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.qualityBits.badWaitingForInitialData">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.qualityBits.uncertain">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.qualityBits.uncertainLastUsableValue">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.qualityBits.uncertainSensorNotAccurate">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.qualityBits.uncertainEUExceeded">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.qualityBits.uncertainSubNormal">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.qualityBits.good">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.qualityBits.goodLocalOverride">
      <remarks />
    </member>
    <member name="T:OpcXml.Da10.limitBits">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.limitBits.none">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.limitBits.low">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.limitBits.high">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.limitBits.constant">
      <remarks />
    </member>
    <member name="T:OpcXml.Da10.SubscribeItemValue">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.SubscribeItemValue.ItemValue">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.SubscribeItemValue.RevisedSamplingRate">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.SubscribeItemValue.RevisedSamplingRateSpecified">
      <remarks />
    </member>
    <member name="T:OpcXml.Da10.SubscribeReplyItemList">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.SubscribeReplyItemList.Items">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.SubscribeReplyItemList.RevisedSamplingRate">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.SubscribeReplyItemList.RevisedSamplingRateSpecified">
      <remarks />
    </member>
    <member name="T:OpcXml.Da10.SubscribeRequestItem">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.SubscribeRequestItem.ItemPath">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.SubscribeRequestItem.ReqType">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.SubscribeRequestItem.ItemName">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.SubscribeRequestItem.ClientItemHandle">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.SubscribeRequestItem.Deadband">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.SubscribeRequestItem.DeadbandSpecified">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.SubscribeRequestItem.RequestedSamplingRate">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.SubscribeRequestItem.RequestedSamplingRateSpecified">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.SubscribeRequestItem.EnableBuffering">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.SubscribeRequestItem.EnableBufferingSpecified">
      <remarks />
    </member>
    <member name="T:OpcXml.Da10.SubscribeRequestItemList">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.SubscribeRequestItemList.Items">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.SubscribeRequestItemList.ItemPath">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.SubscribeRequestItemList.ReqType">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.SubscribeRequestItemList.Deadband">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.SubscribeRequestItemList.DeadbandSpecified">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.SubscribeRequestItemList.RequestedSamplingRate">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.SubscribeRequestItemList.RequestedSamplingRateSpecified">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.SubscribeRequestItemList.EnableBuffering">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.SubscribeRequestItemList.EnableBufferingSpecified">
      <remarks />
    </member>
    <member name="T:OpcXml.Da10.WriteRequestItemList">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.WriteRequestItemList.Items">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.WriteRequestItemList.ItemPath">
      <remarks />
    </member>
    <member name="T:OpcXml.Da10.OPCError">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.OPCError.Text">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.OPCError.ID">
      <remarks />
    </member>
    <member name="T:OpcXml.Da10.ReplyItemList">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.ReplyItemList.Items">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.ReplyItemList.Reserved">
      <remarks />
    </member>
    <member name="T:OpcXml.Da10.ReadRequestItem">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.ReadRequestItem.ItemPath">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.ReadRequestItem.ReqType">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.ReadRequestItem.ItemName">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.ReadRequestItem.ClientItemHandle">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.ReadRequestItem.MaxAge">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.ReadRequestItem.MaxAgeSpecified">
      <remarks />
    </member>
    <member name="T:OpcXml.Da10.ReadRequestItemList">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.ReadRequestItemList.Items">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.ReadRequestItemList.ItemPath">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.ReadRequestItemList.ReqType">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.ReadRequestItemList.MaxAge">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.ReadRequestItemList.MaxAgeSpecified">
      <remarks />
    </member>
    <member name="T:OpcXml.Da10.RequestOptions">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.RequestOptions.RequestDeadline">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.RequestOptions.RequestDeadlineSpecified">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.RequestOptions.ReturnErrorText">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.RequestOptions.ReturnDiagnosticInfo">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.RequestOptions.ReturnItemTime">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.RequestOptions.ReturnItemPath">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.RequestOptions.ReturnItemName">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.RequestOptions.ClientRequestHandle">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.RequestOptions.LocaleID">
      <remarks />
    </member>
    <member name="T:OpcXml.Da10.ServerStatus">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.ServerStatus.StatusInfo">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.ServerStatus.VendorInfo">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.ServerStatus.SupportedLocaleIDs">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.ServerStatus.SupportedInterfaceVersions">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.ServerStatus.StartTime">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.ServerStatus.ProductVersion">
      <remarks />
    </member>
    <member name="T:OpcXml.Da10.InterfaceVersion">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.InterfaceVersion.XML_DA_Version_1_0">
      <remarks />
    </member>
    <member name="T:OpcXml.Da10.browseFilter">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.browseFilter.all">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.browseFilter.branch">
      <remarks />
    </member>
    <member name="F:OpcXml.Da10.browseFilter.item">
      <remarks />
    </member>
    <member name="T:OpcXml.Factory">
      <summary>
            A class used to instantiate XML server object.
            </summary>
    </member>
    <member name="M:OpcXml.Factory.#ctor">
      <summary>
            Initializes an instance to auto-detect the COM server.
            </summary>
    </member>
    <member name="M:OpcXml.Factory.#ctor(System.Type,System.Boolean)">
      <summary>
            Initializes an instance with the specified system type.
            </summary>
    </member>
    <member name="M:OpcXml.Factory.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Contructs a server by de-serializing its URL from the stream.
            </summary>
    </member>
    <member name="M:OpcXml.Factory.CreateInstance(Opc.URL,Opc.ConnectData)">
      <summary>
            Creates a new instance of the server.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientManagementCore.get_AdaptableParameters">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientManagementCore.set_AdaptableParameters(OpcLabs.EasyOpc.DataAccess.Engine.EasyDAAdaptableParameters)">
      <exception cref="T:System.ArgumentNullException">
        <para>
             A <c>null</c> reference (<c>Nothing</c> in Visual Basic) is passed to a method that does not accept it as a valid argument.</para>
        <para>
             This is a usage error, i.e. it will never occur (the exception will not be thrown) in a correctly written program. Your code should not catch this exception.</para>
      </exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientManagementCore.get_ServiceProviderEndpointDescriptor">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientManagementCore.set_ServiceProviderEndpointDescriptor(OpcLabs.BaseLib.EndpointDescriptor)">
      <exception cref="T:System.ArgumentNullException">
        <para>
             A <c>null</c> reference (<c>Nothing</c> in Visual Basic) is passed to a method that does not accept it as a valid argument.</para>
        <para>
             This is a usage error, i.e. it will never occur (the exception will not be thrown) in a correctly written program. Your code should not catch this exception.</para>
      </exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientManagementCore.get_SharedParameters">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientManagementCore.set_SharedParameters(OpcLabs.EasyOpc.DataAccess.Engine.EasyDASharedParameters)">
      <exception cref="T:System.ArgumentNullException">
        <para>
             A <c>null</c> reference (<c>Nothing</c> in Visual Basic) is passed to a method that does not accept it as a valid argument.</para>
        <para>
             This is a usage error, i.e. it will never occur (the exception will not be thrown) in a correctly written program. Your code should not catch this exception.</para>
      </exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientManagementCore.Construct">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientManagementCore.EasyDAClientOnLogEntry(System.Object,OpcLabs.BaseLib.Instrumentation.LogEntryEventArgs)">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientManagementCore.ObjectInvariant">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.OptionalCreateComSecurityInitializingClient(OpcLabs.EasyOpc.DataAccess.IEasyDAClient)">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.OptionalCreatePSBoxingClient(OpcLabs.EasyOpc.DataAccess.IEasyDAClient)">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.get_AliasProvider">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.set_AliasProvider(OpcLabs.BaseLib.Aliasing.Internal.IAliasProvider)">
      <exception cref="T:System.ArgumentNullException">
        <para>
             A <c>null</c> reference (<c>Nothing</c> in Visual Basic) is passed to a method that does not accept it as a valid argument.</para>
        <para>
             This is a usage error, i.e. it will never occur (the exception will not be thrown) in a correctly written program. Your code should not catch this exception.</para>
      </exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.get_XmlNs">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.CreateUserCacheStorageProvider">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.Construct">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.CreateInnerClient2(System.Boolean)">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.ObjectInvariant">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.get_PullItemChangedQueueCapacity">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.set_PullItemChangedQueueCapacity(System.Int32)">
      <exception cref="T:System.ArgumentOutOfRangeException">
        <para>
             The value of an argument is outside the allowable range of values as defined by the invoked method.</para>
        <para>
             This is a usage error, i.e. it will never occur (the exception will not be thrown) in a correctly written program. Your code should not catch this exception.</para>
      </exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.get_SupportedTechnologies">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.get_InnerClient">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.get_InstanceParameters">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.set_InstanceParameters(OpcLabs.EasyOpc.DataAccess.Engine.EasyDAInstanceParameters)">
      <exception cref="T:System.ArgumentNullException">
        <para>
             A <c>null</c> reference (<c>Nothing</c> in Visual Basic) is passed to a method that does not accept it as a valid argument.</para>
        <para>
             This is a usage error, i.e. it will never occur (the exception will not be thrown) in a correctly written program. Your code should not catch this exception.</para>
      </exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.get_IsolatedParameters">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.set_IsolatedParameters(OpcLabs.EasyOpc.DataAccess.Engine.EasyDAAdaptableParameters)">
      <exception cref="T:System.ArgumentNullException">
        <para>
             A <c>null</c> reference (<c>Nothing</c> in Visual Basic) is passed to a method that does not accept it as a valid argument.</para>
        <para>
             This is a usage error, i.e. it will never occur (the exception will not be thrown) in a correctly written program. Your code should not catch this exception.</para>
      </exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.get_LicenseInfo">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.get_PluginManager">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.CreatePipeline(OpcLabs.EasyOpc.DataAccess.IEasyDAClient)">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.CreatePluginManager">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.get_AdaptableParameters">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.set_AdaptableParameters(OpcLabs.EasyOpc.DataAccess.Engine.EasyDAAdaptableParameters)">
      <exception cref="T:System.ArgumentNullException">
        <para>
             A <c>null</c> reference (<c>Nothing</c> in Visual Basic) is passed to a method that does not accept it as a valid argument.</para>
        <para>
             This is a usage error, i.e. it will never occur (the exception will not be thrown) in a correctly written program. Your code should not catch this exception.</para>
      </exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.get_ServiceProviderEndpointDescriptor">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.set_ServiceProviderEndpointDescriptor(OpcLabs.BaseLib.EndpointDescriptor)">
      <exception cref="T:System.ArgumentNullException">
        <para>
             A <c>null</c> reference (<c>Nothing</c> in Visual Basic) is passed to a method that does not accept it as a valid argument.</para>
        <para>
             This is a usage error, i.e. it will never occur (the exception will not be thrown) in a correctly written program. Your code should not catch this exception.</para>
      </exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.get_SharedParameters">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.set_SharedParameters(OpcLabs.EasyOpc.DataAccess.Engine.EasyDASharedParameters)">
      <exception cref="T:System.ArgumentNullException">
        <para>
             A <c>null</c> reference (<c>Nothing</c> in Visual Basic) is passed to a method that does not accept it as a valid argument.</para>
        <para>
             This is a usage error, i.e. it will never occur (the exception will not be thrown) in a correctly written program. Your code should not catch this exception.</para>
      </exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.get_SharedServiceProvider">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.get_SharedPluginManager">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.ClassInvariant">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.CreateNetApiClient(System.Boolean)">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.CreateSharedPluginManager">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.EnsureStaticActivation">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.HookStaticEventHandlers">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.LogOnLogEntry(System.Object,OpcLabs.BaseLib.Instrumentation.LogEntryEventArgs)">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.OnEnableServiceClientChanged">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.RaiseLogEntry(OpcLabs.BaseLib.Instrumentation.LogEntryEventArgs)">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.StaticActivate">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.StaticStorageOnChanged(System.Object,System.EventArgs)">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.#ctor(System.Boolean)">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.CacheStorageProvider">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.ClientSettings">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="P:OpcLabs.EasyOpc.DataAccess.EasyDAClientCore.ClientLicenseInfoProvider">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAItemChangedObservable`1.#ctor(OpcLabs.EasyOpc.DataAccess.Reactive.DAItemChangedObservable)">
      <summary>
            Create a new instance of the item change observable.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Reactive.DAWriteItemValueObserver`1.#ctor(OpcLabs.EasyOpc.DataAccess.Reactive.DAWriteItemValueObserver)">
      <summary>
            Create a new instance of the observer that writes values into an OPC item.
            </summary>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper.InternalGet(System.Collections.Generic.IEnumerable{OpcLabs.EasyOpc.DataAccess.LiveMapping.IDAClientMapping})">
      <exception cref="T:OpcLabs.BaseLib.Licensing.LicensingException">The component is not licensed for the operation requested.</exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper.InternalRead(System.Collections.Generic.IEnumerable{OpcLabs.EasyOpc.DataAccess.LiveMapping.IDAClientMapping})">
      <exception cref="T:OpcLabs.BaseLib.Licensing.LicensingException">The component is not licensed for the operation requested.</exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper.InternalSubscribe(System.Boolean,System.Collections.Generic.IEnumerable{OpcLabs.EasyOpc.DataAccess.LiveMapping.IDAClientMapping})">
      <exception cref="T:OpcLabs.BaseLib.Licensing.LicensingException">The component is not licensed for the operation requested.</exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper.InternalWrite(System.Collections.Generic.IEnumerable{OpcLabs.EasyOpc.DataAccess.LiveMapping.IDAClientMapping})">
      <exception cref="T:OpcLabs.BaseLib.Licensing.LicensingException">The component is not licensed for the operation requested.</exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper.ProcessGets(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientOperationContext)">
      <exception cref="T:OpcLabs.BaseLib.Licensing.LicensingException">The component is not licensed for the operation requested.</exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper.ProcessReads(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientOperationContext)">
      <exception cref="T:OpcLabs.BaseLib.Licensing.LicensingException">The component is not licensed for the operation requested.</exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper.ProcessSubscribes(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientOperationContext)">
      <exception cref="T:OpcLabs.BaseLib.Licensing.LicensingException">The component is not licensed for the operation requested.</exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper.ProcessUnsubscribes(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientOperationContext)">
      <exception cref="T:OpcLabs.BaseLib.Licensing.LicensingException">The component is not licensed for the operation requested.</exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientMapper.ProcessWrites(OpcLabs.EasyOpc.DataAccess.LiveMapping.DAClientOperationContext)">
      <exception cref="T:OpcLabs.BaseLib.Licensing.LicensingException">The component is not licensed for the operation requested.</exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.Implementation.DAPointReader.Read(OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint,OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadParameters,OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointReadArguments)">
      <exception cref="T:OpcLabs.BaseLib.Licensing.LicensingException">The component is not licensed for the operation requested.</exception>
      <exception cref="T:System.NotSupportedException">An invoked method is not supported at all, or is not supported with the parameters used to create the object.</exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.Implementation.DAPointReader.Read(OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPoint,OpcLabs.EasyOpc.DataAccess.Connectivity.DAPropertyPointReadArguments)">
      <exception cref="T:OpcLabs.BaseLib.Licensing.LicensingException">The component is not licensed for the operation requested.</exception>
      <exception cref="T:System.NotSupportedException">An invoked method is not supported at all, or is not supported with the parameters used to create the object.</exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.Implementation.DAPointReader.OpcLabs.BaseLib.Connectivity.Point.Internal.IPointReader.Read(System.Object,System.Object,System.Object)">
      <exception cref="T:OpcLabs.BaseLib.Licensing.LicensingException">The component is not licensed for the operation requested.</exception>
      <exception cref="T:System.NotSupportedException">An invoked method is not supported at all, or is not supported with the parameters used to create the object.</exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.Implementation.DAPointReader.RenewClient">
      <exception cref="T:OpcLabs.BaseLib.Licensing.LicensingException">The component is not licensed for the operation requested.</exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.Implementation.DAPointSubscriber.RenewClient">
      <exception cref="T:OpcLabs.BaseLib.Licensing.LicensingException">The component is not licensed for the operation requested.</exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.Implementation.DAPointSubscriber.#ctor(OpcLabs.EasyOpc.DataAccess.Connectivity.DAConnectivityCore)">
      <exception cref="T:OpcLabs.BaseLib.Licensing.LicensingException">The component is not licensed for the operation requested.</exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.Implementation.DAPointWriter.Write(OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPoint,OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteParameters,OpcLabs.EasyOpc.DataAccess.Connectivity.DAItemPointWriteArguments)">
      <exception cref="T:OpcLabs.BaseLib.Licensing.LicensingException">The component is not licensed for the operation requested.</exception>
      <exception cref="T:System.NotSupportedException">An invoked method is not supported at all, or is not supported with the parameters used to create the object.</exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.Implementation.DAPointWriter.OpcLabs.BaseLib.Connectivity.Point.Internal.IPointWriter.Write(System.Object,System.Object,System.Object)">
      <exception cref="T:OpcLabs.BaseLib.Licensing.LicensingException">The component is not licensed for the operation requested.</exception>
      <exception cref="T:System.NotSupportedException">An invoked method is not supported at all, or is not supported with the parameters used to create the object.</exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.Implementation.DAPointWriter.PerformActs(System.Collections.Generic.IEnumerable{OpcLabs.BaseLib.Connectivity.Point.Internal.ActRecord})">
      <exception cref="T:OpcLabs.BaseLib.Licensing.LicensingException">The component is not licensed for the operation requested.</exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.Connectivity.Implementation.DAPointWriter.RenewClient">
      <exception cref="T:OpcLabs.BaseLib.Licensing.LicensingException">The component is not licensed for the operation requested.</exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClientManagement.set_AdaptableParameters(OpcLabs.EasyOpc.DataAccess.Engine.EasyDAAdaptableParameters)">
      <exception cref="T:System.ArgumentNullException">
        <para>
             A <c>null</c> reference (<c>Nothing</c> in Visual Basic) is passed to a method that does not accept it as a valid argument.</para>
        <para>
             This is a usage error, i.e. it will never occur (the exception will not be thrown) in a correctly written program. Your code should not catch this exception.</para>
      </exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClientManagement.set_ServiceProviderEndpointDescriptor(OpcLabs.BaseLib.EndpointDescriptor)">
      <exception cref="T:System.ArgumentNullException">
        <para>
             A <c>null</c> reference (<c>Nothing</c> in Visual Basic) is passed to a method that does not accept it as a valid argument.</para>
        <para>
             This is a usage error, i.e. it will never occur (the exception will not be thrown) in a correctly written program. Your code should not catch this exception.</para>
      </exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClientManagement.set_SharedParameters(OpcLabs.EasyOpc.DataAccess.Engine.EasyDASharedParameters)">
      <exception cref="T:System.ArgumentNullException">
        <para>
             A <c>null</c> reference (<c>Nothing</c> in Visual Basic) is passed to a method that does not accept it as a valid argument.</para>
        <para>
             This is a usage error, i.e. it will never occur (the exception will not be thrown) in a correctly written program. Your code should not catch this exception.</para>
      </exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClientSelector.get_StandardName">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.DataAccess.ComTypes._EasyDAClientSelector.set_StandardName(System.String)">
      <exception cref="T:System.ArgumentException">
        <para>
             One of the arguments provided to a method is not valid.</para>
        <para>
             This is a usage error, i.e. it will never occur (the exception will not be thrown) in a correctly written program. Your code should not catch this exception.</para>
      </exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientManagementCore.get_AdaptableParameters">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientManagementCore.set_AdaptableParameters(OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEAdaptableParameters)">
      <exception cref="T:System.ArgumentNullException">
        <para>
             A <c>null</c> reference (<c>Nothing</c> in Visual Basic) is passed to a method that does not accept it as a valid argument.</para>
        <para>
             This is a usage error, i.e. it will never occur (the exception will not be thrown) in a correctly written program. Your code should not catch this exception.</para>
      </exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientManagementCore.get_SharedParameters">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientManagementCore.set_SharedParameters(OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAESharedParameters)">
      <exception cref="T:System.ArgumentNullException">
        <para>
             A <c>null</c> reference (<c>Nothing</c> in Visual Basic) is passed to a method that does not accept it as a valid argument.</para>
        <para>
             This is a usage error, i.e. it will never occur (the exception will not be thrown) in a correctly written program. Your code should not catch this exception.</para>
      </exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientManagementCore.Construct">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientManagementCore.EasyAEClientOnLogEntry(System.Object,OpcLabs.BaseLib.Instrumentation.LogEntryEventArgs)">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientManagementCore.ObjectInvariant">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.OptionalCreateComSecurityInitializingClient(OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient)">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.OptionalCreatePSBoxingClient(OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient)">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.get_AliasProvider">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.set_AliasProvider(OpcLabs.BaseLib.Aliasing.Internal.IAliasProvider)">
      <exception cref="T:System.ArgumentNullException">
        <para>
             A <c>null</c> reference (<c>Nothing</c> in Visual Basic) is passed to a method that does not accept it as a valid argument.</para>
        <para>
             This is a usage error, i.e. it will never occur (the exception will not be thrown) in a correctly written program. Your code should not catch this exception.</para>
      </exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.get_XmlNs">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.Construct">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.CreateUserCacheStorageProvider">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.CreateInnerClient2(System.Boolean)">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.ObjectInvariant">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.get_PullNotificationQueueCapacity">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.set_PullNotificationQueueCapacity(System.Int32)">
      <exception cref="T:System.ArgumentOutOfRangeException">
        <para>
             The value of an argument is outside the allowable range of values as defined by the invoked method.</para>
        <para>
             This is a usage error, i.e. it will never occur (the exception will not be thrown) in a correctly written program. Your code should not catch this exception.</para>
      </exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.get_SupportedTechnologies">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.get_InnerClient">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.get_InstanceParameters">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.set_InstanceParameters(OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEInstanceParameters)">
      <exception cref="T:System.ArgumentNullException">
        <para>
             A <c>null</c> reference (<c>Nothing</c> in Visual Basic) is passed to a method that does not accept it as a valid argument.</para>
        <para>
             This is a usage error, i.e. it will never occur (the exception will not be thrown) in a correctly written program. Your code should not catch this exception.</para>
      </exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.get_Isolated">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.set_Isolated(System.Boolean)">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.get_IsolatedParameters">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.set_IsolatedParameters(OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEAdaptableParameters)">
      <exception cref="T:System.ArgumentNullException">
        <para>
             A <c>null</c> reference (<c>Nothing</c> in Visual Basic) is passed to a method that does not accept it as a valid argument.</para>
        <para>
             This is a usage error, i.e. it will never occur (the exception will not be thrown) in a correctly written program. Your code should not catch this exception.</para>
      </exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.get_LicenseInfo">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.get_PluginManager">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.CreatePipeline(OpcLabs.EasyOpc.AlarmsAndEvents.IEasyAEClient)">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.CreatePluginManager">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.get_AdaptableParameters">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.set_AdaptableParameters(OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEAdaptableParameters)">
      <exception cref="T:System.ArgumentNullException">
        <para>
             A <c>null</c> reference (<c>Nothing</c> in Visual Basic) is passed to a method that does not accept it as a valid argument.</para>
        <para>
             This is a usage error, i.e. it will never occur (the exception will not be thrown) in a correctly written program. Your code should not catch this exception.</para>
      </exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.get_SharedParameters">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.set_SharedParameters(OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAESharedParameters)">
      <exception cref="T:System.ArgumentNullException">
        <para>
             A <c>null</c> reference (<c>Nothing</c> in Visual Basic) is passed to a method that does not accept it as a valid argument.</para>
        <para>
             This is a usage error, i.e. it will never occur (the exception will not be thrown) in a correctly written program. Your code should not catch this exception.</para>
      </exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.get_SharedServiceProvider">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.get_SharedPluginManager">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.ClassInvariant">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.CreateNetApiClient(System.Boolean)">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.CreateSharedPluginManager">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.EnsureStaticActivation">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.HookStaticEventHandlers">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.LogOnLogEntry(System.Object,OpcLabs.BaseLib.Instrumentation.LogEntryEventArgs)">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.OnAdaptableParametersChanged">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.OnSharedParametersChanged">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.RaiseLogEntry(OpcLabs.BaseLib.Instrumentation.LogEntryEventArgs)">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.StaticActivate">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.StaticStorageOnChanged(System.Object,System.EventArgs)">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.#ctor(System.Boolean)">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.UserCacheStorageProvider">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.ClientSettings">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="P:OpcLabs.EasyOpc.AlarmsAndEvents.EasyAEClientCore.ClientLicenseInfoProvider">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClientManagement.set_AdaptableParameters(OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAEAdaptableParameters)">
      <exception cref="T:System.ArgumentNullException">
        <para>
             A <c>null</c> reference (<c>Nothing</c> in Visual Basic) is passed to a method that does not accept it as a valid argument.</para>
        <para>
             This is a usage error, i.e. it will never occur (the exception will not be thrown) in a correctly written program. Your code should not catch this exception.</para>
      </exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClientManagement.set_SharedParameters(OpcLabs.EasyOpc.AlarmsAndEvents.Engine.EasyAESharedParameters)">
      <exception cref="T:System.ArgumentNullException">
        <para>
             A <c>null</c> reference (<c>Nothing</c> in Visual Basic) is passed to a method that does not accept it as a valid argument.</para>
        <para>
             This is a usage error, i.e. it will never occur (the exception will not be thrown) in a correctly written program. Your code should not catch this exception.</para>
      </exception>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClientSelector.get_StandardName">
      <remarks>
        <para>
             This method or property does not throw any exceptions, aside from execution exceptions such as
             <see cref="T:System.Threading.ThreadAbortException" /> or <see cref="T:System.OutOfMemoryException" />. </para>
      </remarks>
    </member>
    <member name="M:OpcLabs.EasyOpc.AlarmsAndEvents.ComTypes._EasyAEClientSelector.set_StandardName(System.String)">
      <exception cref="T:System.ArgumentException">
        <para>
             One of the arguments provided to a method is not valid.</para>
        <para>
             This is a usage error, i.e. it will never occur (the exception will not be thrown) in a correctly written program. Your code should not catch this exception.</para>
      </exception>
    </member>
  </members>
</doc>